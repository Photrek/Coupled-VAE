(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[   1552079,      28866]
NotebookOptionsPosition[   1545814,      28753]
NotebookOutlinePosition[   1546199,      28770]
CellTagsIndexPosition[   1546156,      28767]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Hyper Parameter", "Subsection",
 CellChangeTimes->{{3.739551732245135*^9, 
  3.739551736385481*^9}},ExpressionUUID->"a97b6548-7444-4f52-8385-\
55f7e3aac111"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"nlatent", " ", "=", " ", "2"}], ";", " ", 
    RowBox[{
     RowBox[{
     "latent", " ", "loss", " ", "function", " ", "seems", " ", "to", " ", 
      "depend", " ", "on", " ", "nlatent"}], " ", "=", " ", "8"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nlatent", " ", "=", " ", "8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sampleSize", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"sampleSize", "=", " ", "60000"}], ";"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.739551316690058*^9, 3.739551333600608*^9}, {
   3.7396686423057833`*^9, 3.7396686465900373`*^9}, 3.739670092731775*^9, {
   3.739717174778987*^9, 3.739717181629671*^9}, {3.803656202649231*^9, 
   3.8036562341122913`*^9}, {3.803685813363207*^9, 3.803685864633708*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"d8eb4aa3-ea91-4560-a5e4-89e2aa5ad890"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Encoder", "Subsection",
 CellChangeTimes->{{3.739551680305462*^9, 3.739551682201329*^9}, 
   3.739797298066251*^9, {3.739797342840246*^9, 
   3.7397973460662866`*^9}},ExpressionUUID->"8fef335a-119a-4684-9c73-\
4161c696fc69"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lrelu", " ", "=", " ", 
  RowBox[{"ElementwiseLayer", "[", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"Ramp", "[", "#", "]"}], ",", " ", 
      RowBox[{"#", "*", "0.3"}]}], "]"}], "&"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739551680305462*^9, 3.739551682201329*^9}, 
   3.739797298066251*^9, {3.739797342840246*^9, 3.739797397032279*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"37b3c95e-cf6e-4345-8213-2834e7838772"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["ElementwiseLayer", "SummaryHead"], "NonInterpretableSummary"], 
      
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Function\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   FormBox[
                    RowBox[{"max", "(", 
                    RowBox[{
                    RowBox[{"0.3`", " ", "\"x\""}], ",", 
                    RowBox[{"Ramp", "[", "\"x\"", "]"}]}], ")"}], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014705882352941176`], {
                 RGBColor[0.557, 0.557, 0.557], 
                 RGBColor[0.33, 0.33, 0.33], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 18.5}, {14., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.557, 0.557, 0.557], 
                 Thickness[0.015029411764705883`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{52.5, 18.5}, {44., 18.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.85, 0.85, 0.85], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.23,
                   18.5}, {33.5, 29.77}, {44.77, 18.5}, {33.5, 7.23}}}]}, {
                 FaceForm[{
                   RGBColor[0.56, 0.56, 0.56], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{33.5, 30.29}, {21.71, 
                  18.5}, {33.5, 6.71}, {45.29, 18.5}}, {{33.5, 29.25}, {44.25,
                   18.5}, {33.5, 7.75}, {22.75, 18.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{53.56, 15.4}, {51.88, 15.4}, {50.52, 16.76}, {
                  50.52, 18.44}, {50.52, 20.12}, {51.88, 21.48}, {53.56, 
                  21.48}, {55.24, 21.48}, {56.6, 20.12}, {56.6, 18.44}, {56.6,
                   16.76}, {55.24, 15.4}, {53.56, 15.4}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}}}, {{{53.56, 21.83}, {51.69, 21.83}, {50.17, 
                   20.31}, {50.17, 18.44}, {50.17, 16.57}, {51.69, 15.05}, {
                   53.56, 15.05}, {55.43, 15.05}, {56.95, 16.57}, {56.95, 
                   18.44}, {56.95, 20.31}, {55.43, 21.83}, {53.56, 21.83}}, {{
                   53.56, 21.83}, {53.56, 21.13}, {55.04, 21.13}, {56.25, 
                   19.92}, {56.25, 18.44}, {56.25, 16.96}, {55.04, 15.75}, {
                   53.56, 15.75}, {52.08, 15.75}, {50.87, 16.96}, {50.87, 
                   18.44}, {50.87, 19.92}, {52.08, 21.13}, {53.56, 21.13}, {
                   53.56, 21.83}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{13.56, 15.5}, {11.94, 15.5}, {10.62, 16.82}, {
                  10.62, 18.44}, {10.62, 20.06}, {11.94, 21.38}, {13.56, 
                  21.38}, {15.18, 21.38}, {16.5, 20.06}, {16.5, 18.44}, {16.5,
                   16.82}, {15.18, 15.5}, {13.56, 15.5}}}]}, {
                 FaceForm[{
                   RGBColor[
                   0.43900000000000006`, 0.43900000000000006`, 
                    0.43900000000000006`], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}}}, {{{13.56, 21.73}, {11.74, 21.73}, {10.27, 
                   20.26}, {10.27, 18.44}, {10.27, 16.62}, {11.74, 15.15}, {
                   13.56, 15.15}, {15.38, 15.15}, {16.85, 16.62}, {16.85, 
                   18.44}, {16.85, 20.26}, {15.38, 21.73}, {13.56, 
                   21.73}}, CompressedData["
1:eJxTTMoPSmViYGAQBmIQLd/6OnCHnLaDx8MqkXXspg4MINCgA+efPQMCug6H
v2rE9B8ygYgf13MAa3M1gYrrQ8WNHdJAQM3AAcR1V0TwC225ri8uMILzwfqY
DB2qgcoe/tJ1MAaBzfoOMPfA+GBtezXhfIg5GlB1Bg7fQNaXqjsAya8acwwg
5lWpOcyaCQSShhD1H1Qh/jqA4MPcA+ODzbtnDHGXkwbc/+jhAwASgHiO
                   
                   "]}]}}, ImageSize -> {40, Automatic}], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"Function\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TagBox[
                   FormBox[
                    RowBox[{"max", "(", 
                    RowBox[{
                    RowBox[{"0.3`", " ", "\"x\""}], ",", 
                    RowBox[{"Ramp", "[", "\"x\"", "]"}]}], ")"}], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}}, 
               BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 3}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ElementwiseLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7472647918872347`*^9, 3.801876245394264*^9, 
  3.8018831503436728`*^9, 3.801884484869289*^9, 3.80365625510356*^9, 
  3.803684679862954*^9, 3.803685914798499*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"b376d340-093a-47b3-8ab3-2a0570dc7e4a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"encoder", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "1"}], ",", " ", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"FlattenLayer", "[", "]"}]}], "\[IndentingNewLine]", "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7395491087158737`*^9, 3.73954917811176*^9}, {
   3.739549218210209*^9, 3.7395492956660833`*^9}, {3.7395493546752667`*^9, 
   3.7395493694767766`*^9}, {3.739550100213616*^9, 3.7395501005517516`*^9}, 
   3.7395506987487946`*^9, {3.739550763158961*^9, 3.7395507829405527`*^9}, {
   3.7395513101844034`*^9, 3.7395513112562037`*^9}, {3.739553041169927*^9, 
   3.7395530814694223`*^9}, {3.7396427053090143`*^9, 
   3.7396427062149363`*^9}, {3.7397064531160984`*^9, 3.7397064556743484`*^9}, 
   3.739716288881195*^9, {3.7397197436824937`*^9, 3.73971974511782*^9}, {
   3.7397382200078974`*^9, 3.739738237032915*^9}, {3.7397386776756477`*^9, 
   3.7397387248926487`*^9}, {3.739738764458597*^9, 3.7397388295626097`*^9}, {
   3.739738946903629*^9, 3.7397389531816115`*^9}, {3.739739030868601*^9, 
   3.7397390745136156`*^9}, {3.73973918457199*^9, 3.739739184768979*^9}, {
   3.739739235728995*^9, 3.7397392421189823`*^9}, {3.7397393644694333`*^9, 
   3.7397393798952384`*^9}, {3.739756551760101*^9, 3.739756555321489*^9}, {
   3.7397569889289956`*^9, 3.739756995272276*^9}, {3.7397573111038747`*^9, 
   3.739757319776167*^9}, {3.739796901869957*^9, 3.7397969077870407`*^9}, {
   3.73979740163824*^9, 3.739797405355241*^9}, {3.7398000923253517`*^9, 
   3.7398001425868797`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"b61fd62d-6249-4276-95f6-4e6f7dbc912f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Middle Trick Z layer", "Subsection",
 CellChangeTimes->{{3.739551687254616*^9, 
  3.7395516940382557`*^9}},ExpressionUUID->"1d510bfb-5494-494c-a291-\
1cda52559c0d"],

Cell["\<\
Use Coupled Exponential in place of Exponential to generalize latent variable
Initialize with \[Kappa] = 0.5 for initial experiment
However, will need to examine whether the \[OpenCurlyQuote]reparameterization \
trick\[CloseCurlyQuote] still works with this generalization\
\>", "Text",
 CellChangeTimes->{{3.803684892871401*^9, 3.8036849173905363`*^9}, {
  3.803685209919773*^9, 3.8036852232268543`*^9}, {3.803686699549967*^9, 
  3.803686728584861*^9}},ExpressionUUID->"ddd42f53-221c-470b-b127-\
c99cc96f0098"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mn", " ", "=", " ", 
   RowBox[{"LinearLayer", "[", "nlatent", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sd", "=", " ", 
    RowBox[{"NetChain", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LinearLayer", "[", "nlatent", "]"}], ",", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"#", "*", "0.5"}], "&"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"expSd", " ", "=", " ", 
     RowBox[{"ElementwiseLayer", "[", 
      RowBox[{
       RowBox[{"Exp", "[", "#", "]"}], "&"}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coupledExpSd", " ", "=", " ", 
   RowBox[{"ElementwiseLayer", "[", 
    RowBox[{
     RowBox[{"CoupledExponential", "[", 
      RowBox[{"#", ",", 
       RowBox[{"\[Kappa]Dist", "=", "0.5"}]}], "]"}], "&"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z", " ", "=", 
   RowBox[{"TotalLayer", "[", "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",\

 CellChangeTimes->{{3.7395491087158737`*^9, 3.73954917811176*^9}, {
   3.739549218210209*^9, 3.7395492956660833`*^9}, {3.7395493546752667`*^9, 
   3.7395493694767766`*^9}, {3.739550100213616*^9, 3.7395501005517516`*^9}, {
   3.7395506987487946`*^9, 3.739550715179901*^9}, {3.7395512449249754`*^9, 
   3.739551276851375*^9}, 3.7395513375830107`*^9, {3.7395515781816907`*^9, 
   3.7395515847436523`*^9}, {3.7395529647125893`*^9, 
   3.7395529676392713`*^9}, {3.739553158868684*^9, 3.7395532248187704`*^9}, {
   3.739553457330779*^9, 3.739553521142729*^9}, {3.739553908178919*^9, 
   3.739553930029264*^9}, {3.739554079763504*^9, 3.7395540897121577`*^9}, {
   3.739554133563135*^9, 3.7395542311423635`*^9}, {3.7395546155509634`*^9, 
   3.7395546362187023`*^9}, {3.7395546795450125`*^9, 3.739554687174427*^9}, {
   3.739554745978673*^9, 3.7395547579545517`*^9}, {3.7395550832738695`*^9, 
   3.7395550911013155`*^9}, {3.739563601684586*^9, 3.739563634298044*^9}, {
   3.7395779331005144`*^9, 3.7395779348582907`*^9}, {3.7395801891391616`*^9, 
   3.739580189373973*^9}, {3.739653171873227*^9, 3.739653173339471*^9}, {
   3.739653666217244*^9, 3.7396536862047267`*^9}, {3.739658054893764*^9, 
   3.7396580554502954`*^9}, {3.739800365648552*^9, 3.739800368103361*^9}, {
   3.803685160883511*^9, 3.803685200640407*^9}, {3.803685399911632*^9, 
   3.803685401904567*^9}, 3.803689080950015*^9, {3.8040082723889523`*^9, 
   3.804008273118238*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"5ffd5e94-746f-4af8-ba2d-32f494356219"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Decoder", "Subsection",
 CellChangeTimes->{{3.7395516987804565`*^9, 
  3.7395517004113936`*^9}},ExpressionUUID->"b8773a27-cd1e-48ec-8d51-\
81bf6ff63b4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"decoder", " ", "=", " ", 
   RowBox[{"NetChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "25", ",", "\[IndentingNewLine]", "lrelu", ",", "\[IndentingNewLine]", 
      "49", ",", " ", "\[IndentingNewLine]", "lrelu", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "7"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "2"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"DropoutLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DeconvolutionLayer", "[", 
       RowBox[{"64", ",", " ", "4", ",", " ", 
        RowBox[{"\"\<Stride\>\"", "\[Rule]", "1"}], ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", "2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Ramp", ",", "\[IndentingNewLine]", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"28", "*", "28"}], ",", "\[IndentingNewLine]", 
      "LogisticSigmoid", ",", "\[IndentingNewLine]", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "28", ",", "28"}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7395494974551506`*^9, 3.7395495046283197`*^9}, {
   3.7395510248368125`*^9, 3.7395510310459833`*^9}, {3.7395530865320435`*^9, 
   3.7395530890187006`*^9}, {3.739574426986454*^9, 3.7395744331238127`*^9}, {
   3.739574497367547*^9, 3.7395744993428903`*^9}, 3.7396531773926125`*^9, {
   3.739706461019185*^9, 3.7397064632360244`*^9}, {3.7397162948216295`*^9, 
   3.73971630056956*^9}, {3.739719747686528*^9, 3.739719749966364*^9}, {
   3.739738264288909*^9, 3.7397382739389133`*^9}, {3.739738853730604*^9, 
   3.7397389720616074`*^9}, {3.73973938318534*^9, 3.739739384977476*^9}, {
   3.739739420803893*^9, 3.739739443681853*^9}, {3.7397396218078933`*^9, 
   3.7397396313349075`*^9}, {3.7397396799720216`*^9, 3.739739681793908*^9}, {
   3.7397397124359007`*^9, 3.739739730399901*^9}, {3.739739814692984*^9, 
   3.73973981614898*^9}, {3.739739865804993*^9, 3.7397398829687643`*^9}, {
   3.7397566218803396`*^9, 3.739756681167693*^9}, {3.739756759474098*^9, 
   3.739756837663678*^9}, {3.73975693884508*^9, 3.7397569632685223`*^9}, {
   3.7397573254543333`*^9, 3.7397573339639964`*^9}, {3.739793536041973*^9, 
   3.739793542061054*^9}, {3.7397944858854265`*^9, 3.739794489394738*^9}, {
   3.7397969140676365`*^9, 3.7397969186518593`*^9}, {3.739800489331607*^9, 
   3.7398005375078735`*^9}, {3.7398006155175943`*^9, 
   3.7398006279111056`*^9}, {3.7398008319336505`*^9, 3.73980083207866*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"edbf0ee2-cf30-4d82-9dab-f9b0c346225e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ImageLoss", "Subsection",
 CellChangeTimes->{{3.7396580504733496`*^9, 
  3.739658066790998*^9}},ExpressionUUID->"1510df37-b6e3-4059-8d8a-\
68933a55834f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Assume", " ", "input", " ", "is", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "28", ",", "28"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "output", " ", "the", " ", "real", " ", "number", " ", "as", " ", "wll"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"imageLoss", " ", "=", " ", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "*", "#"}], " ", "&"}], "]"}], ",", " ", 
       RowBox[{"TotalLayer", "[", "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"#", "^", "2"}], "&"}], "]"}], ",", " ", 
       RowBox[{"ReshapeLayer", "[", 
        RowBox[{"{", 
         RowBox[{"28", ",", "28"}], "}"}], "]"}], ",", " ", 
       RowBox[{"SummationLayer", "[", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<inDec\>\"", "]"}], "\[Rule]", 
        RowBox[{"1", "->", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<inInput\>\"", "]"}], "\[Rule]", "2"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"3", "\[Rule]", 
         RowBox[{"4", "\[Rule]", "5"}]}]}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
   3.739658183848325*^9, 3.739658231838282*^9}, {3.7396582697827425`*^9, 
   3.7396582776903963`*^9}, {3.739658334942755*^9, 3.739658339791144*^9}, {
   3.7396589960878963`*^9, 3.739658999169059*^9}, {3.7396598749534454`*^9, 
   3.7396598778682594`*^9}, {3.739659999094411*^9, 3.739659999297686*^9}, {
   3.739660029523304*^9, 3.73966003873488*^9}, {3.739660095430449*^9, 
   3.7396601408837013`*^9}, {3.73966033166679*^9, 3.739660332402121*^9}, {
   3.739660371402605*^9, 3.739660372759054*^9}, {3.739801871719342*^9, 
   3.7398018874229064`*^9}, {3.7398027411215754`*^9, 
   3.7398027730066285`*^9}, {3.739803124346739*^9, 3.739803152802951*^9}, 
   3.739803211448743*^9, {3.739803623768796*^9, 3.739803641118581*^9}, 
   3.739803682781166*^9, {3.739803715240907*^9, 3.739803716062747*^9}, {
   3.7398038647194386`*^9, 3.739803865080753*^9}, {3.739804183405492*^9, 
   3.739804183776039*^9}, {3.7398042395820026`*^9, 3.739804250000084*^9}, {
   3.7398044941909447`*^9, 3.7398045212432337`*^9}, {3.739804905798359*^9, 
   3.739804958637001*^9}, {3.739805080714749*^9, 3.7398050831231155`*^9}, {
   3.7398075943133726`*^9, 3.739807629214981*^9}, {3.739807748553124*^9, 
   3.7398077671812134`*^9}, {3.739807829325135*^9, 3.7398078337119646`*^9}, {
   3.739808060318533*^9, 3.739808060482891*^9}, {3.739808111369532*^9, 
   3.73980811410174*^9}, {3.739808196752138*^9, 3.739808196923518*^9}, {
   3.739808436809472*^9, 3.73980844868378*^9}, {3.7398085609394836`*^9, 
   3.7398085610534115`*^9}, {3.739808666071518*^9, 3.739808670784358*^9}, 
   3.7398090468229074`*^9, {3.739809202091514*^9, 3.7398092193793154`*^9}, {
   3.7398093821562147`*^9, 3.739809382282889*^9}, {3.739809414304573*^9, 
   3.739809421663409*^9}, {3.7398094899230976`*^9, 3.739809607759758*^9}, {
   3.7398096408717833`*^9, 3.739809694435369*^9}, {3.7398099356477766`*^9, 
   3.7398099479985595`*^9}, {3.739810026899426*^9, 3.7398100296190786`*^9}, {
   3.7398100999142323`*^9, 3.7398101076445475`*^9}, {3.739810145297225*^9, 
   3.73981016437331*^9}, {3.739915434894289*^9, 3.73991547693605*^9}, {
   3.739917009501216*^9, 3.739917016333226*^9}, {3.739918398086446*^9, 
   3.7399184090230455`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"f0396d21-c023-4886-859b-4555aa089e09"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}}], 
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-5., 1.0000000000000002`}, {-4., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-5.4, 
                    3.3065463576978537`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736762*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999999}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6., 3.6739403974420594`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"inDec\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["inDec", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., 3.061616997868383*^-16}], 
                    Offset[{10, 10}, {-5., 3.061616997868383*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-5., 
                    3.061616997868383*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[#]& , {4, 3}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-4., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-4., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {Automatic, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"inInput\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["inInput", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-3., 
                    1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}], "2"], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[#^2& , {4, 3}]]], FontFamily -> "Source Code Pro",
                     ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"R\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ReshapeLayer", "[", 
                    RowBox[{"{", 
                    RowBox[{"28", ",", "28"}], "}"}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    ReshapeLayer[{28, 28}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SummationLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"28", ",", "28"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["5", Bold], 
                    Style[
                    HoldForm[
                    SummationLayer["Input" -> {28, 28}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"inDec\"", TraditionalForm], 
                    Offset[{0, -7}, {-6., 3.6739403974420594`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -13}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"inInput\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.3677786976552195`*^-16, 5.5}, {-5.4, 
                    3.3065463576978537`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736762*^-17}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.8890872965260117`}, {-4.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865476, 0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-6., 3.6739403974420594`*^-16}, {-5., 
                    3.061616997868383*^-16}, {-4., 1.0000000000000002`}, {-5.,
                     1.0000000000000002`}, {-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 8, 20, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {380.5, 96.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{24., 26.5}, {27., 14.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["inDec" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "inInput" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28, 28}], 
                    "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{28, 28}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"inDec\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"inInput\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7399154623567705`*^9, 3.7399154841591644`*^9}, 
   3.7399181767859435`*^9, 3.7472649387432337`*^9, 3.801876263370675*^9, 
   3.801883174028372*^9, 3.8018846149619007`*^9, 3.8036562800716953`*^9, 
   3.803685373750155*^9, 3.803685928118013*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"88ad8124-c409-4861-877d-f1273cefbc62"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7398079772824926`*^9, 3.739808011739949*^9}, 
   3.7398080585236807`*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"cd8471b6-4cdc-45fd-b167-bbeeefcad251"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Latent Loss", "Subsection",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
  3.739658183848325*^9, 3.7396581867788134`*^9}, {3.7396607866514063`*^9, 
  3.739660791490347*^9}},ExpressionUUID->"1de5c636-2c07-4bc9-98bb-\
1e273b057422"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Assume", " ", "input", " ", "is", " ", 
     RowBox[{"{", "8", "}"}]}], ",", " ", 
    RowBox[{"{", "8", "}"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"What", " ", "input", " ", "is", " ", 
    RowBox[{"8", "?", "  ", "Is"}], " ", "the", " ", 
    RowBox[{"nlatent", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"latentLoss", " ", "=", " ", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "0.5"}], "*", "#"}], "&"}], "]"}], ",", " ", 
       RowBox[{"TotalLayer", "[", "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"#", "^", "2"}], ")"}]}], "&"}], "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Exp", "[", 
           RowBox[{"2", "*", "#"}], "]"}]}], "&"}], "]"}], ",", " ", 
       RowBox[{"ElementwiseLayer", "[", 
        RowBox[{
         RowBox[{"1", "+", 
          RowBox[{"2", "*", "#"}]}], "&"}], "]"}], ",", 
       RowBox[{"SummationLayer", "[", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<mn\>\"", "]"}], "\[Rule]", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<sd\>\"", "]"}], "\[Rule]", "4"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<sd\>\"", "]"}], "\[Rule]", "5"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"3", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"4", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"5", "\[Rule]", "2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"2", "\[Rule]", "6"}], ",", "\[IndentingNewLine]", 
       RowBox[{"6", "\[Rule]", "1"}]}], "\[IndentingNewLine]", "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
   3.739658183848325*^9, 3.7396581867788134`*^9}, {3.7396607866514063`*^9, 
   3.7396608011688447`*^9}, {3.739661785555604*^9, 3.73966179277761*^9}, {
   3.739661875765953*^9, 3.739662019573432*^9}, {3.739662169718382*^9, 
   3.7396623039581375`*^9}, {3.739662471213227*^9, 3.739662489242158*^9}, {
   3.739662676125009*^9, 3.7396626768218703`*^9}, {3.739662716331247*^9, 
   3.739662765525912*^9}, {3.7396629501185417`*^9, 3.7396629508067074`*^9}, {
   3.739738308445907*^9, 3.739738311391897*^9}, {3.739801684337245*^9, 
   3.7398016966389213`*^9}, {3.739801777185547*^9, 3.739801783970646*^9}, {
   3.7398029610184975`*^9, 3.7398029663454523`*^9}, {3.7398032169269686`*^9, 
   3.739803227170117*^9}, {3.739808120429064*^9, 3.739808122342973*^9}, 
   3.739808194907878*^9, {3.7398083916319027`*^9, 3.739808397133438*^9}, {
   3.739808431454223*^9, 3.739808451609259*^9}, {3.7398085573416867`*^9, 
   3.7398085717260637`*^9}, {3.7398086417986193`*^9, 3.739808659401613*^9}, {
   3.739808986907992*^9, 3.7398089922877884`*^9}, {3.7398092276350017`*^9, 
   3.739809254920138*^9}, {3.803685647190844*^9, 3.803685658341961*^9}, {
   3.803685727597911*^9, 3.8036857389008923`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"a483c109-1890-41a9-a395-427c3de3b8fa"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-5., 1.0000000000000002`}, {-4., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-5., 2.0000000000000004`}, {-4., 
                    2.0000000000000004`}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-4., 2.0000000000000004`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.0000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.4000000000000004`}, {-0.25, 0}, 
                    Offset[8], {1., -1.0000000000000002`}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 3.061616997868383*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{10, 10}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    2.4492935982947064`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Power", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[#^2]& , {4, 3}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}],
                     "}"}]}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer[
                    "Inputs" -> {Automatic, Automatic, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-4., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[Minus[
                    Exp[2 #]]& , {4, 3}]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.0000000000000004`}], 
                    Offset[{10, 10}, {-4., 2.0000000000000004`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], TraditionalForm]], {-4., 
                    2.0000000000000004`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{"1", "+", 
                    RowBox[{"Times", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["5", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[1 + 2 #& , {4, 3}]]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"6\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SummationLayer", "[", "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["6", Bold], 
                    Style[
                    HoldForm[
                    SummationLayer[]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999999999999, 1.}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.5`"}], " ", 
                    RowBox[{"Slot", "[", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "]"}]}], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "\"Real\""}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[(-0.5) #& , {4, 3}], "Input" -> "Real"]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 2.0000000000000004`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"mn\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"6\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 2.0000000000000004`}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.889087296526011}, {-3.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, 2.0000000000000004`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.8890872965260117`, 3.889087296526011}, {-3.4, 
                    1.4000000000000004`}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865476}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"\[DottedSquare]\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}, {-5., 1.0000000000000002`}, {-4., 
                    1.0000000000000002`}, {-4., 2.0000000000000004`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}, {-5., 2.0000000000000004`}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 8, 20, 20, 20, 20, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {325.5, 151.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{24., 26.5}, {27., 14.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Nodes", "6"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["mn" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "sd" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], "$Dimensions" -> 
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "3" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{NeuralNetworks`SizeT}, 
                    
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"mn\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"sd\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7396622608373156`*^9, 3.7396623048376093`*^9, 3.739662490138748*^9, 
   3.739662677868455*^9, {3.7396627190934453`*^9, 3.739662766685849*^9}, 
   3.739662951665894*^9, 3.7396688808984756`*^9, 3.7397059847251883`*^9, 
   3.739715928031291*^9, 3.7397163059861856`*^9, 3.73971819227499*^9, 
   3.739719258063177*^9, 3.7397197586233573`*^9, 3.7397379954984074`*^9, {
   3.7397382835968947`*^9, 3.739738311949894*^9}, 3.7397390042925987`*^9, 
   3.739739343693228*^9, 3.739757006512022*^9, 3.739792669931624*^9, 
   3.7397969432157946`*^9, 3.7397974238974595`*^9, 3.7398008508822117`*^9, {
   3.7398017857464714`*^9, 3.739801814774091*^9}, 3.7398025810910163`*^9, {
   3.7398027829341545`*^9, 3.7398028054091625`*^9}, {3.739802941170739*^9, 
   3.7398029671645093`*^9}, 3.7398031317302675`*^9, {3.7398032242020454`*^9, 
   3.739803227678946*^9}, 3.7398036281841745`*^9, 3.7398042540998487`*^9, 
   3.7398049448813276`*^9, 3.7398078603269715`*^9, {3.739807928556408*^9, 
   3.739807937586903*^9}, 3.7398080723619013`*^9, 3.7398081227473497`*^9, 
   3.7398081990217247`*^9, {3.7398084195206194`*^9, 3.7398084521997447`*^9}, {
   3.7398085639273005`*^9, 3.7398085722241597`*^9}, {3.739808653565483*^9, 
   3.7398086600603933`*^9}, 3.7398089937459397`*^9, {3.7398092395429955`*^9, 
   3.739809264205038*^9}, 3.7398093573145304`*^9, 3.7398094245657187`*^9, 
   3.739809614962909*^9, 3.739809647076957*^9, 3.739810072267169*^9, 
   3.73981021302682*^9, 3.7398114198866787`*^9, 3.739915487456744*^9, {
   3.7399181577939234`*^9, 3.7399181837330804`*^9}, 3.7472647998162336`*^9, 
   3.7472649252192335`*^9, 3.801876268078796*^9, 3.801883180788735*^9, 
   3.8018846186851883`*^9, 3.803656283461955*^9, 3.803685614068515*^9, 
   3.803685931310894*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"e3b4c9e8-40d5-4420-b93a-73adbc9d50d4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loss", "Subsection",
 CellChangeTimes->{{3.7398013789742985`*^9, 
  3.7398013902722845`*^9}},ExpressionUUID->"ad5e5560-d72d-44fd-87ec-\
5a9600863698"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"loss", " ", "=", " ", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"ReplicateLayer", "[", "28", "]"}], ",", " ", 
      RowBox[{"TotalLayer", "[", "]"}], " ", ",", " ", 
      RowBox[{"ReshapeLayer", "[", 
       RowBox[{"{", "28", "}"}], "]"}], ",", " ", 
      RowBox[{"AggregationLayer", "[", 
       RowBox[{"Mean", ",", " ", "All"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<latentReal\>\"", "]"}], "\[Rule]", 
       RowBox[{"1", "\[Rule]", "2"}]}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<imageVector\>\"", "]"}], "\[Rule]", "2"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"2", "\[Rule]", 
       RowBox[{"3", "\[Rule]", "4"}]}]}], "\[IndentingNewLine]", "}"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7398013789742985`*^9, 3.7398014089810576`*^9}, {
   3.7398014472325907`*^9, 3.7398014544359026`*^9}, {3.739801502096683*^9, 
   3.7398015059698453`*^9}, {3.7398015947256336`*^9, 
   3.7398015948416057`*^9}, {3.739802786636153*^9, 3.7398027883371468`*^9}, {
   3.7398078755079536`*^9, 3.7398079036247773`*^9}, {3.7398079418822684`*^9, 
   3.739807942665143*^9}, {3.739808134814577*^9, 3.7398081355421376`*^9}, {
   3.7398081786517525`*^9, 3.7398081810198183`*^9}, {3.7398102907862372`*^9, 
   3.739810311839627*^9}, 3.739810379373747*^9, {3.7398104790237556`*^9, 
   3.739810550371975*^9}, {3.739810691196947*^9, 3.739810692833015*^9}, {
   3.739810748270138*^9, 3.7398107973240585`*^9}, {3.739811042899146*^9, 
   3.739811056034383*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"7d2529f9-03da-4c54-9557-09b8b5cee6ea"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}}], 
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-4., 1.0000000000000002`}, {-3., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-3., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}}], 
                    
                    LineBox[{{-2., 1.0000000000000002`}, {-0.9999999999999999,
                     1.}}], 
                    
                    LineBox[{{-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-4.4, 
                    2.694222958124177*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    0.6000000000000002}, {-0.25, 0}, 
                    Offset[8], {1., 1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.0000000000000002`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    1.}, {-0.25, 0}, 
                    Offset[8], {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.3999999999999999, 1.}, {-0.25, 0}, 
                    Offset[8], {1., 0.}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., 3.061616997868383*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentReal\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentReal", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., 2.4492935982947064`*^-16}], 
                    Offset[{10, 10}, {-4., 2.4492935982947064`*^-16}]]}, 
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\"\[VerticalEllipsis]\"", 10, StripOnInput -> False], 
                    TraditionalForm], 
                    Offset[{0, -1}, {-4., 2.4492935982947064`*^-16}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ReplicateLayer", "[", "28", "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    ReplicateLayer[28]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-3., 1.0000000000000002`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.0000000000000002`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {Automatic, Automatic}]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 1.0000000000000002`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"imageVector\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageVector", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.0000000000000002`}], 
                    Offset[{10, 10}, {-2., 1.0000000000000002`}]]}, 
                    InsetBox[
                    FormBox["\"R\"", TraditionalForm], 
                    Offset[{0, -1}, {-2., 1.0000000000000002`}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ReshapeLayer", "[", 
                    RowBox[{"{", "28", "}"}], "]"}], HoldForm], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    ReshapeLayer[{28}]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-0.9999999999999999, 1.}], 
                    Offset[{10, 10}, {-0.9999999999999999, 1.}]]}, 
                    InsetBox[
                    FormBox["\"A\"", TraditionalForm], 
                    Offset[{0, -1}, {-0.9999999999999999, 1.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"AggregationLayer", "[", 
                    RowBox[{"Mean", ",", "All", ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "28"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    AggregationLayer[Mean, All, "Input" -> 28]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{6.123233995736766*^-17, 1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"latentReal\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., 2.4492935982947064`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"imageVect..\"", "\"imageVector\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "imageVector", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -7}, {-4., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.0000000000000002`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0, -13}, {-0.9999999999999999, 1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {6.123233995736766*^-17, 1.}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 
                    2.694222958124177*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 3.889087296526011}, {-3.4, 
                    0.6000000000000002}], {0., -0.17}, Automatic, {
                    0.7071067811865475, 0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-3.4, 1.0000000000000002`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0., 5.5}, {-2.4000000000000004`, 
                    1.0000000000000002`}], {0., -0.17}, Automatic, {1., 0.}], 
                    
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{1.2212453270876722`*^-15, 5.5}, {-1.4, 1.}], {
                    0., -0.17}, Automatic, {1., -2.220446049250313*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    Offset[{0., 5.5}, {-0.3999999999999999, 1.}], {0., -0.17},
                     Automatic, {1., 0.}]}, FontColor -> GrayLevel[0.7], 
                    FontSize -> 8, FontWeight -> "Thin", StripOnInput -> 
                    False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-5., 3.061616997868383*^-16}, {-4., 
                    2.4492935982947064`*^-16}, {-3., 
                    1.0000000000000002`}, {-4., 1.0000000000000002`}, {-2., 
                    1.0000000000000002`}, {-0.9999999999999999, 1.}, {
                    6.123233995736766*^-17, 1.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 20, 20, 8, 20, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {340., 96.}, AspectRatio -> Full,
                     PlotRangePadding -> 0, 
                    ImagePadding -> {{38.499999999999986`, 26.5}, {27., 14.}},
                     ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "latentReal"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Inputs", "imageVector"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["latentReal" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "imageVector" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "1" -> Association[
                    "Type" -> "Replicate", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> NeuralNetworks`ValidatedParameter[28], 
                    "Level" -> 1], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "2" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28}], 
                    "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{28}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[All]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"latentReal\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"imageVector\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"tensor\"", "SummaryItem"], "", "", "", ""}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7398015066310177`*^9, 3.7398015954316654`*^9, 3.7398027889380555`*^9, 
   3.7398032319508896`*^9, 3.7398079043414307`*^9, {3.7398079396560135`*^9, 
   3.7398079435324974`*^9}, 3.7398081360533247`*^9, 3.739808181587595*^9, 
   3.739810381543517*^9, 3.7398105552332664`*^9, 3.739810693417615*^9, {
   3.73981074901476*^9, 3.7398108278640184`*^9}, {3.739811048543202*^9, 
   3.739811056667161*^9}, 3.739811359004665*^9, 3.739811422278698*^9, 
   3.7472649265302353`*^9, 3.8018762733431997`*^9, 3.801883187535961*^9, 
   3.801884621708993*^9, 3.8036562878139763`*^9, 3.803685959542968*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"812c9923-4030-4eac-a0b1-12c26cea8cc7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["", "Subsection"]], "Section",
 CellChangeTimes->{{3.7396580504733496`*^9, 3.7396580704733276`*^9}, {
  3.739658183848325*^9, 3.7396581867788134`*^9}, {3.7396607866514063`*^9, 
  3.7396607908372393`*^9}, {3.739801371376523*^9, 
  3.739801373024659*^9}},ExpressionUUID->"1625ce47-7e38-4ccf-93bd-\
d49aa95d21db"],

Cell[CellGroupData[{

Cell["Further AssemBling", "Subsection",
 CellChangeTimes->{{3.7395517151356115`*^9, 
  3.7395517185883427`*^9}},ExpressionUUID->"0cd985cc-3af6-4533-854e-\
e0be71215472"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vaeNet", " ", "=", " ", 
  RowBox[{"NetInitialize", "[", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<enc\>\"", "->", "encoder"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "->", "mn"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<sd\>\"", "->", " ", "sd"}], ",", 
       RowBox[{"\"\<coupledExpSd\>\"", "\[Rule]", "coupledExpSd"}], ",", 
       RowBox[{"\"\<sdEpsilon\>\"", "\[Rule]", 
        RowBox[{"ThreadingLayer", "[", "Times", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<z\>\"", "->", 
        RowBox[{"TotalLayer", "[", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "->", "decoder"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<imageLoss\>\"", "\[Rule]", "imageLoss"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<latentLoss\>\"", "\[Rule]", "latentLoss"}]}], 
      "\[IndentingNewLine]", "|>"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        "\"\<enc\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<enc\>\"", "\[Rule]", "\"\<mn\>\""}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"\"\<enc\>\"", "\[Rule]", "\"\<sd\>\""}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<sd\>\"", "\[Rule]", "\"\<coupledExpSd\>\""}], ",", 
       RowBox[{"\"\<coupledExpSd\>\"", "\[Rule]", "\"\<sdEpsilon\>\""}], ",", 
       " ", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<random\>\"", "]"}], " ", "\[Rule]", 
        "\"\<sdEpsilon\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "\[Rule]", "\"\<z\>\""}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<sdEpsilon\>\"", "\[Rule]", "\"\<z\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<z\>\"", "\[Rule]", "\"\<dec\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<Output\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"latent", " ", "loss"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<sd\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<latentLoss\>\"", ",", "\"\<sd\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<mn\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<latentLoss\>\"", ",", "\"\<mn\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"image", " ", "loss"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<dec\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<imageLoss\>\"", ",", " ", "\"\<inDec\>\""}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<imageLoss\>\"", ",", " ", "\"\<inInput\>\""}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"image", " ", "loss8"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<latentLoss\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<latentLoss\>\"", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<imageLoss\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", "\"\<imageLoss\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "->", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", " ", 
         RowBox[{"{", 
          RowBox[{"28", ",", "28"}], "}"}], ",", " ", "\"\<Grayscale\>\""}], 
        "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7395667951751738`*^9, 3.739566823119445*^9}, {
   3.739574834995954*^9, 3.7395748652310114`*^9}, {3.73957491718008*^9, 
   3.739574917426771*^9}, {3.739575282194539*^9, 3.7395753031761303`*^9}, {
   3.7395753720648174`*^9, 3.7395754054285545`*^9}, {3.739575753558014*^9, 
   3.739575818615221*^9}, {3.739575923773177*^9, 3.739576032295744*^9}, {
   3.73957615725283*^9, 3.739576173140894*^9}, {3.7395779455852795`*^9, 
   3.7395780210064535`*^9}, {3.739578073895379*^9, 3.739578083263719*^9}, {
   3.739578120244849*^9, 3.7395781445247774`*^9}, {3.7395798772539005`*^9, 
   3.739579955987113*^9}, {3.7395799869009967`*^9, 3.7395800066441164`*^9}, {
   3.739580051114643*^9, 3.739580061781546*^9}, {3.7395800954997687`*^9, 
   3.739580113756624*^9}, {3.7395801730651765`*^9, 3.7395801734785357`*^9}, {
   3.73958040387289*^9, 3.739580415517378*^9}, {3.739642073118585*^9, 
   3.739642075307708*^9}, {3.7396422885419416`*^9, 3.7396423085812283`*^9}, {
   3.739653107913578*^9, 3.739653156395689*^9}, {3.7396536936749983`*^9, 
   3.739653721150965*^9}, {3.739653832160608*^9, 3.7396538531965933`*^9}, {
   3.739654031706568*^9, 3.7396540386932983`*^9}, {3.739654494399378*^9, 
   3.739654507330639*^9}, {3.7396556160251646`*^9, 3.739655622666688*^9}, {
   3.739655676499963*^9, 3.739655695158108*^9}, {3.739659126358765*^9, 
   3.7396592334493318`*^9}, {3.739659496978977*^9, 3.7396595181507273`*^9}, {
   3.7396603267595463`*^9, 3.739660327091504*^9}, {3.7396603759149466`*^9, 
   3.7396603902156286`*^9}, {3.7396604372275276`*^9, 3.739660485491572*^9}, {
   3.73966051816661*^9, 3.739660533257409*^9}, {3.739660566399602*^9, 
   3.739660592820536*^9}, {3.7396606785559244`*^9, 3.7396607348536077`*^9}, {
   3.739660770010747*^9, 3.7396607786615324`*^9}, {3.7396612178446693`*^9, 
   3.7396612550095005`*^9}, {3.739662334945963*^9, 3.7396623706221595`*^9}, {
   3.7396624291338043`*^9, 3.7396624649212823`*^9}, {3.7396625144474583`*^9, 
   3.739662523829752*^9}, {3.739662608901328*^9, 3.73966270439748*^9}, {
   3.7396627454343853`*^9, 3.7396627463531523`*^9}, {3.7396629139929028`*^9, 
   3.7396629310823264`*^9}, {3.739662961278787*^9, 3.739663026674754*^9}, 
   3.7397188827808523`*^9, {3.739718970465977*^9, 3.7397189767068577`*^9}, {
   3.7397191806097207`*^9, 3.7397192406211147`*^9}, 3.7398014597348666`*^9, {
   3.7398034656582584`*^9, 3.739803490613632*^9}, {3.7398035244403687`*^9, 
   3.7398035402987995`*^9}, {3.7398036929205694`*^9, 
   3.7398037088200207`*^9}, {3.739803945479252*^9, 3.7398039707659965`*^9}, {
   3.7398040228689985`*^9, 3.7398040257403917`*^9}, {3.739804370291984*^9, 
   3.739804370764393*^9}, 3.7398049621003094`*^9, {3.7398060601874127`*^9, 
   3.739806113406682*^9}, {3.7398071373402176`*^9, 3.7398071524626684`*^9}, {
   3.7398072721425514`*^9, 3.7398072788674555`*^9}, {3.7398076612231283`*^9, 
   3.7398076776800346`*^9}, {3.7398077150159154`*^9, 
   3.7398077215323224`*^9}, {3.7398077789631224`*^9, 
   3.7398077900835953`*^9}, {3.7398082170684934`*^9, 
   3.7398082243783016`*^9}, {3.7398082778213615`*^9, 
   3.7398083143248377`*^9}, {3.7398083516687603`*^9, 3.739808358203776*^9}, {
   3.7398094608180203`*^9, 3.73980947990317*^9}, {3.7398102237285357`*^9, 
   3.7398102555987115`*^9}, {3.7399153818513737`*^9, 
   3.7399154159782753`*^9}, {3.739917022557266*^9, 3.739917025949258*^9}, {
   3.803685301505787*^9, 3.803685323984538*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"31419281-fdd4-4dbc-8105-f2287a04b63a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["9", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    
                    LineBox[{{-7., 
                    4.286263797015736*^-16}, {-6., -0.9999999999999997}}], 
                    
                    LineBox[{{-6., 
                    3.6739403974420594`*^-16}, {-5., -0.9999999999999997}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQESB7i65vlYVu6yWZn+5tHX8+IHylZJbbJ22WUT
uYTH5u4s8QNvu1yVVnHusuHZlsC9LUH8QKG2/NyWkzttDs95EdCgKH7gb/dy
pdPNO23qI0AaxA7MWHNvU63FThv7l5PtXk4WO2Dbe8R3zvMdNiz+25+1u4od
eKsb+Vlt4g6bs518rBKfRA+s7JuzWNZ0h82smSAgeqBgfV9cw+XtNmDtdqIH
bAxuyEnmb7ex7Hts0fdY5ADXRsX7G7m223R2gIDIgWuG2fO9lm2zudmke6NJ
V+TA4k1b4h87brPRqL2kXntJ+EC+8T/5mrtbbSrKQUD4gM0W9wcilVttjhfK
AJHwAU7TiQvWimy1Ec85KJZzUOjAta23Etw2bIG6R/BA3oyTF79lbrZ5BXaP
4AErSeFJ/ayboe4ROMAxKyZIY+Emmy6wewQOXJVaJnTQZpPNDbB7BA4smP3+
UuSNjTYBv5b4/1rCfyBPxnLyp+KNNh/egQDfAau5TcHd/BttwMZZ8B1glzsj
rLJ6g40e2ADeA1fmiV7Z47bB5uwZEOA54GC/T2P1kfU24OiS5jlwpmHRvALG
9Ta/EicafSjhPuDmpPk/1nOdTQvI+htcB5Y1B3kVz1kLDX+uA+9c5Bo2/Fpj
U31ML+7/Hs4DSm09C0RT1kD9x3nAzn3u6kU3VtuAlZ/iOODSEbAwPGK1zRoD
dSuRBI4DRp7LGk0er7KBpB8OaPpZZQMA47MdMg==
                    "]], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-2.9999999999999996`}}], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-0.9999999999999997}}], 
                    
                    LineBox[{{-5., -2.9999999999999996`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-5., -1.9999999999999998`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-4., -1.9999999999999998`}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-1., -0.9999999999999999}}], 
                    
                    LineBox[{{-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}], 
                    
                    LineBox[{{-5., -0.9999999999999997}, {-4., \
-0.9999999999999998}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-6.4, -0.5999999999999995}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.5999999999999996}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.355555555555556, 
                    2.667008584809791*^-16}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888857, -5.442874662877157*^-18}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.417705098312485, -2.164589803375031}, {-0.25,
                     0}, 
                    Offset[8], {1., -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.9999999999999997}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -2.3999999999999995`}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999998}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -1.9999999999999996`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, -0.8354101966249685}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.5999999999999999}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.4000000000000001, -1.}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999999, -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8., 4.898587196589413*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-7., 4.286263797015736*^-16}], 
                    Offset[{12, 12}, {-7., 4.286263797015736*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-7., 4.286263797015736*^-16}]}, 
                    
                    TagBox[
                    GridBox[{{
                    StyleBox["\"enc\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "10", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["enc", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[10]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., -0.9999999999999999}], 
                    Offset[{12, 12}, {-1., -0.9999999999999999}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-1., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{10, 10}, {-6., 3.6739403974420594`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 18], {-6., 
                    3.6739403974420594`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "8", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "5184"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{8}, "Input" -> 5184]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-6., -0.9999999999999997}], 
                    Offset[{12, 12}, {-6., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-6., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., -0.9999999999999997}], 
                    Offset[{12, 12}, {-5., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-5., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[6], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{10, 10}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["z", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., -2.9999999999999996`}], 
                    Offset[{10, 10}, {-5., -2.9999999999999996`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-5., -2.9999999999999996`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupledExpSd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Plus", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], "3"], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "8"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupledExpSd", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[(1 + 0.5 #)^3& , {4, 3}], "Input" -> 8]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-4., -1.9999999999999998`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-4., -1.9999999999999998`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sdEpsilon\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sdEpsilon", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., -1.9999999999999998`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"random\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["random", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dec\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dec", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[17]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1., 6.123233995736766*^-17}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.123233995736766*^-17, -1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., -0.9999999999999998}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., -0.9999999999999999}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-8., 4.898587196589413*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"enc\"", TraditionalForm], 
                    Offset[{0, -15}, {-7., 4.286263797015736*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"mn\"", TraditionalForm], 
                    Offset[{0, -13}, {-6., 3.6739403974420594`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -15}, {-6., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-5., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"z\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupledEx..\"", "\"coupledExpSd\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "coupledExpSd", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-5., -2.9999999999999996`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sdEpsilon\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"random\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"dec\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-6.123233995736766*^-17, -1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 
                    4.531193156845207*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-6.4, 
                    3.9188697572715305`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-6.4, -0.5999999999999995}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-5.4, -0.5999999999999996}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655253*^-16, 5.5}, {-4.355555555555556,
                     2.667008584809791*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736824*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499537, 
                    2.4596747752497685`}, {-5.417705098312485, \
-2.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, -0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-5.4, -0.9999999999999997}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 
                    3.8890872965260117`}, {-4.4, -2.3999999999999995`}], {
                    0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, -1.9999999999999996`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-3.417705098312484, \
-0.8354101966249685}], {0., -0.17}, Automatic, {0.4472135954999579, 
                    0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-1.4, -0.5999999999999999}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438362*^-16, 
                    5.5}, {-0.4000000000000001, -1.}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251568`*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-4.4, -0.9999999999999998}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251565`*^-16}]}, FontColor -> 
                    GrayLevel[0.7], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}, {-1., -0.9999999999999999}, {-6.,
                     3.6739403974420594`*^-16}, {-6., -0.9999999999999997}, \
{-5., -0.9999999999999997}, {-3., 
                    1.8369701987210297`*^-16}, {-5., -2.9999999999999996`}, \
{-4., -1.9999999999999998`}, {-5., -1.9999999999999998`}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-6.123233995736766*^-17, -1.}, \
{-4., -0.9999999999999998}, {-2., -0.9999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 24, 24, 20, 20, 20, 8, 24, 8, 8, 8, 
                    8}, NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {503.5, 211.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 35.5}, {28., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "enc"], 
                    NeuralNetworks`NetPath["Nodes", "imageLoss"], 
                    NeuralNetworks`NetPath["Nodes", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "latentLoss"], 
                    NeuralNetworks`NetPath["Nodes", "z"], 
                    NeuralNetworks`NetPath["Nodes", "coupledExpSd"], 
                    NeuralNetworks`NetPath["Nodes", "sdEpsilon"], 
                    NeuralNetworks`NetPath["Inputs", "random"], 
                    NeuralNetworks`NetPath["Nodes", "dec"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "imageLoss"], 
                    NeuralNetworks`NetPath["Outputs", "latentLoss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    Association["Output" -> NetDecoder["Image", 
                    Association[
                    "ColorSpace" -> "Grayscale", "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "latentLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "imageLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "enc" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 1, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$GroupNumber" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {15, 15}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 15, 15}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {15, 15}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {9, 9}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 9, 9}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]]], "mn" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "sd" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association["OutputDimensions" -> {8}, "$OutputSize" -> 8,
                     "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "coupledExpSd" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[3], 3.}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "sdEpsilon" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "z" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "dec" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{25, 8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{25}]], "Parameters" -> 
                    Association["OutputDimensions" -> {25}, "$OutputSize" -> 
                    25, "$InputSize" -> 8, "$InputDimensions" -> {8}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {25}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{49, 25}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{49}]], "Parameters" -> 
                    Association["OutputDimensions" -> {49}, "$OutputSize" -> 
                    49, "$InputSize" -> 25, "$InputDimensions" -> {25}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{49}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {49}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{49}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 7, 7}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 7, 7}, NeuralNetworks`RealT]]],
                     "6" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {2, 2}, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {12, 12}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 12, 12}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {11, 11}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 11, 11}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "12" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {11, 11}, "$OutputSize" -> {10, 10}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "13" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "14" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{6400}, NeuralNetworks`RealT]]], 
                    "15" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{784, 6400}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{784}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {784}, "$OutputSize" -> 
                    784, "$InputSize" -> 6400, "$InputDimensions" -> {6400}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "16" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "17" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "imageLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "inDec" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "inInput" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT],
                     "2" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{28, 28}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{28, 28}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}], "latentLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "mn" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT],
                     "sd" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"random\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"latentLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {"", "", "", "", 
                    StyleBox[
                    TemplateBox[{"\"imageLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.7397059898827744`*^9, {3.7397060243717384`*^9, 3.7397060325200596`*^9}, 
   3.7397064717663097`*^9, 3.739715932985835*^9, 3.739716309028764*^9, 
   3.7397182007031107`*^9, 3.7397189027664604`*^9, 3.739718978364338*^9, 
   3.7397192226596165`*^9, 3.7397192604948125`*^9, 3.739719760995125*^9, 
   3.739738001307364*^9, {3.739738288255085*^9, 3.7397383141818953`*^9}, {
   3.739738995760598*^9, 3.739739013670602*^9}, 3.7397390820806007`*^9, 
   3.7397392467749796`*^9, 3.7397393467802362`*^9, 3.739739394182849*^9, 
   3.7397570103611116`*^9, 3.7397573401157465`*^9, 3.7397927577513638`*^9, 
   3.739794496775937*^9, 3.7397969460912013`*^9, 3.739797426127496*^9, 
   3.7398008529359493`*^9, 3.7398027906709976`*^9, {3.73980294509167*^9, 
   3.739802969303913*^9}, {3.7398031333063283`*^9, 3.739803155511769*^9}, 
   3.7398032330853415`*^9, {3.7398034872109966`*^9, 3.7398034912801237`*^9}, 
   3.739803541457939*^9, {3.7398036304990053`*^9, 3.7398036441836843`*^9}, {
   3.739803687951827*^9, 3.7398037094103765`*^9}, {3.7398039735637393`*^9, 
   3.7398039776353655`*^9}, 3.739804026334425*^9, {3.7398042555291214`*^9, 
   3.7398042571874003`*^9}, 3.7398043714886045`*^9, {3.7398045398386097`*^9, 
   3.7398045410411763`*^9}, 3.739804661603113*^9, 3.7398047694674644`*^9, {
   3.7398049461771836`*^9, 3.7398049642554445`*^9}, 3.739805332268571*^9, {
   3.739806103664843*^9, 3.739806114631145*^9}, 3.7398075288293934`*^9, {
   3.73980777484153*^9, 3.7398077906449237`*^9}, 3.7398079067250957`*^9, 
   3.7398079454826117`*^9, 3.739808074065237*^9, {3.7398081259709644`*^9, 
   3.739808137365765*^9}, {3.7398081840965247`*^9, 3.739808200864462*^9}, 
   3.7398082860685167`*^9, {3.739808360036936*^9, 3.739808379010332*^9}, {
   3.739808441394072*^9, 3.7398084563777204`*^9}, {3.739808565907055*^9, 
   3.7398085743385754`*^9}, 3.739808685666136*^9, {3.739809368903793*^9, 
   3.739809385543846*^9}, {3.739809416823183*^9, 3.739809426158105*^9}, 
   3.739809617449951*^9, {3.7398096485251923`*^9, 3.7398096981050415`*^9}, 
   3.739810075819624*^9, 3.7398101161104517`*^9, 3.7398101736964674`*^9, 
   3.7398102108652825`*^9, 3.7398110745736246`*^9, 3.7398113933406563`*^9, 
   3.739811424949652*^9, {3.739915410994813*^9, 3.739915417136042*^9}, 
   3.7399154948845973`*^9, 3.739918186593193*^9, {3.7472649301862335`*^9, 
   3.7472649433162346`*^9}, 3.801876281197571*^9, 3.801883193682049*^9, 
   3.80188462637761*^9, 3.803656291317998*^9, 3.803685972186926*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"e9c5c340-a654-403c-a0bd-5cdb3413b020"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Training", "Subsection",
 CellChangeTimes->{{3.7395663013480153`*^9, 3.739566307299842*^9}, {
  3.739566381757985*^9, 3.739566386357066*^9}, {3.739580286905179*^9, 
  3.7395802885074787`*^9}, {3.7396461037904787`*^9, 
  3.7396461048373337`*^9}},ExpressionUUID->"4d8708ae-94a3-460d-b70f-\
ce3a512d387e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mnistDigits", " ", "=", " ", 
   RowBox[{"Parallelize", "[", 
    RowBox[{"First", "/@", 
     RowBox[{"(", 
      RowBox[{"RandomSample", "[", 
       RowBox[{"ResourceData", "[", "\"\<MNIST\>\"", "]"}], "]"}], ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.739642590626321*^9, 3.739642610253044*^9}, 
   3.7396427252545133`*^9, 3.7396436122988987`*^9, {3.739663190903102*^9, 
   3.739663215293248*^9}, {3.739664960933978*^9, 3.739664979468237*^9}, {
   3.739665017215391*^9, 3.739665046251326*^9}, {3.739665167789925*^9, 
   3.7396651916921415`*^9}, {3.7396664762716713`*^9, 3.739666476925453*^9}, {
   3.739670020116852*^9, 3.7396700467427545`*^9}, {3.7397061599148703`*^9, 
   3.7397061648762484`*^9}, {3.7397064793461494`*^9, 3.739706482907383*^9}, {
   3.7397148403478346`*^9, 3.7397148626315994`*^9}, {3.739716315324668*^9, 
   3.739716316004016*^9}, {3.7397166637162633`*^9, 3.7397166640941877`*^9}, 
   3.739717186538661*^9, {3.7397185402413063`*^9, 3.7397185645914183`*^9}, {
   3.739718686586492*^9, 3.739718737952986*^9}, {3.7397187815150456`*^9, 
   3.7397187829606915`*^9}, {3.739718871908619*^9, 3.7397188766390915`*^9}, {
   3.7397575240459805`*^9, 3.739757527538845*^9}, {3.7397577796114044`*^9, 
   3.7397578129131603`*^9}, {3.739792841010005*^9, 3.7397928444728394`*^9}, {
   3.739792893798551*^9, 3.7397928967030106`*^9}, {3.7397929335461316`*^9, 
   3.739792935138728*^9}, {3.739793216078777*^9, 3.739793223269508*^9}, 
   3.7397932795072117`*^9, {3.7397933234179935`*^9, 3.739793325644786*^9}, {
   3.7397975243209834`*^9, 3.739797525464043*^9}, {3.7397998687980537`*^9, 
   3.7397998818072977`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"a7c64f03-a37b-4ff4-8fa9-4bfc6c4beb84"],

Cell["\<\
Replaced Normal Distribution with a Coupled Normal with coupling equal to the \
coupling used for the \[OpenCurlyDoubleQuote]middle trick Z layer\
\[CloseCurlyDoubleQuote]
Will need to examine relationship between the training random numbers and the \
function used in the \[OpenCurlyDoubleQuote]middle trick Z layer\
\[CloseCurlyDoubleQuote]
Need to determine if its important that the coupling term is equal for the Z \
layer and the training key\
\>", "Text",
 CellChangeTimes->{{3.80368643878487*^9, 3.803686520525416*^9}, {
  3.803686748836507*^9, 3.803686805017015*^9}, {3.803687600245603*^9, 
  3.8036876328729963`*^9}},ExpressionUUID->"70c9dd08-3049-4aeb-b119-\
b08f2d25cd1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"trainingData", " ", "=", 
   RowBox[{"<|", 
    RowBox[{
     RowBox[{"\"\<random\>\"", "\[Rule]", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"CoupledNormalDistribution", "[", 
         RowBox[{"0", ",", "1", ",", "\[Kappa]Dist"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Length", "@", "mnistDigits"}], ",", "nlatent"}], "}"}]}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", "mnistDigits"}]}], "|>"}], 
   RowBox[{"(*", " ", 
    RowBox[{"trainingData", " ", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<random\>\"", "\[Rule]", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "@", "mnistDigits"}], ",", "nlatent"}], "}"}]}],
          "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<Input\>\"", "\[Rule]", "mnistDigits"}]}], "|>"}]}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7395663013480153`*^9, 3.739566307299842*^9}, {
   3.739566381757985*^9, 3.739566386357066*^9}, {3.739580286905179*^9, 
   3.7395803539419622`*^9}, 3.7395804634373894`*^9, 3.739580557204153*^9, {
   3.7396423400539384`*^9, 3.7396423438215675`*^9}, {3.739643233598317*^9, 
   3.7396432490887737`*^9}, {3.739643349560803*^9, 3.7396433755308723`*^9}, {
   3.739643475800774*^9, 3.7396434841699104`*^9}, {3.739714865813456*^9, 
   3.73971486901542*^9}, {3.7397159371170444`*^9, 3.7397159893040023`*^9}, {
   3.7397160224638925`*^9, 3.7397160306296997`*^9}, {3.7397171892988234`*^9, 
   3.739717191015141*^9}, {3.7397184579718*^9, 3.7397184863056498`*^9}, {
   3.739718530047224*^9, 3.739718538937173*^9}, 3.7397185701808057`*^9, {
   3.7397193149761944`*^9, 3.7397193231060047`*^9}, 3.7397380099403787`*^9, {
   3.7397575305396905`*^9, 3.739757533510538*^9}, 3.7397932542311463`*^9, {
   3.803686398266857*^9, 3.8036864323185997`*^9}, {3.803686470211956*^9, 
   3.80368647401505*^9}, {3.803686854659389*^9, 3.803686854970954*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"bc184bf2-cdcb-4b06-8822-87c061f3da92"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"random\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.6557410306729314`"}], ",", 
                "0.9835820878632164`", ",", 
                RowBox[{"-", "1.0923669598330592`"}], ",", 
                "0.8948619492132335`", ",", "0.995707292234438`", ",", 
                RowBox[{"-", "0.30753081422567496`"}], ",", 
                "1.5993313951941976`", ",", 
                RowBox[{"-", "2.3235808806248714`"}]}], "}"}], ",", 
              TemplateBox[{"59998"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"{", 
               RowBox[{"0.9430190164931718`", ",", 
                RowBox[{"-", "1.022517476441826`"}], ",", 
                "0.20612236757839678`", ",", 
                RowBox[{"-", "0.9224730140593518`"}], ",", 
                RowBox[{"-", "0.01597278991004988`"}], ",", 
                RowBox[{"-", "0.6187400211707615`"}], ",", 
                "0.864348498693177`", ",", 
                RowBox[{"-", "0.19419656403295307`"}]}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"\<\"Input\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9m4OF8RgZG6SU7MWU+dBozgYHFD1SJU1Om8DPBwFQkiTtWVvIgMV5l
ZeNaDiYm5c8IuUWeQWD1S0AcIyDjA5LGd7dNQq5fv/4XyHyhycRU/werUz86
MDEpncfujd1AE22wSx2SBsotwCr1jY2JiX/lP6xybUxMbHOwm3jPmIlnFXap
/3OYmLRxSG0H2rYPu9SXYCbO85+wy2UwMXHhMPG/JBOTAW45o7u45eRP4ZJr
ZgrBJYUFAACqYrJI
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9y4GOhLAOj3NRPmDJ/DsozgoHLSQy5I4yMHDV79tgyMhp8QzdQgVH5
NpC+r8TImH0HVW46I9cLMGMh0FihKyhyCowREMajUKDkEmSpZUyMW6DMr+hy
ixl5bkCZP5Uw5KT+I/SxPkaVE/0IYR10Z2Sc/h9VjtHl7YcPHxb5swKdeQ9F
7qEdIxTwCzJqoPn91zZdZkZGLaOV700x5IDgzOnTf4BUIzY5KJiKR64Qj5wv
HrkaPHJOjJIvccntZOS+jFMjcQAA1Duq+g==
                 "], {{0, 28}, {28, 
                 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+84PvGbFU9HHJJzMzMajjkmJi9X33GLjWXifk4Dl1PpJk8f+OQ28/E
cACXK/czK77HIfU3gtkUl7bFzMzrccmFMDPjkvogxOSAS24VM3M/bjmlV7jk
UpidcEn9d2TOwyV1iInvDi45D+Z0nEYyMXfiknrCJIErLP+/ZWrGaSQVAQDK
4Oc3
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+KYE2UCQOjxDUsMgctmRlBwBpD5m8wEyMEsK9Dk3puzwgHTWhynow4
5Z7wI6TELqHKzUXSZo5m5CwkuQI0udsIKY0PaHLvdOFyLhjee1wuxigiAJJz
xZD7///10eeVILksLHJA/4MNno9VLgckJf0Tm9QbQZBcEFZtrWBnmv3BJhfH
iFtfHzj6qrHK/RcHSum9wi43XwenFEkAAIuReR0=
                 "], {{0, 28}, {28, 
                 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9K4GY+E9MBBPcAspwuMzMz33MYL4dfrhUu9VQCKMf0BMqbwMTMzLkc
bqQoktzvNKCc2C24xtmFCLkpzEA5BSQLjzExMTyBuYqByRrZMceg+laqgExX
OI0ud+TTNiugcUDW0f/ocvIuzMxgOf7nGHJgLSACxev//99XB7qAiQlC/EcD
dyOYmM2ePKkHamtAl/v///iJK///5wPl+jHlwABoH9sc7FIb0IIEGRQB3RKL
Q66YiVnsOG45GxxSeOUOBDJ34pIjAQAAlBmK3Q==
                 "], {{0, 28}, {28, 
                 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AcG7i4cpd2KX+RtT+vyC+FavccqZz//93WfzEIvVVy/vv///v+LZj
kZvHVAaiArqwyCXzPQRR/prY5MTAVDjHOSxyJmBqA9NRTDnOCjB1mweLHCNE
7gEfFjmGcoiZjLj1bWCaj1NuEja3QOUCsPkBJuePKfU/2RpEvmbEGma8l///
/5XJtAOL3DImi9v/k5nCscXRr2gmHlFG7dtYpP7/f5LCxJTyHKsUfQAAycra
IQ==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              TemplateBox[{"59989"},
               "OutputSizeLimit`Skeleton"], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+cYPvZVavqVmGKv5xZb8nKyQQEov3ocoxMTDLmuRNWT+BhDEeXi1Rd
8OwHkH4ixdiEw8oHAYwST3DIxTAxzcOhy4BZ6yYOXSpMWo+xyzyxYVR9iF3q
dzGjFi5nHGNSxSX13ZN9CQ6p/6uYHHFJ4ZW7LSc97TaYde/GoxU1G7KjkcL1
mhwTt4ND28qV2uxiTIxMOmuQdV5rAMcRg5C4uHPDki9o5p5dDQSrXuG0dyAB
AL54yNU=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+s4NNt7OIXN69z12dzn7MTUyqbjwkCWKyfo8spAoW5dHV1uZmYNH+i
ybkw2W0+DaTPbJVlakST+/zkB5TVySTzG5djDzMxrcMtJ/YGTejPu96mODEx
MVdBJv7rKDLXs3yZECDmHpLURz2wmGJcXBw7iOH8FyGXxcTEn7Ht/df//wuZ
2PMFmJhiEXKMTPJ3wIyDIkzh/4+KMPG2wuW0mLzA9AlhJpNT//8fEmLifwiT
W8bEsgdIHeVnsjsK4qcxMfnD5D4ZMvGX7q0WYXJ+B+bfW9fwGW7ofkg0WL/H
FhonZJmYONw/Y5MCGjvR9xB2GboBABCVk7Q=
                 "], {{0, 28}, {28, 
                 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/6cP2GEa+xOHVCkbo/EP7FILWdmacEgtYGXch8PAc2yM1q9wyDkx5uBy
4mZG1z84pF6J6L/GIfXHmXE9LhMbGaNwSW1lZcg/h13qvTIjIyPbAqxyNYxq
SkqMrNFPMaWOMvCc/v82lJHR8TGGnBtjJpD8DZSchi51n1P0CZCaysfIvwNd
7gBjFpDczMfofA1d6qcO4/pPfYrMIqswo/UDI6MWDyOjzHUsHvjbYsbI6FGA
K3oGHgAAZ/3LiA==
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x9AsJPxBW45pst45MqoL8dYSqaZYXjkmPDImeNxiylZZp7hwy33X59p
Pk65FKZu3BrF63HLSQi/wylnzuCPU24rowFuQ7NSccvRHAAAAojz8Q==
                 
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}], ",", 
              GraphicsBox[
               TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQwU/x+swF8Wp9QbCbn/ay9jl1vFLPffqgS7nBtuuR/GTLLtTMVY5Y4xM4fL
MfdglVvArHmKWf4NNqlPhswl9cydWLUtZmJKM2bqwCpXxMzMzMQsv6s9bO0P
7HJgeQw7EXKYdh7o6xNkEJVr6l2O1Uo50cdYxcFycjilNrPhlrNkmoVTzooZ
p9R/K008cjjilZoAAHwvx38=
                 "], {{0, 28}, {28, 0}}, {0, 255},
                 ColorFunction->GrayLevel],
                BoxForm`ImageTag[
                "Byte", ColorSpace -> Automatic, Interleaving -> None],
                Selectable->False],
               DefaultBaseStyle->"ImageGraphics",
               ImageSizeRaw->{28, 28},
               PlotRange->{{0, 28}, {0, 28}}]}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{73., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{61., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 31147750627266526728, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 31147750627266526728, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 31147750627266526728, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{92., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{65., {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[31147750627266526728 === $SessionID, 
   Out[114], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.739793256928838*^9, {3.739793320292508*^9, 3.739793336128813*^9}, 
   3.7397969532318215`*^9, 3.7397974330724916`*^9, 3.7397975758969884`*^9, 
   3.739800019616311*^9, 3.7399155444386406`*^9, 3.7399155826318817`*^9, 
   3.7472650405664663`*^9, 3.747265085726466*^9, 3.7472651305344667`*^9, 
   3.801876302593657*^9, 3.80187659936725*^9, 3.801883226595797*^9, 
   3.8018846590156317`*^9, 3.803656316106679*^9, 3.803686814614476*^9, 
   3.8036868613966923`*^9, 3.803689189070071*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"a3ec0b99-4ee5-4ea7-a46c-02ad845c398a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "here", " ", "we", " ", "need", " ", "to", " ", "adding", " ", "scaled", 
     " ", "784"}], ",", " ", 
    RowBox[{
    "as", " ", "in", " ", "python", " ", "implementation", " ", "that", " ", 
     "array", " ", "has", " ", "been", " ", "flatten"}]}], "*)"}]}]], "Input",\

 CellChangeTimes->{{3.7399169597412405`*^9, 3.7399169897612233`*^9}, {
  3.7399180939266267`*^9, 3.7399181061945915`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"428efe7e-29c3-462a-8c93-0313a0eddbc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Needs", "[", "\"\<OpenCLLink`\>\"", "]"}], ";", " ", 
    RowBox[{"Unfortunately", " ", "OpenCLLink", " ", 
     RowBox[{"doesn", "'"}], "t", " ", "work", " ", "with", " ", "NetTrain", 
     " ", "function"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", "trainedVae", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"trainedVae", " ", "=", " ", 
    RowBox[{"NetTrain", "[", 
     RowBox[{"vaeNet", ",", " ", "trainingData", ",", " ", 
      RowBox[{"LossFunction", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<latentLoss\>\"", "\[Rule]", 
          RowBox[{"Scaled", "[", "1", "]"}]}], ",", " ", 
         RowBox[{"\"\<imageLoss\>\"", "\[Rule]", 
          RowBox[{"Scaled", "[", "784", "]"}]}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"MaxTrainingRounds", "\[Rule]", "1000"}], ","}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"MaxTrainingRounds", "\[Rule]", "2"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"TrainingProgressReporting", "\[Rule]", "\"\<Panel\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<ADAM\>\"", ",", " ", 
         RowBox[{"\"\<LearningRate\>\"", "\[Rule]", "0.0005"}]}], "}"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"TargetDevice", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<GPU\>\"", ",", "1"}], "}"}]}], ","}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"BatchSize", "\[Rule]", "64"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<MNISTnet.wlnet\>\"", ",", " ", "trainedVae"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.739640917406395*^9, 3.7396409365306387`*^9}, {
   3.739641234230517*^9, 3.739641267372436*^9}, 3.739641484990506*^9, {
   3.739641598182274*^9, 3.739641602211731*^9}, {3.739641826613477*^9, 
   3.739641842161272*^9}, {3.7396419344073505`*^9, 3.7396419543255787`*^9}, {
   3.7396421349665666`*^9, 3.7396421387829113`*^9}, {3.739643564377947*^9, 
   3.7396435646719217`*^9}, 3.7396465019788446`*^9, {3.7396594070129886`*^9, 
   3.739659422753173*^9}, {3.7396630845636253`*^9, 3.7396630850627346`*^9}, {
   3.7396642974209285`*^9, 3.739664299792666*^9}, 3.739665092777877*^9, 
   3.739668632595425*^9, {3.739706542575757*^9, 3.739706543416222*^9}, {
   3.739706643936159*^9, 3.739706644262807*^9}, {3.7397160374637423`*^9, 
   3.7397160410045133`*^9}, {3.739716266336693*^9, 3.739716266843546*^9}, {
   3.7397163290405035`*^9, 3.7397163291394672`*^9}, {3.739716679089787*^9, 
   3.7397166798979435`*^9}, {3.739720714284532*^9, 3.7397207153305655`*^9}, 
   3.739721476889398*^9, {3.7397383492058954`*^9, 3.739738384863912*^9}, {
   3.739757249279292*^9, 3.739757267130204*^9}, {3.73975741031142*^9, 
   3.7397574174190454`*^9}, {3.739797532594019*^9, 3.73979753273199*^9}, {
   3.7397987690635576`*^9, 3.739798769268255*^9}, {3.739799836384035*^9, 
   3.7397998375504875`*^9}, {3.7398108032932243`*^9, 3.739810805684041*^9}, {
   3.739812358284381*^9, 3.739812375087082*^9}, {3.7398124328150425`*^9, 
   3.739812432987008*^9}, {3.739812554844903*^9, 3.739812555405939*^9}, {
   3.739812650425634*^9, 3.739812651136638*^9}, 3.7398167404695654`*^9, {
   3.7399155057860126`*^9, 3.739915536538898*^9}, {3.739917888759632*^9, 
   3.739917889336051*^9}, {3.739917990162097*^9, 3.739917993343772*^9}, {
   3.7472653453194685`*^9, 3.7472653478484707`*^9}, {3.7472658125425873`*^9, 
   3.7472658274012527`*^9}, {3.801876653426326*^9, 3.801876654217325*^9}, {
   3.801876685275413*^9, 3.801876731930725*^9}, {3.8018767932758913`*^9, 
   3.8018767954159937`*^9}, {3.801876977523085*^9, 3.801877001320191*^9}, 
   3.801877060534041*^9, {3.801883258117166*^9, 3.801883259308815*^9}, {
   3.801884716431149*^9, 3.801884717336008*^9}, {3.803655988508258*^9, 
   3.8036559932772617`*^9}, {3.8036561680890417`*^9, 
   3.8036561794397907`*^9}, {3.803656721989769*^9, 3.803656734229805*^9}, {
   3.803666106897691*^9, 3.803666114255233*^9}, {3.803686910836513*^9, 
   3.80368693792414*^9}, 3.8036870505500927`*^9},
 CellLabel->
  "In[115]:=",ExpressionUUID->"8fceabf9-ec10-47c1-a295-9b3b7892aa3b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {11., {0., 11.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["9", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {15., {0., 15.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], 
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    
                    LineBox[{{-7., 
                    4.286263797015736*^-16}, {-6., -0.9999999999999997}}], 
                    
                    LineBox[{{-6., 
                    3.6739403974420594`*^-16}, {-5., -0.9999999999999997}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQESB7i65vlYVu6yWZn+5tHX8+IHylZJbbJ22WUT
uYTH5u4s8QNvu1yVVnHusuHZlsC9LUH8QKG2/NyWkzttDs95EdCgKH7gb/dy
pdPNO23qI0AaxA7MWHNvU63FThv7l5PtXk4WO2Dbe8R3zvMdNiz+25+1u4od
eKsb+Vlt4g6bs518rBKfRA+s7JuzWNZ0h82smSAgeqBgfV9cw+XtNmDtdqIH
bAxuyEnmb7ex7Hts0fdY5ADXRsX7G7m223R2gIDIgWuG2fO9lm2zudmke6NJ
V+TA4k1b4h87brPRqL2kXntJ+EC+8T/5mrtbbSrKQUD4gM0W9wcilVttjhfK
AJHwAU7TiQvWimy1Ec85KJZzUOjAta23Etw2bIG6R/BA3oyTF79lbrZ5BXaP
4AErSeFJ/ayboe4ROMAxKyZIY+Emmy6wewQOXJVaJnTQZpPNDbB7BA4smP3+
UuSNjTYBv5b4/1rCfyBPxnLyp+KNNh/egQDfAau5TcHd/BttwMZZ8B1glzsj
rLJ6g40e2ADeA1fmiV7Z47bB5uwZEOA54GC/T2P1kfU24OiS5jlwpmHRvALG
9Ta/EicafSjhPuDmpPk/1nOdTQvI+htcB5Y1B3kVz1kLDX+uA+9c5Bo2/Fpj
U31ML+7/Hs4DSm09C0RT1kD9x3nAzn3u6kU3VtuAlZ/iOODSEbAwPGK1zRoD
dSuRBI4DRp7LGk0er7KBpB8OaPpZZQMA47MdMg==
                    "]], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-2.9999999999999996`}}], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-0.9999999999999997}}], 
                    
                    LineBox[{{-5., -2.9999999999999996`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-5., -1.9999999999999998`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-4., -1.9999999999999998`}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-1., -0.9999999999999999}}], 
                    
                    LineBox[{{-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}], 
                    
                    LineBox[{{-5., -0.9999999999999997}, {-4., \
-0.9999999999999998}}]}, {
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-1.4, -0.9999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-6.4, -0.5999999999999995}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-5.4, -0.5999999999999996}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.355555555555556, 
                    2.667008584809791*^-16}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888857, -5.442874662877157*^-18}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-5.417705098312485, \
-2.164589803375031}, {-0.25, 0}, 
                    Offset[8], {1., -2.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-5.4, -0.9999999999999997}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-4.4, -2.3999999999999995`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999998}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-4.4, -1.9999999999999996`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-3.417705098312484, \
-0.8354101966249685}, {-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4000000000000004`,
                     1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-1.4, -0.5999999999999999}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-0.4000000000000001, -1.}, \
{-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999999, -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-4.4, -0.9999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8., 4.898587196589413*^-16}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-7., 4.286263797015736*^-16}], 
                    Offset[{12, 12}, {-7., 4.286263797015736*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-7., 4.286263797015736*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"enc\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "10", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["enc", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[10]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., -0.9999999999999999}], 
                    Offset[{12, 12}, {-1., -0.9999999999999999}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-1., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{10, 10}, {-6., 3.6739403974420594`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    RGBColor[0.33, 0.33, 0.33], 
                    AbsolutePointSize[3.5], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 18], {-6., 
                    3.6739403974420594`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "8", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "5184"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{8}, "Input" -> 5184]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-6., -0.9999999999999997}], 
                    Offset[{12, 12}, {-6., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-6., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., -0.9999999999999997}], 
                    Offset[{12, 12}, {-5., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-5., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[6], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{10, 10}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 14], {-3., 
                    1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["z", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., -2.9999999999999996`}], 
                    Offset[{10, 10}, {-5., -2.9999999999999996`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    StripOnInput -> False, FontFamily -> "Source Code Pro", 
                    FontSize -> 14, FontWeight -> Bold, FontSlant -> Italic, 
                    FontColor -> RGBColor[
                    0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`]], {-5., -2.9999999999999996`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupledExpSd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Plus", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], "3"], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "8"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupledExpSd", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[(1 + 0.5 #)^3& , {4, 3}], "Input" -> 8]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-4., -1.9999999999999998`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"\[Times]\"", StripOnInput -> False, FontSize -> 
                    14], {-4., -1.9999999999999998`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sdEpsilon\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sdEpsilon", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., -1.9999999999999998`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"random\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["random", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-2., 1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dec\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dec", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[17]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1., 6.123233995736766*^-17}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.123233995736766*^-17, -1.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., -0.9999999999999998}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., -0.9999999999999999}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    Offset[{0, -7}, {-8., 4.898587196589413*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"enc\"", 
                    Offset[{0, -15}, {-7., 4.286263797015736*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"imageLoss\"", 
                    Offset[{0, -15}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"mn\"", 
                    Offset[{0, -13}, {-6., 3.6739403974420594`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox["\"sd\"", 
                    Offset[{0, -15}, {-6., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"latentLoss\"", 
                    Offset[{0, -15}, {-5., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"z\"", 
                    Offset[{0, -13}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"coupledEx..\"", "\"coupledExpSd\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "coupledExpSd", "Tooltip"]& ], 
                    Offset[{0, -13}, {-5., -2.9999999999999996`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"sdEpsilon\"", 
                    Offset[{0, -13}, {-4., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"random\"", 
                    Offset[{0, -7}, {-5., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"dec\"", 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    Offset[{0, -7}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"imageLoss\"", 
                    Offset[{0, -7}, {-6.123233995736766*^-17, -1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"latentLoss\"", 
                    Offset[{0, -7}, {-4., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"Input\"", 
                    Offset[{0, -7}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}]}, StripOnInput -> False, FontColor -> 
                    GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 
                    4.531193156845207*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    Offset[{0., 5.5}, {-1.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-6.4, 
                    3.9188697572715305`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-6.4, -0.5999999999999995}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-5.4, -0.5999999999999996}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.367778697655253*^-16, 5.5}, {-4.355555555555556,
                     2.667008584809791*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736824*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{4.919349550499537, 
                    2.4596747752497685`}, {-5.417705098312485, \
-2.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, -0.8944271909999159}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    Offset[{0., 5.5}, {-5.4, -0.9999999999999997}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{-3.889087296526011, 
                    3.8890872965260117`}, {-4.4, -2.3999999999999995`}], {
                    0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    Offset[{0., 5.5}, {-4.4, -1.9999999999999996`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{-4.919349550499537, 
                    
                    2.4596747752497685`}, {-3.417705098312484, \
-0.8354101966249685}], {0., -0.17}, Automatic, {0.4472135954999579, 
                    0.8944271909999159}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-1.4, -0.5999999999999999}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox["\"\[DoubleStruckCapitalR]\"", 
                    
                    Offset[{6.106226635438362*^-16, 
                    5.5}, {-0.4000000000000001, -1.}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251568`*^-16}], 
                    InsetBox["\"\[DoubleStruckCapitalR]\"", 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-4.4, -0.9999999999999998}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251565`*^-16}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}, {-1., -0.9999999999999999}, {-6.,
                     3.6739403974420594`*^-16}, {-6., -0.9999999999999997}, \
{-5., -0.9999999999999997}, {-3., 
                    1.8369701987210297`*^-16}, {-5., -2.9999999999999996`}, \
{-4., -1.9999999999999998`}, {-5., -1.9999999999999998`}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-6.123233995736766*^-17, -1.}, \
{-4., -0.9999999999999998}, {-2., -0.9999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 24, 24, 20, 20, 20, 8, 24, 8, 8, 8, 
                    8}, NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{28., 35.5}, {28., 18.}}, 
                    ImageSize -> {503.5, 211.}, PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "enc"], 
                    NeuralNetworks`NetPath["Nodes", "imageLoss"], 
                    NeuralNetworks`NetPath["Nodes", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "latentLoss"], 
                    NeuralNetworks`NetPath["Nodes", "z"], 
                    NeuralNetworks`NetPath["Nodes", "coupledExpSd"], 
                    NeuralNetworks`NetPath["Nodes", "sdEpsilon"], 
                    NeuralNetworks`NetPath["Inputs", "random"], 
                    NeuralNetworks`NetPath["Nodes", "dec"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "imageLoss"], 
                    NeuralNetworks`NetPath["Outputs", "latentLoss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    Association["Output" -> NetDecoder["Image", 
                    Association[
                    "ColorSpace" -> "Grayscale", "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "latentLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "imageLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "enc" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 1, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$GroupNumber" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {15, 15}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 15, 15}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {15, 15}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {9, 9}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 9, 9}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]]], "mn" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "sd" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association["OutputDimensions" -> {8}, "$OutputSize" -> 8,
                     "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "coupledExpSd" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[3], 3.}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "sdEpsilon" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "z" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "dec" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{25, 8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{25}]], "Parameters" -> 
                    Association["OutputDimensions" -> {25}, "$OutputSize" -> 
                    25, "$InputSize" -> 8, "$InputDimensions" -> {8}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {25}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{49, 25}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{49}]], "Parameters" -> 
                    Association["OutputDimensions" -> {49}, "$OutputSize" -> 
                    49, "$InputSize" -> 25, "$InputDimensions" -> {25}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{49}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {49}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{49}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 7, 7}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 7, 7}, NeuralNetworks`RealT]]],
                     "6" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {2, 2}, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {12, 12}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 12, 12}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {11, 11}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 11, 11}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "12" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {11, 11}, "$OutputSize" -> {10, 10}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "13" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "14" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{6400}, NeuralNetworks`RealT]]], 
                    "15" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{784, 6400}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{784}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {784}, "$OutputSize" -> 
                    784, "$InputSize" -> 6400, "$InputDimensions" -> {6400}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "16" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "17" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "imageLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "inDec" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "inInput" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT],
                     "2" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{28, 28}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{28, 28}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}], "latentLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "mn" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT],
                     "sd" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"random\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"latentLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {"", "", "", "", 
                    StyleBox[
                    TemplateBox[{"\"imageLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {
                    296., {34.521240234375, 40.978759765625}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.801884424236846*^9, 3.801884714087017*^9, 
  3.8018920577412043`*^9, 3.8036563587155848`*^9, 3.8036567362265463`*^9, 
  3.803670051388822*^9, 3.803687024939376*^9, 3.803688537049759*^9, 
  3.803690694665846*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"b998c32d-47bc-40c2-b3f2-a2c1eb9d9fec"],

Cell[BoxData["\<\"MNISTnet.wlnet\"\>"], "Output",
 CellChangeTimes->{3.801884424236846*^9, 3.801884714087017*^9, 
  3.8018920577412043`*^9, 3.8036563587155848`*^9, 3.8036567362265463`*^9, 
  3.803670051388822*^9, 3.803687024939376*^9, 3.803688537049759*^9, 
  3.803690694760129*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"26e090e5-acdc-4652-b747-341d2e2c2b93"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"DirectoryName", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<MNISTnet.wlnet\>\"", "]"}], "]"}], 
  "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[88]:=",ExpressionUUID->"827c0a2d-1b62-4823-a667-f5e5b7f9f8d9"],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.747279306178152*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"163e927a-77f8-4777-abc2-b7e7889116d4"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"SystemOpen", "[", 
   RowBox[{"DirectoryName", "[", 
    RowBox[{"AbsoluteFileName", "[", "\"\<MNISTnetkDist05.wlnet\>\"", "]"}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.747268507471246*^9, {3.8040072771575317`*^9, 3.804007291785928*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6e35fbec-1ccd-4afc-be12-9b66b55a58de"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating", "Subsection",
 CellChangeTimes->{{3.739646118558402*^9, 
  3.739646127619317*^9}},ExpressionUUID->"2a188410-2540-4cfd-b762-\
b5b3e6ba0374"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "newImage", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "initial", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"initial", " ", "=", " ", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"CoupledNormalDistribution", "[", 
       RowBox[{"0", ",", "1", ",", "\[Kappa]Dist"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"45", ",", "nlatent"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"initial", " ", "=", " ", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "nlatent"}], "}"}]}], "]"}]}], ";"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"decc", " ", "=", " ", 
   RowBox[{"NetExtract", "[", 
    RowBox[{"trainedVae", ",", " ", "\"\<dec\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newImage", " ", "=", " ", 
   RowBox[{"decc", "[", "initial", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"NetDecoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Magnify", "[", 
  RowBox[{
   RowBox[{"a", "[", "newImage", "]"}], ",", "4"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7396457684933586`*^9, 3.739645778227761*^9}, {
   3.7396458241028724`*^9, 3.7396458796974587`*^9}, {3.739646045256716*^9, 
   3.739646090525081*^9}, {3.739646131275936*^9, 3.739646144087335*^9}, {
   3.7396462320989513`*^9, 3.739646256418172*^9}, {3.7396463003376403`*^9, 
   3.7396463216834593`*^9}, {3.7396464449774623`*^9, 3.7396464524496183`*^9}, 
   3.7396465119526854`*^9, {3.739650975049708*^9, 3.7396509789702554`*^9}, {
   3.739663243587756*^9, 3.739663248978575*^9}, {3.739664925660292*^9, 
   3.7396649575294285`*^9}, {3.739706113203579*^9, 3.73970614661347*^9}, 
   3.7397068904832497`*^9, {3.739706951361699*^9, 3.739706958591832*^9}, {
   3.7397069979669313`*^9, 3.73970701256983*^9}, {3.7397128445409555`*^9, 
   3.7397128447093997`*^9}, 3.7397128868143215`*^9, {3.7397158805128565`*^9, 
   3.7397158970904713`*^9}, {3.739716050159375*^9, 3.739716176521705*^9}, {
   3.7397162066325617`*^9, 3.739716256790491*^9}, {3.73971688064563*^9, 
   3.7397168857913694`*^9}, {3.739716932101802*^9, 3.7397169640094924`*^9}, {
   3.7397193934390154`*^9, 3.7397194692175612`*^9}, {3.739719572325448*^9, 
   3.739719572819581*^9}, {3.73971963989671*^9, 3.7397197260123224`*^9}, {
   3.739720600586546*^9, 3.739720605026532*^9}, {3.739720700904532*^9, 
   3.7397207036425333`*^9}, {3.73975739059271*^9, 3.7397573965718684`*^9}, {
   3.739793414885888*^9, 3.739793424960888*^9}, {3.739793656814999*^9, 
   3.7397936955678744`*^9}, {3.7397938262079773`*^9, 
   3.7397938821451683`*^9}, {3.739793950744464*^9, 3.739793958360307*^9}, {
   3.7397942141883173`*^9, 3.739794219743436*^9}, {3.739794278931448*^9, 
   3.7397943073979473`*^9}, {3.739794454473952*^9, 3.7397944546302004`*^9}, {
   3.7397945365135117`*^9, 3.739794539019004*^9}, {3.739796442970791*^9, 
   3.7397964506809855`*^9}, {3.739797055856947*^9, 3.7397970806651216`*^9}, {
   3.7397996551261187`*^9, 3.739799656415143*^9}, {3.7398125264236803`*^9, 
   3.7398125279207134`*^9}, {3.7399157494944944`*^9, 3.739915760742523*^9}, {
   3.739916950773209*^9, 3.7399169513892093`*^9}, {3.803688656942266*^9, 
   3.803688705045309*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"b9810408-eec2-4e6e-bc82-b51ac6a95600"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
Sf/ozPeDl8Jxv91vGevMmFdoz71GUh7LtjFuN8zjOG8C9wXr9JdN3XjfxI3k
581TUs/vI9X6UO4/qlxXm8/zsqdyfdkZ6qeEOJR3pf5yEXwuos9CeU/sIu9q
24jPHME+yQxgP6jXiX/ekXdQeW/Tuouc9sg7Vry8h33BeaP2KPePPcj5GbQL
5YK85wU+fG+UujBd+tcVv3OfyT5PWch5rZbvduo84aO/5IGuPE+9J/gkP2hr
5V2mnOdrzpLvI6WuyWL80e5JvdpO3vdyqVfjpPQd1XwHMUy+iyj9+G6gLZE6
opVxy86WvHtX+sy23KeMFv8YTLmYKuO4uegS13/NPki/LXFe3pHVnfJ+FEN8
So3Ml0g9Ok3uvyP12RWpz+bKe+F16S/i5T0xl32isb1R6h3isd5p5boIUu0Y
57UtXK8m3eX+zPukneX7FaELOK8VCF8ziE8/JvpbLHZRJ/VxrsTBOMnfniKf
h3j8RF+TBI/kQ7OX7Bd5WO4Sb8okb4p9K/+Qd/12Ys8R0leJnMyn2Cert+W9
42nhv0X4XyXxfIDEcVex95niB9FSL9aST90QO/GS+NhF+tQTEj8q5V2p7gFf
/wcL65l6
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtcT3cfPw97wmzJS7OlVseaiIlZY8g65VnMVojYNO2U22y0kCm7OC4L
j8vkZW5rc7BG9pjk1lCdXJsVaui6HJlEQopEeOz9/uwPvV6/3q/v7fP93D+f
7+kY9WnoxGaKosxo+fhfaOSsgOnTI+NHOPw9mBA5pbfvhL8X3eT399/wuhv+
j0GtqwcaDUSl8QbQyrpFbH2bmFzD9YSbQG2InBvDdXMdzxkTOa/Hcqzt4D1W
kOzPJ11tJ9H8TPio5lj1Jz1jRC33NXFe0YW/eaRrJwodf+FnrtDbxHXlu+uk
013mHYjGoHrhl2jfvEO8KHRb8Jw+n/crveUeN/JpdhA9BPJe/S5R9SI91RQ5
PpbzT4kcL5GudVfovHiN/NTxfvMNkc9FzpfIvdENxMlCfzDP26WilwVip9Pk
X53D+4xn5J6nRH5vka+okvvfKiC2rBJ6jcTyu5Srm9jtXzJ/+h7HLzbxXlfO
Gx+IvfsK/+WUS6vjeaWG/Fs11JsZLvL6kS/bWfiLEPxGzrUkGmWUxxzDc0qm
+MsHpKuM5rrqfoHjgYdE7mDSXznwOu7/LR5oRwRy38z1pO9wkvsuiz4GnCL/
n9jELOpL6V/NfV0ukn6XcsrtLfLb1Ic6n6jPEv3lXX/Cv5Uh9BdzL/m2Jom9
O4j+OtH/7Wqe0yool1mWT37/Nw5yKFU9r2G+PugqcL4rxor5LOcrRgKNUalA
1RpZg/tmxgDVN+YBbacc0DNP2aR7zI185Q4lHwlZvP+uyBFM/7B/Jyrjxc9K
xL82EvV+lEeL4T7zZ8kH3USuQRybhSU8l/kjMevla7RXyGXg0WVA5b2Nl7Be
n1gB+stfvwB+fgiysW9My/NY/2Eb1pWDTpVYd+B59cPh0JPdvID0w1Mhv3Yt
C3Ibp9Mpj6P4r6f4eS/6vdFe4ljyntlLxpspv5Yi+WSbxL1Ku+pbjlCfHe/g
Hu2rQ9UYd/myCvsXnbyI+ZXBJdhf61GAse+HpzF+L+43jC8/nwU+ol87DPpF
vx8FHfc1ecAbCWVYXxcOuc2HDVcwf+RF2nt4KPnc9Av5y7tCfndJXEdKnB0S
bJI89z3HtvizOewyx4epJ7XnR6S7exH0aucHwE5mZJzN+J59FmPvl05Bng+X
nmT825DLOtuwH/esK0nF/to2W0Dv3/2A5oyCNJy73NXCvot7QcfyS4He7Ko+
vHfaA+rXbSXlSWG86J0Zb5Y784eaLfaZLHnmgdSLbyR/Dr9PeWJzKefVaMZH
cgjspQzLhZ2s+Xmwj9Y5ihi1+3f6tS/sYT/tjbGhTD1GP2p1BOtT02FHs1Xs
AczHbt8Det0G7wS/T3ung4+YLmcw39eBftKsEHY0ji4mn5E76Je3mafM1pJX
P5O6lyF5aZzYMcQWO0qeGr2LesnOhz/qVzaUY9+OezngsyELdtKbx4APbeQo
oFmZWApscPoTdDycgdb3WxB/Rshx2MXI9IX9Ve/GfKyPOAy/1daHZzLePTg/
bAzi2OgzgHy8mwd9q7uXku9ppWIP+psZL/65WvJlkNS7n5hnjObSr8xfLfl1
PvNG3CjIpRZuQ9zoX5QhztQDe8Gv1dQceraSi4DGjz8jXyjut69ST8XMrwNy
6G+n7tEuTZsQd1pEKPzcTm8LuexJLoXA434l1Hv9X7jvoB/saJ4MoVzvXCWe
EP9bIvXAV+rcT9KP9JS+zJX7zUf9ma89foD+9WlD4Wfq7bYngHGnIZcydTzr
wZkNzANxo+nPK+qY96bMYV2MeZ5677YM+/R7H7CuPHsV9jHvLoF/aI0+xOXl
Rdh3Pg1yKhcO0H9aZ18hf23I744zxM9Frkrpm7ZJv5ghfY4L5bLuF1K+loup
56xX/sA+LY7+k/gQfmiUtaJdplAP1qpJxOQ9zANrngPqa0MpT/PUavqlP1C5
Pxt8GuM+h12MgAT6gXNv1A/17H7mr+S5sJ+25VPIZ9wYCn/S3TKpt7Gsj1qi
5JkoqQ9LJf4WSr+2XOTscJjrEzxZB3pegh/aOaXHMZ/yWzHtlU1+4zdRD+7M
r8p9xqt2vyX5n3SM+b7a+S/6WzHrZlNXjM2IMPBrpFzguGUS9z21E/Fq+WWx
ftpPw49tB9rRCKtkfYzNphwV0j/PkP5kiKCn1IUwqXdLtnKfp1VJvaTDfuqj
NsgnRsk91im7PfhX/WOBeswwxJO61Rf8G3MPk8//PEc/LngVfBqrGuCP9rUk
5v809gXaF4HMO3vLuc84ST9d0I15yLxwhnHoDP3aP/nQv1PYdygSf1oLsZ+f
1PVowe1SL3qI/R5Nhp8Y9aWnacdeyPvKraXncN/rA3GvpmSCP8spiX4zZQb5
WTMdedTqvR3+pXxcBH7tpk7Mo3lVzIux6yGX6fAr0WMs+55v/4t96vBEyGP4
hkK/yiKFeXXlBehfabaWfG9h/2pKHjH7Sv+cJn34dnl3eWdwfKMT/Woj40+P
G30I82UJyC927kvwW/3PXNhT6XmyjPHtCH4sl3HID5prOfnzKIa89shM8K/M
c6R8qfPYz3WvYH7M6Mf4y9kIevqyIvZD66KQ38znOzBe4qPgJ3azDMkr0n8u
lD6sQN4PEdKHekn8DaX9lDnejJ9g9lna5gr2Ia8VZwCfzUG9MNavQn5T65so
zzMBGFsX/WFn5cuDmLdbjEEeVmYlw76KYzbsqVtRkNNaXEl/XltIffm8Czvp
PcZTrs6PqN/bCzCvVfiwbi3fwrziw3eams56p6+X99JNwdVS51unUm633fS3
Md+xzk24cxB0/YdCPj1pAOqg2es59hkLZ8JOqls6+Lb6r4W9jK6di+n/fenP
YW3gd7rbbOwzJy6jvDsCaFenPObnTo6Qx7rUHv2M3WUr7jV61Erd3QB/VgfV
sI5F33qin7b/6WMa5d3UXvq0wG+ph+pTrL8rnKjPgVmwl/nJgmxg8n6gntIW
87qmsS6nT0KdVjquQdwZLh/RL5s9Yr1espbx6NkW9jTL6iGvGfwr9RE2GXGm
vdx+H/CF3B3gx9nrAPU6mH3A+1WMn5KOlGs6+20rvE7quXw3GEQ5bXnfGtZR
7v/ah/n+mZHU01d3GF8hSegrlQnZ6CeteJt+k+OLuFSy32a9TF0HPtT1Ecwz
PoPhp48fVrSzGgL5Hr9r6Ke98infoED25W03ka5rKfzTzvgDcaKGdycfK0aw
/t78jPzXUB4lX9530lebb0td2CPz7fYQl3rx3Oqt7Pscp7NvWNaC+X7UMPiT
1utl8KXuO0e+96fRXonH6X9fuIMf83wN4lHff5H5p5/kx+hXSOdWFt+FLpu5
HuZCnBnKPNO7ivU+4yHyiq4fhXxagEX+x9+U94DUu57/yCv+eUhwF/sYI7qM
ckaE8VzOt+y7Ytay/3tvA+X2SmSfOWkU32u/Jl6hfaeIPl6FH9lerOdGgz9Q
27CB/eqJdjivesazX3BNI51Zl3HOGp7MvLM4HPNaUgbXX7PYv3zPvKIHMP9r
reqfeDeZgdKH9pF++4x8b9vP7yLmRL7fzRNSF4MWUf52fUhnynfsM1/fR4zZ
zXvdOba2BXM88xzfN5vTqJ9mG9m/OXQlnZX9qceENOox8gHf87WzILe5Yhf7
ooh09n9tTvBcD7HTNKlzydKHiv0M6+YTfqoek7pRIPUwV74HXBJ5557j/OkK
zjsXcf4dvotVv794byK/QynDgqWuqsR5ydznzO9OytuZpLPvG9HbdeqldSO/
1yQM4HjhTupjahrzyFvSbyZJvvSW74lj5T20W+S5In12Qe0T/YztJe+ohfye
pfx4ifS2kn/Dg35v2udJZ5Wcm8PvInqg+ENn2t8Ilvfy58Vcn0b9KL+QrtmY
xPt7jOW+0Y7c16gRj2wmBnG/8W7tE/ca7UQuV8mf44X/Qql/D2X/HXn/ecr3
wq/FvjGSZ7tzXVnOdW3nQ2LcI55bRNRKOW+P43tZW0s0B8p3IfcHHA/hPuNN
+W7gxLjXl63j/ATmOytI3m+N/3yHlXon/qU2yHeW26LXY9Jvr5DvaSckLv8U
v31f+oBu4qcjJS7le6kyUPYvEn3Vif46i778RC4/ymOUCt5gH2GlSb97Vui1
EjvId1n9TVl/QfrjPLHHbKljG2U9WfjsLeNXHq//H+XShI8=
       "], {{0, 28}, {28, 
       0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
U/oPXBx5iA==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
d0Jasu/tEU9cyxiHmpvUQW/mSbux1L9L5K2FN8gPHEN+47OVXOcKv7O+nog8
rzo2QX57+puoy8rsMPBWnNte6isD1HrkznyfeJW4XhuDeDOVWvBaw9+RR82g
lqjr2uKVFxk/L10C3pXr4NdK/rIC4PS9D383WgxB/rFjv2VeeOp3rcRewdLH
hYvdPpN+OuoOx92l/8+YDz80g18GLjO5FnjsW2+iHqtJTVnHjo9D32J2LQS1
z56C/LZLNPDpid+CmtvTMa582Rd9m3WkD/RgRo5EX2c7HEcg7/tvMe883ky9
dB8F3g55AH82XD1gX+PRh7Sj9y3KnSf55Rmpf3ulrrdmf20sFftFSt5qGoP4
UhNiIZ/2W89U0Mw2W7ifM/DqJ7rnUg9BiCs7aCz5aVXEufUjyG12uE1c6/x2
YJ8rBajrpl8ycNoeg9DP2Xf6Ytzq4Z+G/bt67gb1SIa91UgddrTvfcn6uEpw
tJd3hxqp61ul7neW++i4m7Tz7Hp+NzLwF8jxZQHtUjYD/aJ26vm1+N71c+A0
/1FEO55+AvmVGoX6yBsAu5jlz0BuIzxvH+38Gqi1eTPnW25EPNpHixiXdVfY
n0e6fw/5puSiD1Cr4pmnurVnfv7mIOtSP9Y33U3ypLv4Zan4pdxj1YxS6bt9
6de36n4h/jjKW+izDfsefpiCfQrur4ZcmZO3gh/gDTtoI0t4j0hqDHuq5nXm
EZdk+JfWaxvyrPbIC/2MlevBfi8oELwS3Irn9g3Hen26O+JPe68a8/aidsgz
RkYD+4/n5V78kPbSIuS+FPK0XvDeYPaQetmlHWnIWZ6bPZz165I/82VcIfXf
fCLyiukZDz80q1qxv1x6BPnQ8P0OcWJH70W/rLp58b5YNgn5Sk9ZjnysRPP+
pxd9CrntB7kYt9pO4f3wyAh8Zw/x4n165cvMo1kraY9/S95PkXruJf11hdSL
kRKPA5hnrexDtPe+KvZXCeWsC52IV0mfdxX7pu+GPs3sZMivz95NefoP5T3R
uQnynHY3h3TnafYlJ7bTr5b15/3nxVnsvxrHsi+qimNf9sk9rLfqktjHdkzE
vqoX+yfrIt83zBzxx0ZSD+ZIHBbJPbe51Pv+0oe+yzxjjNrJdd+PJj9+GPuH
T/fx/F30fzPvXfY1m+kvxnlv7jOvE7+r8+Q5WwOo3/mJpMd2cf9PjpNv4L1M
eWUc9fzqSPI3uvD7iMWk4VdIh0hftuqv72Vaidzbr8j7UpTg3iX99Qzx3xjp
CzKpJ62B9cPoJ+8c5czL9rPyLpkq30k/q61gf6FGHOP4BeYvNZTxoIdyP9WN
fqPnXiBNKySdSqo1Zb9opHO91lry49fy7rJE8G2T8W7il3Ol3i+hfJqf+OnT
/OOQuOxCqsn7pxJ+m3SY6GsY30Os5k943mThr8j9cqasby3ffyz3zGR5Jxoo
6xpTX1oBqTmd+cB8nfq1QkV/BdIny7umsl/yZEex0wSRv0jqg7zjKqmCb4HU
/xbCp0hf4M/7vZYg7zv/Ix7totDLpNZnpOpxrlcPyTvnvgbOt+e88vYTiReO
G2vlffVZiStPvp8pGyVfhEtcvSLvv5flXcxH3pU8xV6hcu+7LvX+Q4m/gaKH
0XLOYHlPHSF62yJ+3Uji9i3pY4/K+/wQ0ZtFXPp6wZVP+VV5XzVviz/1kntp
iOi9UPytQd7lR4m/xYq8Dtm/t7xjOuQ+Lu8S9p992f8BQGZsrQ==
       "], {{0, 28}, {28,
        0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
qR0l7w2Te8hpuUcESTydnUx/xUp8CW9J/k0sBN8Mr23YV43Jhj5KdzWT/M1i
vG/fG/FP3ePB7wNb41xZI4YxrwVWQ9pVYciDZnk0+pVaZ+E/be+ha5g/7QH8
ra46zzx7cyxwawEVsKtaO4i8zfqS+jry/Cn5co9tLn6Ue4T6vZzPmqzvTbUF
57nnwl5G72OM59Oeoj5Ru/RAvrb8ssAvc64KvulVy4lz1GDERUvtx7olehnx
pfdBfjMiO8OPevhj+NFcsg/raaNLMd8OmMz67X4YpPE4BDywAhuSLxtYx6tv
xDPurGEcVWrLeZN7qVpMXOoJ5g+1azb9+MUh5tO8p6wLk5px3wHp0MeKuQ1e
qRO6YV+zfjL8afnvAy/txU2AW+kYjPrMqFRpj19czpNH/zmL/ueTYQetby/4
3ezkgTpV+yE4lfb+FPbQmiTCTmrsOOIsj+U5zfiW5zJI8ByTe5ecRz1U4qYL
85/1Ie8rVn4Y8/hjhfWld0oy9Zx3GPvl3cV+9mt1oYft2AL41d5twTejYQ/i
u9CI36u96fd/xMEO+pwfcsmfP5gPJm5gffciHPcP1akTz+umMvK4qj95XR7G
On3ucfI16il5+p7ktZZy70uWe9VNeS9YQHzKEZPS3Qf4lLu+sKvxjifwmJ/7
A5+aOOk47NAz4AT2XWuhX1/0DvNZkkZ+xY8An+yhaxlHI9Yxzn47A+fIdDWZ
x/u+zzj8qDvjVlwZ67rV/uRDSiJwGcdHw39qVBbWsUpOM55rct5qSb5LkPw+
XuLnc9bXStfPidu1Beyix+2F3Y2LZazvt8Wck/MNvylXorGvtb0d4oM5ORbx
wVgRAP5o5Zugv5n1BuPf6C3MiwlPcK6t5AE4B1bAXvLsyGzWK2ciWVfXCqI9
5t1mvFkcB3uZzqdZv725ifp2KZXzJXl9ttwTjsp9KULyw8NjHNf8Hc4rZZ2k
p2ViXW1OFe+vrT7jOXfYTByfpcPu1tKZ0F/zjIHeys+joLfRroT61z9JWbSQ
di+dS5m4g3HCexHruERP1juVpcBpt6wAHiVnNqQ5aTfrmhrMC5q8U2mn5N7+
qeSFRXLvuy58Db0jeXM9cavXmGcO1ibPUxwesX8h8+CROqx7Z/mxPny3Dvdx
H8P5TXXKYb60Z4d+bP84gPu7sS7SlnI/q2IE9SufQbzdi2ifU+PJp86ptEc0
46DZQu59vYSXE6SO+Ubqlw/lPaab4CwRO3zD9wA9Uu4f32/nfNeZUg+Fsj8q
nFLn+5H6mrzXxPMdxQwnf4yY5RxXcoTfp6dTj0H72e+7h/OH8N1K6cD7gZHF
eGBWRnD8vt8on8h5M+Qdcp3UL+Vy/yuUPLhC6u43mSfscOFrlsShFNY/Sibr
BLsV86MVQj3VgxfZ7iv3xnvy/jdV3quGXqa9Yg4TX+1r3Hea1POJ5Itun+P4
5qfY/uQCx61N4L4fy/tbGuO/dljeHzoJH0dJnKwWPDXEfzvlXfGq1DWXWLdZ
znIfniF2OSLrxsr71Xi+1ym7/6D86iX7IynNefyuNZE6aTXnWa7EbzTle6fZ
nOP0XXwHNPOlziiT97NZtIe+Q96HDgoP5R3TPES9rEPiD0Xec5tIO0rq0Cjh
7YhXPJa6Jlve12fIO+rbYrdI5hMjXO7/jcT/XUW+4PuWrcv75WDiMBPlftZN
3sFqCs/mSrwTP6iSl7Xh8i7mI3huSP+Pwr9Seff8n/T/XXf+Cfv/ivI=
       "], {{0, 
       28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
Q2KpBQ==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHlcT+kaP2UsM+TaxZg6GNyGGRk7YxxNI0vGMnOv0tDJvhWj2w2JYxDu
uIZUkpHDmGzZlT1Ho6uSZtwsydIplCUMjSEtrnm+3/64fT6/ns973ud93ud5
v8/2vq3Hzxo12VFRlOA6b/6NCggdMGdOwLwva/05mBQws0e3SX9OtuLvzZ92
uexJ/zfU8HklVOsGalS+EGplYV5xKsd8bYz1pJdC7Qjw24sxb63BOn0yxqYb
+PSpGCszwa/Oxti+9Qf4xmGshpDvCfj01ZQ/kt8HUq4P5b6NeXMJ9LI6c90C
6l0EfYwfOe5Ke4eAz2pNPRJI/SFXiSN1B5/SmPJLqP8yjG0/UK0+57tDjl7C
+WBQcwr3n8p93+J5ufIct3HdKc53ot3XOG5bAb1b8JziidcF4uFLPcKJ3xjq
3YS4UZ66mHqWEd8ffwe/J891bRVoH1DrOeUsqsR6D84/w9hoS9oM1GoOqhcQ
h81c7wT9lUDsa/5A+5eSrzHtfc5zW0lcm9POSzy/ieSry3U+PDdX8meUYv5D
2GX5F+J7o39D/4+Dwb/7AL4HXoDc924SRxt8dW7Dron3wZcGuXo1nr3p5znA
T3sB+9TlpPR3zYPnHsp1y/HdKKd/VZE2Jy6PeC70OzWFOHn/hnHFY9j3/jiM
y/c9kn1uBZTI97BPZGxWucrYvDr3gcjf21DG2jhnmVfDR4KGYb1S4AZ7xi+H
3L0HsU+T86AzH0DvETx3E3ZaH4DqKdR3APGbgbi2yG9/Dj77U+JfSn9tAz67
ogjyd6Rg3DpL9FV3R94Xmp4k1FjmUiz6VgTli/x/nL0mtI+DUKONIVQfOuym
7PNFeIF8d826I3yHvpXzMH4oFrttp4OPRd4u+Ic1D7grLsDbGlTJOCZuL4nH
ePq1F+37nnHaj3EUAPvUp8/ANzoD9t5Jlf3sjy6Kffr78Q9lXPSwSOT32H5d
+F8HXhD+w7+eFXmxpZaME3qdFP4ltY8LX8+ko0JjPzgj8qJO/1do65tir6k8
k3OzPrsOv4gAvtqA09Db+R70XEl/7Qs8jOo8fZs4rYPdCuuDNZxxtqAY3zt3
Bn9SbZxr1XcPgEtIMfgUwUuv63FRvh/JTZN1nvfELuWMu9hh++05JHxdxiaI
vjGuW2T/sEwZ64ENDgp/XD1Zb21WbeEbuAj+71Ql56vOnQI9tyVAr76IG7MO
88RD1oH5zJeJzC8bGNfXgLsWwzjo6idyzRdBgpeyZbTgpV/OEP+y/L/Jk3GW
c47Qv58U/PSCIZmyrseRcyIvu1jGqv9cwcu6WHhY5nsF7hG57pMSha/ST85B
+8brivCnld2T8REn0UOzvaB35hew77gFPavr6n76pcl8sgy4ar7P8X1cddwm
wu7k9BL46U+ClzU5vFDGzRYKVc91lnM2rr4t8aWsX3dD6NrlQvXgbJnXikbf
lfUpCxBvjrOvCq3X4Wex8+trSbL/pNgTwr/nQR7i/Szs84hDXqrTAPp+NRH2
LcuBnnOBjz2J+dRmfajBeDvBvPSE/tw0F7TXXuS/Qc7ArW2+6KnGfCT7qh4h
Eif29Rvit9qDLoKzeekPrGtzFXpNWYh8MfCnEviP721Zt/3KecavxKt65hfB
X2k0Aecx0VPkWW1awD+nfwj9J0QDxx+Yb2KAkz6F/c4g5ttTsFtNY79wj/XC
6zj4WjVCfE8bCr3r1kB+yc6R78bpRPhN1SXo36E168546DHqS8g1VmB+RTTW
t9oh9qmljpJX1IwI8V8tPEL8QLNuAbckb9SRrxIQJ6chTxt1HfukIQ/a66v7
P/Yt3rTjBetgEOq2mcU6MXoj+Pybos65vivUCv0c+2wKQz6NShdqHPfH+f5r
tVDrTA+husNcnIPRTs7HOG+K3mZ2FfLH1w0kbpXSArHTbF8hcW122gHccm9j
f/ci7Pd0Ds/vKfSLfAh7n8EOawDrw/vs1+oRx78w/6xAHGrh28G//12ce8dM
+FmgJ/BcE/0IcdoEeSdqgsSnmbYY8XVim8Sn6VMudtibP5b6YXRojHgd81Ls
sg70Bk3tLflE2a1JHFi/qiJXjasAflF7oEdEbeg76y70+4x2hhO37+mf7A+t
6r60H/Pqzkf4fisEtO5h4OFyAPi1byH76rO7AocTd0VfxWce8meK46/CVzgZ
tHyGUGPh0WyhBc5C1SWNJK8aXqukriipM9AHbOyN+O7mLfIVpyXw54Mq/KDK
HfFwZQv8MukO9E9kfV9GP+W9Q2OfajVkfp2Gfsw8Xwh/aIi8ZTr8jn5reobg
Yk/92yXEYbDkB7PWCqlb9vIY1O/sblL3rJWbQPu2kzypHHA/iXhaK/XRXvGe
2Kt77ZM6qhzOEv9U2yPPqkenwC9Wa8jfRxuLHvaiIbBzVTr0d4bfmXms6y3Z
lxFXpQn79A04D31eJeyLmwU/0WfBrlYpqOMHHU4JX638I7Ku36eS142wF1LX
jIPlQq0J8SmyX/9zpyAnX+xSdzVKFb6Q7ehbpt8X/1VHvICdYYPFL/Q+HreE
78oembddilCfkgrRJypboW8m8NPc2K/1Jn6jWefdqu+B+cA34RjyReFliYc3
fbL4n+o6EHo+TRX9tX2rRF9r9kD0Y5t6Akf/C0KN0gSMC1vBH5sHZ4i8nV3T
Rc7gjYKfNfaJxJ8d9E/xC+uTQPFrc1kk8HWMwLoSH9HD9lAEX31oN+jdDnnU
Smaf7c86+Ffmnf6s89eyMD88HHF2fSj6r5d1oF/TCWKXrXc8JuvycmV/+6d4
5AefjuhnyhdelnFAmeBjP/3tMvSPFf3t3JaIu2974nvaalmvubuj/xkaLn6h
jpuwX/Ssgb7Gzs79j/DVuip6GTXfQd5xYD3wqe6nWd/X0d5U3ucfHcP4VU2x
T8sJzZX9ooIEBz0U/qeP2Sr9hpEYJPvZbSeL3urdV7BvdrTcE5T6d4QaXzWT
79bGWeJvdlkczm1DD/hbMvzRfhUp52HkjZS4Vee/lj5VD54m/ZsRWgN1susr
3D82xMLPurO+sf6ZFfTH6cDPmMb7ZAXup8aioeg/pjdBH7i/THDSfukn/qmM
7C342SlbJW/YCY6Cg1pvAeraeztFb237gDs4v6mSF5XKueLvZn4v5I0lXaT/
UY5loi6s+UTyqNr+rvi7drcB/ORonsSr7ZiDPB11FveW5b6Iv07UvyGoWcQ8
w3citYJ179YpzLfcgLp9+qHoa/1ST+LbGn8TedNhiviXeuOq4KJ1r0Lea4j7
nDrfU/TXZvkLVR91wf0w/HPJ+0ZyCexyrsA9skUN3P+8m2G/M27Sn+qu91H3
w0egX+1TW85Nj3kN+b6Z0JfvUUonvjtU51HWe7Ul++7HJaBLgaMdi/uJsXks
+qWSFOAw6qT0V/quMBkbm5DHbXsy8vdN9HOq8zPUFccq6O/rhD4mKRF9e0gx
5B96F/mwxBZ79eR8kW9568jbY1OxX8Ue2c8Mnoj+KJP3cNqn7qAd2cTxJL/X
Zh/ThXGYX4D56H04l70tcB4jpwPXt/7AfXBYMPqLtW6oR24/g2ouiPO2NSEv
+gD08Q5A3dnHfsQFdUg90h56Oceh/0tdD/s/jsB7R8dpqMMNBoMvHvdbK4H9
5Tv0z1WMu+G0xwvf1TbV7zXsZ9rQ/ljG7Vniug31w4qE/cYIvCNZH6Jumq3w
bmR74l3JGrse+9b3h9xSEzT6DNYHJ4GvFOdoFcwAdeE9tjgI+q6bD/nPsY9m
Uu9t1e9htHMN80s2+81I2uXNd9Ni+m0f+vMu2KevpZ1X+A5QgPcQ+8kTrF9B
v/DDO6AaxP4hBv2Q9Wke5PTFO5qSj3u3/h3vNyFXsK4F7LaXnAPtlYzv13Gu
ylPwqzu53xbWg6m8/ziwLuxgvYginhc5ruR5RLBfS+e6szyPdL5TLoUdWtZr
rHtM+gzUsEG1h+Qr4LvoNVCjAef9SH/Gd/0V+mXLHe8jZhjft76jfvH0w+3U
22Je/Ij21qe900hDaW91PYwi7nyHNlyIg8Z78FTiO5Z9jyfxv899u/Kdyhf6
KodJh9GOdlyfwX5/F+/dvK8Z2dS7ivpE8nz5XqvO47tD3fL/808zl3IHvfn+
P/Grj9w=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
YH6ZWcq/7fSj/7rmmfma7+I471mNXyYN3Ej7ZZrMmyus++7kSRsht+YcUHfK
LPRvO3jMJvB7k/HdnnzQY57Nxbzi9ExLAY14k3xCnb04J3IqcFobOiAvnfa5
mOes0f9hHA/fwngIag0/W3PjWc8TcxhXefSLFav6OEJzW6ritLzqaCbj0y2o
Qty5FufkUjb8ZdYr/hvkdnI5h6ypDDxm0mdJkJvahPPX5U3s56fXAIeZ9t0O
yL11D787J4duBi1xDNR9qyX8bwW8g/nFvjAK/vWm5LCutlxAmjYQ8W0MWYN5
0KkazPpQnXOym6Q4LKa60kt1tCbz0y6ifG3TiPk8pjb9tuQx7O6vqBYL+WUj
YvA9tPYf2FehDs8v3R7922kyEnqa33Tl9/WvMh4bvoH4dANXwL/enl7wu3Gz
JuVHrEqhvSYBt5U4iuvmhNMO1lrOq/+NRD0ydsyAnt5Z1c+zqiND1f9idI+s
qj7v5iguh2Ofu7AI55QS06Cnse/gr8R7bDFxDlwJ+XtLwS/2sXKIN7+ujbpv
VhsE6g1YAb3dCmdA7dsVd2L/gK/pj2ETEIf+8GcQh1aPEfCn6+QgXqytZZjH
n06EPL/tCuSjn1mJ/rvI/PPDhKuy8i5fc803qjvlLhDngLWcF1K3sZ70vIj4
dG79yLkqaPZy0DfP0Z9HD8EP3vpA5tPI6qyX939kfezVmPkU+jryy/7oDu4L
xvdtWTfmx6Juug091pe3isE/5vMWz72+GnLMD2udYZyPRf7Z7d6m/jXlv7nK
swqqM491P5zF+cZ+jvFpxXxAvHX3sq/Nr8d+1moa595J0cyTtmMQj2b3QOZn
WjvO213Lwi5GtxDUP//78rR3xgnyVWtBrjOiA+8hxW+wjnW7ze/Bv6FOGp+V
JO6s+dhnjxuF+5hXNI/35hLs067mFqOK+oHuedZg+VPvLtYS9ckhmdx3eSr7
eokSnLN6J/A+22nKeeZFI94j8ruDOtmDWI8qFmN/Lh3BvjVhAai3uy7nkttt
Gf+t2X+8Mcd4r/wlg/1oY1POgbeSuW/2J6BW3kDKi4lj3Uxj3XR1rzXqaP7S
+53zqurpQ/mzvuJ0kt5z5uudoMYc+ndGAeM2/CvKH1KffI++7JeVOR8aI4Io
b05x0rADXF95P+21jvXZTBlLvdJ+pV0bzNPcfJ1z5m8XKH/5E+4Lox5me85l
9lTd6/55txuu9832mseu6Z2lUPU0QfPN5+obCaq3pXU/zuB7jBHJ9wI71Kec
N/jdHq13hK/4DmVsX83fz3Me8iskUY97J2nf44qT0VzvB/OebpTdQ/418s4l
vlNZbdgHjPN6b/1AcTdFeMLkpyny2wuioXqnzJR/myuOE5iXZqr6xwHVo2bE
ZZ4WzgjdrxIeU04k75HGt3xH8AfR3obF+7axgXb1dY6ZIr1zj5PP5/3MqpZB
eZW4z86+9a/88opq/0rNzXpPdL7UveFd8bNUT08qPl+jvm6h7LRG9+E4vW82
5D3fWPaE/ClSJ0d80hPpw3Xej8TtFOF37zlS4x3x0fzdb8C8sNqxztkj2K9M
vXN6sXpHfFn6x+re10l+LKJ62Vj5qHd6e4/wTdT+nxS3dYjTyFD9Pac4iJe8
0pKXrrq8SHJLEZedo3euXOk/UPkyXn23j97t9H5iRUluuOarpoq3hqLTdV62
8KaLPywct/7i/w/eYnsQ
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
cl36g/2FzHMx+4lzyCnODYmT6Z86C35QGy7B7lrFe9BfLZ8GPe0rH4Nabzmi
Pyv+LdD/rNAU9uvM1IPgK/nyENZtSw7je6Xu6JeGUxD6gdp1CeqL6ZeCODWz
ZoFqJ2agzhiXHdmHPdyZPwO2sC5+Jf6bKb8vDsuc+ZbkX5LE56kjtMNyN85f
g8rZB/7QWL/j+57Gen8R8JiDbp3B/tIY+EXrNQb7ek0H9DEr8iBwGW7DQNVJ
rY6Cb9fnGbh//xrk2a0+RT/U2vQjzkd3MC9odaGMg7nBmOfMdR6ws+KbALur
81mflTbS/2JkLp0pfuwv+AI4TyvfJhLfDi/ORQHliBsl/z5wGJ/6pIPfYxTW
1svjEI/W/CnQw7zsAb2MrBz61W89+rc6Joz9vtskzAFGSTX01UPbI+/UP31J
X2Y8m+9shN+1TkMRB9reZrCHfmPdNayXtIR+dtoh1pvJrC9md8F1nms9WOrp
KukPE1jXzS7+yDMldif1ivECHnNpJL5rBXTgfFlxnnYfl38Res86CH4tehnn
trQUznGDvArBH5aAvNJvj0dcmCE7UJfM6Grks5XuyHnoVgH9u/gk4ll3KmS+
uk0FPv1W4V364TrnNB/mn31V4vJDwbn6t+fiVZ/ry333ncCndgyHPVXfBtQH
e/Vq4FQGxWCtBq8FHv1qGu1a6lfEfB+G+2ZEGPv4xH2gdgTrldErlnVrfiT2
lenjUD+0d5NhB7XEgX3+mzM/MZ53o+7aAyqQh2pdPetMVBDzL43+Uo5JP38g
+bZK4jWb70rmwTY8rxnC+lKTCPsb7//G+j73LunxQdQjrgj5oM+qhx+M+G/4
+6J/Bn/fhQYyj3NOQh8t8232eY8VlD/6F+J0iiadG8z63Ggg+0OfNyFX/boS
/rb0Zqgv5vQ6yutxnPm0Xd4nqmTO9BR8E6UvFEh/9z9Nurk/+Zzm0U5Zo2Bf
RXuCuDBnfsn8rF+LfaP3afhBH/Ixf++merF+u4ZzjnuhH+nmDM4HPv1wrnme
4lzwXTvWw4+8+TvMLZPzWLM85pmewTnqRBzsp3+Syblwsvwub8L6r7jJ76En
4s+omuf7RibnOdtzEc8XXuA8uSid89r5seyzTR/fY36V0I4336beSQ+p97Qu
tNv/ariOcqTc3v+UOs15zkrhnKc2aku99HdYLwqy2G/DlzKeU97kXN4ihfNZ
HH+f6rkytxwXP+XLe5K/vBdekb7RTvD9/T44lPVGK+a7kWpt43eP1NMPF+Yx
r1320k9huyhH+Ylyl7HPGG/wPcZoOoL0KH+vKXvOkn/HBsr3GUMaQnuYrg78
Xt1L/E6nINk/wXv75PfsOtFbfrdrIeKveHlXTJZ16N/9Ufizpd6uucj9UWGU
t3U09dO7896SHdx3lfe1zvIuNk/q2N1c3t+UzPPwDO6Xcl/5TPzwcBnlRTjx
PN2B5z1e5nnpHp4f5buTclvmSk+ZN0dKPDaX97VPZd6OEtyxgqu3vLPFSd05
K3bK4e9fw5Hxq8h7rrKO75hW8lOe7yZVXic1CzknGf3kXXAOqfGhvIfWkury
vqe4Z/K8y3+5H0Rc5gjp04eZb7Yq9WQo+7Y1XN6RLKkrLoI/T+bQLfIu7CH9
ol7mtvEyt5VLXKfJ/RbSP7vJ7+RwuXdc+pC876o+8r4bKO+5b1IffZLMwQ1i
9xYyV2WJ3c9KX66Rd5OD4oenMi9PEr91lDjcKfhzn63/D02DfZQ=
       "], {{0, 28}, {28,
        0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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

       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJwtWAtcT3cbP5h9vG6z2Hiby9HG2Ot1C7mE0zTWG7a532YnLcylXEJFnF5h
yqzIZrE6m0sro61hETmp1sqaKLnGkS5IojG5/Y3n++3zqaff5Ty/5/p9nt+v
44yAMTPrK4qyuNHzP2N8lnksWuQTPPblFwM/n3n9+vi9WGzL3+c/6p37NUNf
/BPyQKi1sE6o1vQexlF/C7X3c74O80Y85pVr+M4I5vf7sK4OeyjUjCf/8Efg
MwV8jDisq8uxX5tZx3PAR30PYzOD5/bD99arGOv1cL52DPy1JvwuD/PGE8o9
i/Rd7vs/qP4B+Chf8txI8veBPPpRfKf2p/ytyX8s5LYHYayo2GdqHK8gvza0
D+2nTAAfy4GxFUj9FnC9N/hqztTvBOVL4PxI2u8e7dqNduzKcyvuU0/Mq75c
j6Jf7lHOHJ5bjf1qxF9Yf5f6f+XAugKqZeE8PfAJxp8+xb4A0ieYV97AWD8L
qmiPsR4EvuZx+jGH8ZNBOyZAPrMn7TadY2+OB1L+paD2H/R7c9qpKfhr2+mf
07Wg/+Y+8xbG637FuYG/YX73RfBbfB18DtzFuS3xvfJ6NeXH9+YUjM1B2Gf4
3sZ4L6jOuFUK6Idi7r/M/KD9dW/obTlT3p6Mi28ZF32oz2XG6WbGYzz4GT9A
HiNlPfZfSbwtNM4FtOO527CLj1Ct99lqkSd0o4zV6GShil849l2rlXXNdxvG
0bFYb1gs1F6n4vyiLyDXRzaoUxXkd6M/F1Ef4onxEHa0k+i3nYyD84g3pTPz
cvId8Ku6gu9XJuL7xjEil3G1yy05f81woVZ39yrZ7xJfIfN5PuVC7bxS4R/d
QKjaacdV4X8uUKh1KOiKzP932zUZp7a/Lt/1W35Dxl2d5Dz9rZGQo/kfkLcT
5FVd4XcllTjylDjzN/12n/nWgbjWhfj5CeLDKt6K7275w87v5Mh5Zu95QtV6
NTeF/6hbZbCX47zMVy89LfNtz/0ufKwfs4SPviRD5metPSx8+mcelfX5RdlC
L7U6I/s2NDwH/zcVO2muWxEPs7tB3qID0NMNehobakBvMg+9GNcjoY/pyfhd
C78ZmSXw4/xoxMupWeIn9fwWoYpHjPhLX75B7G0GNRX/KF6dioRP8IFcWV98
8oiMP084IHIuyk6S+Q72Hhnv85d580Cs6KmVJoj+akXsn7Jv/Nu2jMOb3IRe
DRH/idMhf04Z5O1BXNgNfew8+M2ivno+/R0PXDPHpWA+wA3x2P4Z9JnTSKgS
UAy/vddZ9DPqPCXezLTaYhlHRp2U/cPyxX9msxihWlL0CcRleo6c16Ke2MEq
bPSb7J956rjs/yk6X/hv0sWPlllWKXTvechzphX9kgV9splvvvCTMZG4/oy4
1qiGeI51JWYT9l2Ngt/Choo+6tkG0NM9ROa1+fGY7zoe+dY6BXnk8T307ZqI
/HIJKYc9HCKn9l6F7FNuHr0s6x/Xid/1cW3/kHNP5RXKenjqJRmX+4sdrWpn
8Z95aSDkG4t8tBKQh1Z/5t9O1sOB7CN6oe4YTvRnozSM105Evm1IAn4sKgGe
/OkGXEx9LOvK4gXY9xDrim9H2Dm4Annz6hTZb4QBn5SL5SKv7d9d4k/rE3JW
5m8Uip5mbpboZR+vETto78Tj/DgnyPfWLsRbOPOrO3GD/ZEWx7pRQf32Ij7N
GuapuQp+rEyD3AseQs5v8lAPZuvYP2c59nf7GPzSh+G7/P/hvGt9IcfSUOB/
znbR32zSF34M7Qr/9dohuKL/63vgyoDJks/a+UdiByV2lZxv7ZkDvpPKQdfT
b+xHjBn3WT/pp+3ss4pZX79HndOeLGL9RD6bl3XkdTzwS9kCfZQgULXBKxi3
LgQehcGvuv9++HNUInBoyEvliPt08Zse9AXw1jtU/Gd2ckg8219NE/3VQ/kS
/9qjVfD/7HWsf6zTqaiHRhv2LS6kE4gvhey33mc/c/gq60c49j06Cn85LUM8
Ri4E3Yb6rHwaDPnDI6ReqZsGS/1T17WF/MpgxN2ylAIZV3aR+NNWTZL8Mqas
Fv308UEXZNx7HvJy9BHoN60T+AcchJ0n9oK8Gew73In39dk/Xma9cwe+qGGs
C12Ir/Xy4Ychg7G/Vy780WIH/HH6MOw5rVjOt+c5oMdsh8SX8kqx6KH0yBJc
NP13Sd3TPZwz5dyAQ4KjSoNWOYgTh+ip/zX9oux32yn6GV9niJ/tzDzJO3NJ
O+j33Veowy4nYP8R6AO1xqzvseyjK1nPa9k/57Mvb1yIfYXByJf2ocCJjL7i
H2PfXdQ57yWij+W1W3DccngIvquvuKQLzcv4VeSYOjcVcbRLcF/plST1zXw5
VvS2AkoELy2PDyQurR/TBXfV7CWin5UViTw9nY34yHEA3wZ8CL9sPwd505h3
WezHV9N/1+m3N4k7O35GXA/PRH/SL0zyRpu8WfykHAkV/5gjEkVetaZS9DD8
f5D6bE7bI/Xa+Kab1HX7WCfxk7XfTfymR0/IE35eK4TqHTZLvKp900pkfssY
xMP1CPRv+a5iTzvwEOJ2VpToqeUiXpUq1AdDp/9MxmkV73G8F5rLSDdOxb45
PVG/q9YLTqvPHog8RsVUsb/VMk7004b6Sr22OxbJut1lKPwx4O1Tsj+0Bn3a
rhPIt8+SEce1Q2TeLKd+uaMkPu36D4Azr7+MPujpCdmn/RQFfHXtDf3rpyGe
xm+GvArr9yX2ZbznGm/SfxXEz/0jgB99pgLH/n5V7K/41bdkvfFsC/E4AvIv
7CD4rk8PlXOt096IryMt0VclA2cM00vm9SujMR+7T/BEH+eE+tc0U/gYqWWo
65FNEMdfvi9xob8RLfa0ozXgVfeeqPeeZcDVuey/nvEetYf9TBHp2RvQ7+RT
1NHCYeDTMTBNaPKYY8LPp6f0wea8NiKHOWmrxJV1eDDsuuo/Ek962/rIn/gY
4ODcPrhX3Gst1EpMRj/zuD/ifxj6GXO8gf5u5QdynlFY+aPMt1DFrub+WIkn
rWQA+sJlwFO7Pev4SPprC3GmlvemAOCtknAcfezmU6Kf4T7xIOLQC/m0tYHg
oHllrcSL0ddH/KxHpcv9QVv/ocSNHTdc7KSmXkA/l/oJ+tbXnIGHRUswP7kR
8KJbCPoZ51Lg6JtOoo/WOAb5nOQpeaDWqYiPZpngr6GOaV7sV8LYx2zgPd2X
9707qCPKsTXoL1pMEnnNB4/EX6rjG/TBEb2A/8Hn0T/NHIs60aOv2MWyU6CH
2Q996706GRszZ6BPjdspY2taIu6Po5IRL+23I989F8JeM5oBx9LaST7r8col
7I/AfSnoBs7peBb6hbOur+S7CHFF/536hRFfRrOvPuKHvuyXauBXyF3gd5kH
xk1iEF+dt4pc5tVq+MV7H78rw/18xUvoq5r/BT99noV6sykW+LzExLojG3Zw
d0e8Lr0KPN27S/LUPOMp56k9+uDeG1IF/Eynv7rxXeYU+5YT7G8+oh8HIA+1
yEqsL0d/bl+vh74sfSz8WgCqbpiJvmJAGPSYF4A+J+E18GvhDjvVok6ZqZ7I
h9ZtcI5bY4xnHAI+lKSjbvvZ4Be5C/70CIR/cwbKeUYq5FLbo/+0Y/hOMQ74
oh9g31lGvdZRT0++Ywxjn/oYfZ0+NA9jjwjo7TIE+0pRR8yDwexTC3De/WuQ
PwD3Y3X6Uaynoa5aw7Mxv+049u+OxDm5GzHvtxJ8N3UGn+yX8P2fsJe14yTG
09g3R7AeuBJXwqjHL6zzQaSbuZ7Ed4tWrJc3K0C/K8V37Ifs1ehTle18x3DF
/cpsh/dBo5TjvZRjzU32heBj9ARea+PxbmQUUu+L+7HfxnuPMhj9tBH3O9ar
YXftLt8hUuinDMq/kfX9Q/bVKcTPc/Tju7z//kw9S9n3fMt1b9zvbY3vnMnP
sM8GVUpAtUOg6krqmwtqtyGtx/dSZ1DV5DvpXOitFqBPVAeh/9JDiReDaHeV
cXgB93ON7+kq35ftPczDtcQbV+r9Nd8Fh9A+Hfi+xndUJYf+IH+tJe8dtI96
mX2eg/Ku4bvtGepxhffRAubBMn53jTh3gTg3gn4xa+k/4uNoyltAeT6j3PnU
f8Xz9X8AYTuMkw==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxdWHlYT/kaP5YJdSn7rmPXWG6WTA8Th2EGY6LchozlZGSUfRnr5B5LN/s2
g4viXDyW8oiUNTmIGBcRWcuRKEtqEm3omvfzmT9cz5P3+X5/3+X9vJ93+56m
Y6b4jiuvKMqMyh//8w2Y3Wv69IC5Qxz+HAQGTOzaJfDPHxvx7+M/La44t+dH
qd4oEqkHY2y1eStSqYmxXkz5sBDSE9IaVoJ1BqTpi3nFF2Pdn+d+jrF6EmOL
6632uEd14znbqY8XpNIZ0p7P+QJI4zj22d/gPKUU9xprMTZcOb+T+uziuDqk
nUg9QqnXGUgtjOv24XzTkb8P5L5A2of3mKMhtUjquxXSjOY5lWk36m+V57pU
jrfTjm3eYX4j948j3hfEU0p7vuHv+2nXaOzXXDCvrSQ/lwqpH+dHEcd96ruD
vy8pAK5BuN+c9QHrVkAqdd/j/ipl2DeS0g3SiMQ66wnX74A0WnBfa0itD8fE
p/iQ/7W0T3X6zyna9Xfabz7xr6PcSrmSfDTGPiOf9ojNw/7LwGU4ZGJ+1R76
+ULsi7oMvTqnQTo8gz7nciG9X2HeB+eYu0sxHgocSluOB0GqrzFvTSfO85g3
VxNnEPXbRj//QBxF5K8K/XwF8eyifzjjdzU8G78nQ08tYSrOixz+Ss5bO/ml
rI+IE2kEHn8h6+u+eS7zHWNkXm96JUfGXqrss0MvilQPb4ZeOfG4t2UK7il8
wDh7CTwDoLeaQ55qMm42k6/Z5GXLG+BoSr4LYQ/lEPNKKaSxNwfjphk454CF
c3PrQ0/nGs9E7/vvsmW+RdBTkUPbPhI9ei1Kl32Hez7AvVqayPhOGbLfs7Ws
15ZkyTlaVic518g6Crv1q4778sJx/7W70CsJ+tidydN66GuVka8fiX82eTI5
bkJ+nzEOk/7A7xHwN2ucA2T7Bi+x30n4UROKHst9z/ffk/PH70gWGXP9qqxv
W+GyyM9Lz4k+X288K+uzKyfKuKTomqyv/5Mt53ZqjXPX7JJ71IF9BK91yR/8
3foXcDQ8BT1Tme+eMh80II56zLfHXmN+BON1+HOsT0Z82Q49MP9oI3A17JsF
e5wUnrTWi1NkXbHHJTlvRthF0WPWzd9Fr83ZgkMb4WbJeMqBGMRXfqSsC9px
SMZRA06L1IbfkvMPjRZ+7ZDJwqvdME1wapV6ws51BkKWJEO/9oynSPLVk3g0
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
nhzwcfw/GbWipg==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtciOcef8cOKc5xaJJi71xzmzVyOW5vnNw2PmRzWegVugjbMmGjvdhO
M9lYrp2l18wlY03kEuOtUa2ExOlCeiNKqaSNNpeOfb+//bE+n/r1PO/zPL/f
93d/nlcC3vUNbKQoymKH5398Zy/1DgubvXxykz8G82Yv6N9v3h8f3eX3+Y8Z
+6Bm+B//WL+Aqg9/BbXeqgU1ku+Darmct2u53mjO79p+7rNPPwTVd8v3Yxyr
38n5zo847i7ri/ndWl7D8TxZ/zapcpL8VM860liOtaZyzofkb5fyPGO2yD9Q
aG9Zn0j+9kCeY3uTmh9xnV4pdCX5mk24XkuQfZ/zu1lLfuponqt7Ui/GP4Xf
FsEZIXo6InrU5ZyLwj9bzjtAHLqPzJ+V8XbZX8ix/QPHxlHKp5ki71rB58+x
Mofn6M1Ff6vJ14oRPY/jdyNY+L1H+c2rdyi/6EF78lj213P+cTX31XBsuPC7
8ZBj8yLl1Ab+xn0qqfWMfKxmIme4nHdO7OYj+Fwpnz1E7Jgmdh9JqvwmeMfK
2E/WTRB5h4vd8mXd3FLOv1rEcfA+fp9WUo39Y6JArfJGnJ/Zj/yU8aQnhpL+
vYPY93OuK7rI8zrdJZ1TwnV9CgWn+LWfyNNCcL1Ouc0tYp9FYp+PxF/cxd/e
Ez11EL02Fntr4mc1xZzvdIHndvQnjhbulTjHMbGcftf1LtYlHLqNfdM8SnHO
2tfugAa6Yp1a7w+qeLetwHztmSqcF55eTXtOpryzIihnTgb5VzJezVTB0Y32
1t4WP2wr/tWP67TNEte64PLjvL5c4mZyGfGd38v9D+6DvxESCvms0XtvYbzJ
CVSLDyvEuvRW2TjvDedM0JDO6fjesQLUOBV3CXxctQLwmTuiGPOXDpSBlnjd
I35H6vEDf8rbP5/ytb5Hu/YRf/+OOPVMiSOJJytJ/LBa7NtG7KaIn3uXynk+
nL/pD7567R7Yw8qdQny13fKB42kM5FcunP0R+8deO459V3yPYV1euyTsm/Tj
YeCauQLzWpVjCuZTRuZiX9nHsLvuvRn2tRq8qyl/NPX+Du1pvEuc2r3fKW8z
+qPqIbg+lXEP+qG988/8x7yhZGXynP2n4T9m+wOwm5Z6sQTfY55cA+2aCrnM
jH0XQEdN+Rn7huYAr368EPLr04uB29w85gj2zWh9COsqbwK3ceA/FtZZG3Mg
V9dx9PO6S+R/aA79bOUByRtXSaNpHy2aecfqJf57ROJ1kPjtHPHPWsljW5kP
zN11iDN931bYzT5fXgS+XVKBz3RsirHic+g65vv+Aj/VCzvA/xSH9vx+Zzuo
XZB8mXwm/AS5ysaeAr/l0cCnXO93DjT0CvSoOVvwG7ODF+VpclrwZFHOnJu0
Q2+Re4bUjWeSh2ZJHoljPtfnS73+YgjpmnLkDfuNBOjTdOkMvvrWVsCrF8xi
vjBtfNcruiCOlOwBtHdYb/iZvq2ugvM7mY+uBkM/muPOLIw3JMHOyn4H2F/x
HXcT8loa8KldutLfDu+mXEEppAvLiaNS8uaPUkcDaE/DSfqVD+nHSmOpF7WH
uS7oe+bJqmaQWyvvCbx69nbqdWUH5h2fHqB2Fw/mhZ4W56c/4fzVJFDTywH7
bK/R0JOxtAF49DiPs5i/7gl/V6LHgp/+zJ3+GdmOcu2QfHfQIq7xUicEn32D
9jFKZd5D8qnUDWOv+O+WT2jv0hXUX+zOSsbFFfAz5k+jPiM3cN/gRVyfxrxu
+7O+qS+M5fnjqymn6x7Y0YzaQz/PrwE+zbcgDesDvOHfdtbX1OPIIvJL6sXz
e2yjfAHMp8bNKs6Pl35kktgvU/LkNcH9mayrlP5y1VrO/+0S8/XOBPCxO7fi
/vUzuN4hkHyyi2mfqlzaa9Uw0lFF2G81Tmf90wzkXd33q/9h7F4HfGpEKOqK
MmwLcOtuFvSpxUxl/vxe+oJmn9Iva+iXWhjrszVf/HOU1MPV0h89FnsdZp5R
ztOe1ov0T2vOJPYneXNJ69Mo95hqjh2qWDeK9kLfWpYr/fhkLutHyvuob3Z6
Th7ogr6gWuFZxJ3euBL47PCFrJsxH2CfPTEedjZebcG6/9ou6i/uMWlkLv2j
/W3KuUP6L1P6cD/BVyx9a7nk0Z2s66ZO/zKO5jOepjCutKI+9Jea+dCvtScb
8ijJvsiXRsH+q5gPH4U8qV3tzHqe7nwe80dcgMNulZCBceCii+AX5g57GquT
UP/sL+OYn5JyGBd1Kv0ovYp+7j+ddiy5Qjm7S717Req7j9jttuSTYMmr7SqI
83XGl5L5BOcpYxayTmxxRd5U501hPVDO5BC3Zzb9xhV5wvJaiXqnbdl7EvMd
zyHvW4UDEGfKF21pP30ocJlle5AvbRcn5GHtxCzma8+zrEsveWCs+H8D3Hqy
C+TSVkfRTvMqaZcMicM2Yscw6V/elj5+7iXOn3qV45LmzC8PT4G/EuEK/1Ln
zGP9CnoNOIz6x8jv6qD4k4zn7qCGc34q9rVOZJ9W1wn2VNRPYV9jahsb85sj
IL+6KY/9S2gA/MIc9Cbr0c9l8A97bA79vSCI9ebLoX+pc1bsI7GL2M1F7JYh
96Jd2dTDiIP0y04TWK/qS2inl2PYZwyqOop5z4nsr97cBPvoEQthP2W2B+1U
/wh+aLpeBi7rYDPYS3vhOvxYbZTPuj8+nH5pDAAedcZi4NF/LcA+Ww9k/+fQ
lf68qhdwahPWUM4q1nmlifTPG6UelMr9NIP9nBF5lPRlJ9apYdOhX6XBEfKr
N5YBl5F4OBl8on5HfrAexMIettekK/h+0x11TP3HEIytx37svzs5U+6pKcCp
l9+GnMr9ePiH0e8drFOTOoOfNiswEec+8k0A9Q2GP2izW7PvbWuyDocwLyrj
BE9/yaNBcr9awO+qzwHJQ7rcX5IZH7YFOxlnx6Fv1LeNQh9pxceyr5q+i33I
i+8xr6yNQnwqbiE3QIc3ENcPJuubZwbj120m7GUPTAE+VQ+F3Ko19TTWmz1M
jNNafgu6IZ3+E1uOdcbxTohDdRXvj+pouUfIvcESat+XPs0/hvMjMll/8jaz
322W9BP9vCf6frU8Hn2xkhaO/tGouoz7kBHUnHji6yCvHpzJ/FrZgfeohkT2
lRtNfNdu32ceWbEU/mm+SLtqyxedAb/3H8Julvca3Du093szDlzWgY+6dQn7
pDZit9BaqctS592EzpV3hxXfcN2xbqxzhYnoE61lQfAzOzoVeI0Er4s89yXa
d8M78GO7RQzl9I9hHWyoYJ86OfwW9dmDcfZ1IfPhvhD2q+nXEOfmthGIR9P7
V/Ax0xwRv5rjQean4esRt8bme/Tnnuyz1ErJk07Sn6VIPlkn+TRAcG66TqpE
0q5xE2jHRycpZ/IUyl+7n3I+qMe8eXQ5+/Db/2bcVngy7x6qZJ2+0JLf32p6
l3HsxnP7n2N/ELuDcZQ4gn1CbhbkN9M3FtFu34GqhU8Zr35NWR9aMG+YT+X9
JVry5Ul5n1gs9z55X9Lny7ugE98j1E1bOW7VjfFaHsx+6Xxv1vs1LdlPPEym
vbu58Xw/vjMoU3mvUT9j/2bNLOC62sacH+xLvjNJlXM/8Xz/ZdTT3WHEXbaY
+tq1gXyz+G6jLpR+Mk/8MkTyyhlSK1/mU2XcXe5Nd4nf/J73Jq0v49e6f4vy
f8U+R4tkXjYDJX9V8Tw9kfXW2pbGcXICvwfKe8oS3k/VARzrn5wgX2ed6yZM
Io1YxXWTgnhe/WXOO0o/eVzeG38mf0P6a9sSP+0r/vlfuSdNk7pYJe+hXdjH
6qHEaR0U/eyjXyg54heRT/j99DPiDnjK8wbJ+8A64jGHCi5f6ksp5LmqP+PC
2nBJ5DvP9XdZr5Rul/9Sx+wgscN6wdNc/DFU5Nkq9ooTPXwsuLykb7sh65ZI
39og9/0FxKF7Eod1rIHf75Bat4TuJdXLiVObK9SJ1P4X9xvPSPWJpIqz1Oco
9olKHt8Lre3ynr2eOPTB8s4yTN7BrwjOrqL/P9/VTsg9MEfqxgmpE6vlHqFI
H95U/KCX9AXP5Lxv5X1xmvAfwvXmOupBayd4vCm/HSX1KE2oJno/KnoOl/wg
77NWpNzjVkr+ayr6HyLvfwvkXSxE5OjzfPx/dtiJsw==
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtYj2cff8ZomU0Oc8p4srVd74Qa0szybGTMzGaW45Wn0V7Hi2RGC89r
bfMatuXUVDybJCWviYyRx5BKSUwS6k6lKPHWsJx67fP57o+36/r1ve77/t7f
8+l+PD6eM/qTJpqmhT31+N/o4M/enDcveNGHzf9ahATP8u0b8tdhF/k9/tMr
7twc9Bha/RoAzTKunU1/cK24Vn5/cp3OtdahnvDqbe63vkc6L3BtBxHf8RF6
kXe534/n+gih17aO9yxZ+xLPmiv44wn1o6TvdKScKoV0jAqeq85y/oj89NOE
RiDltM+Jnt8TX2sn8jUhPUcXuiuot50j+qcJ/1rys1qKnJU8134SeWPJR79C
Oka02O2AyDdD1mMJzXe57ywUe50SuQfK/Y5yvpFruxX1M5cTX/sX5TBiiWeU
iD0aua+WyD1HzivFnk3Ff/GU13mhlufp9IMT+JByeD4inUX3CRMfEM5/IPIS
zyjm2vAnnnZI5Lsrdve6xfMM0jfiyslnOeW0nhc/1Yict7mv9RL5j4j9Hvwd
N9zX3MRuEkd6jtDp9F/S3V1BvKR07o/YJX5K5HrTea6rrxIvSu6FUU6z7ibp
zpH9ITXkt4P7VgD1Ugt5rt6kXFYWoT5B/NdDoC3+ep9+1IaKH1aLnm5c25Gi
x7Pir54Sjynkqz0kXzsgjnxHDZO86Em5s8cRHnWjPHdianHuNQPQuryR64su
gLY+4wb4LfsCa/OZekDtI3/yW/Ml+Uw6SL4v069qG/UwpG7YtRLfl0XuNVIf
XCW/XpW4DpU4e+OexDv96Dx1g/LeLiWd8DaEX+2hnH7fUe7Yw5DXHNu+GvtD
t1YCb94fFYyvaVeA5xGkQK/HJKw171uAav+jctpxy3XAlr1AT+t2knwCkinX
oDLK9av406Be5iTaX88U+UskHr8TvYukrnSVuDxPOxjrGGdm/U7idZ/Ne6uG
UM8u7uCvJm++BjyfFyGvEbXsAvR4zTcfdP2KsnGeO/A46LTxzcJ+Y4sToOd+
D+d24aRz2C9doWinAaBr5ySBjx46i/J8foHy/Sj+Wyf+XSrr5Yw/Y5n46bbs
S31UO1g/9Lb7CHPDqdcnI0h/yp+wr0oZDv56jVsR5HDPzgFe5D4H5wWJu4Hf
MjwBeN9GxoFfyPofob9PVCLwvEdtwb0Bq1Ig1+oOmaB32YL/tevBjI/8n6mn
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
       "], {{0, 28}, {28,
        0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWXlYUFUWf/kZZiYzMippLo80s3GhtFwazeeSpTkIbqSYPnAbKUODYrCk
q4P5qYnjnus8c0lE3AVcgBebCyIqJoiIDxUUkU2DRBHHfr/zj3wfnO/ee+65
Z/mdc+59eAQEjZreQNO04Jee/RnlHzrwq6/8w0a7/DmY5v9Fr3en/bnYRn6f
/VhJDysGPKPOuT9ID5Eadb9zXFrD8VNS+z/VoJoX1/VOsr+6luu+XDc2iJxh
3KdKONYCSdUG7rNbPCC9yXlLzlNtONbHcOyky/mFIrf+Pvm3cWxP4rlqPqm1
jPqZl8SOas7b74ucKxzrxdTD2EqqLxW+EFInjfMqQuaXynl7RO5c0W+cyP1B
/HhWaDfht8R+sVNVk5qLKUd75xH5x8i+wXJumPj3uIwfin/2kOploueFmuf8
b/qIvq7cZ12W8yaQz7rLc+2mlZy/IucfreP458fUq1L0bv2E+6JIDV9SVcF9
Rg75nXju1z8i1QYKLSJV/5I45wiNFv0Gip9eEPqWrOeLv3TyaVvFzmyJ33nR
r7Hg7nop14fQLissh3xrZnG8tTntux1KuXs3cL9/DMdxR7geEE3+nudJR5RT
fqHgq6SCdLOc85XYvYbUbi90mcStlcQlTXCdKHpPEXmDJO67xH53Wc8SXEcV
kZbf5HqOyX1Bm8sgd0npXch9WlaCfQWexVj/wbwFuiWmCHTPuts4JzICVH9B
YZ/l1aEc8rMrQM33wiUOm3nOyAyeX1lF/Ysk7n+QakGi/2dSL95lftouYu+H
rA9mtuCugdSRlhKvwZkc23N43qlppTivfyD0NsO7FULu9x6XwT+qayrkVscl
gK/58KNY7+8Vh/mK2l/BF3DxPMb9zueBr2QM/KJ/kwz52ub+5cT3NJ77+Art
vF4s8SWurWZi7/vP57s1VfCYK3jsI/l6TfI64i75+s6j/WPTEC8tuBR62G1r
r2HfgqyTmH/Q9jDG6yN2QI9Fw/Zg/sIvMeA/th3zdkGXnVjf4bIP59UlHIN+
j23Yqz395AbzdQvwYLbKw7nWKuqhjSLeNY8btPcNyU9Pid8BUrOhjL8jzp3V
gse5t7g/MIHj/buJQ58y4MpO3ZaD9Ud9U7B+2oL+RvX6XbDPtxZ22qvuI452
cH0y+KM+t3GO+1Ssa2rQAfC37oW4Gnf2JYJ/a8YF5vnwmzh3eBucb2R2ob6T
11Av7Qz9Hy7xOEkcWo7Uz5GSZ0sljseIWyX1WLvZk/KaegEvxmt1wKEqyEG8
nLnxhyDPbwr0da76pENuu1euQt7DHoiDWRuJPHTMPdBX/WXUdcg7OB54dooD
T4O6mvCH9WAl/GZ4DANu9ZgeyFOn9eFyxiGKeg6IpZ6zCyWexKuZIn3yCO3V
jki/jmX+mjc5rybRT0bGaODEyk/Ihfx22xAH06079FEhWZdgj6cOO+yiRPjD
TPWF39WwTOJa3wL9jPzvWUcCklmXFjYHzo3psacw7tSacR/smkN9vwVulNt9
4ih3ktT9k6STS6hnvOTdFcHljxK3KMGrP+03VjAPzfpLHHv7Qw+1px52WD9E
0d/nT7CeTM+5A373RvTv17msh1NYZw01k34cv4/6FC9lPqwIob6pTQow7tk5
A3zVXYEDY1FVDnFZVcw4T6O/Xh5K/f6bTLkzpR5ekz5hSh3Jlf74ieCyj/T/
1VJPa5LIp9rQzyMH50PO/aPAn7UhE+eaCbk4Vz93h/Wu/GP6baQnzz3nTjlJ
rTh+6wDj950r5Nr6v2GH6v0O7br6Gai5NfwK9rVvCv8ZLmd4Tp0f5Sy/Tn1T
qL+xSfqBr/SLQcSlShX73aWOxsn6nDSOvSdAD7Pfe8yjW7NZP0MnAbf6ofHE
X00Pnt+06h7WT5xj3m5fTLwe9oUcLSIR++wZ30CeVtCKdTO9Gn1Dj57B/F7/
OvJd9+9N/IQLPjuGUO8GzCfN5Tbj1EfsiJc6+UjysIXEMUXw+oXEt+Vlrg/Y
CX2tBYegl5odwrodlkV9R3SAf9X81bQ/JpH9cGQ5cKc9nIl6YsU0dqDvpJms
O99Wsw7f2gu8G3bpCczPc7kIvuxC8gcUsL6Evg377BXj6PfyO9TzNu8/qoPE
74TkYb7YFSB2usp9tFb8si6O9s5exfqc0RZ26kWvwT5jqxfsssa/zX4V9ibw
pLrdycb6g/HQ05m+CvExI0ej7usro5C3mn8247Yt6AzmzR2sVx89wby60hL1
0/J/xL7vsYNx1BKI778z/9RU2qc/kvjJ/dKQPFMz5L2yX+pMd75bzMufk7Ya
zf7aIRw4c2qe4Dyt8i3EycnyhF3WB/W/Yb6x71nM36lCHqnYhtS7MuEc+DaV
0M7o4CycW5QOe6y2g+EP29jF/vfxTNQzY0oY/Kcah6OOWru70d95gbRn9DXG
JZt5qMu7xdgpdTJJ+mEM+54dynum9dES7rtxD3FzovJgl+rdhfjKTmf/6usO
vaz2fozTd0cQD/P7OcCd1q5XJvZFJoBPrd7Bfac/h/769eWIk5OzBnXL6doR
60Z4EvG7ejLm9UXreW6fn3nP/ayH1JVcqTdyP9snuJR7tZYv76GD0gf9HMZ1
4wTa33MIcTluN/qz0a8l4mSu/Svtaa+AR2dtBPQ3z3QmPu9F0546nfUxvxnq
r72kDnllfZmC/DQupTLPdtFvqllsnuQb/bbiFuWW7UD/td67wD57vzPr2dfs
g1ax3KvrJV558s4NlHjGCS7TcmX+OHBux1SzTj55CH2sxRuAHzO1GexzTuyF
v60hRejTZnIM9e8zhfeUiT4Yq4VNcB83Ul4FtQdchp667w3W0Yk5sM+Jbgo7
TLuU9TR3Lu4T+ssT0R/NU3shzw7uiXyx+3vTvunyTnVolyH90P5a4rmS9ukJ
7Cv6jETYZyV0gX1ObTz0t07/DXljjt2E+4aZWYG8MsOZh/Zu9mtz0Eba2XYA
7DTbrOV9fPZE2pO3HXjQljXEWK1PAL9WOBXyDLe1vKf2G7cX+5cr2Kmt84B8
u0kx69ytt4nDQ2W075DUyWvSz+NItU/lu0JHvvcsv7mk+39hf53P+JkR7sgn
e+jHuCdqWf64PxtjAlkHDwQhvlrGddbP7jGgxrRK5t1sC/jTPJYwDiuHwU6r
4VL4xzyZxPfVtuSD4H99ON4X1tmD8KcWEgw/qbEX2UdXKMZrjtTP88Sp1kTe
8Zsljj/y3ay/Ie/ZJWc5dhvLuplwGH42vkhmfQ84ivOci/NSiOtQ4ujq78eI
69Lj4HftlEw9I9Kw3nleNuU2R90wWgzl+2/7C+wHPjrqrjN/BPq88prMelt1
H3nv7PKCP+xGci/OjacdeyVuAx8+1yfUCsnHFyWOy9lP7I18Jxndr/JevGwL
37WF3ry/7PQjXj0dnGtlBCOu5qIA5Ind/CfYY/UdAfusXv9gH68p5rs2QaHe
WL3Hos/Ybr8Cx85dHfMq1584XDge69Zcb76nI93ZJ86O5n1Xybtevv85k+Se
skDuo47kXxfpgxfI7xzgO9kwLpDPawH50jfQ3okRvIcdH8Y8+DQe5xr/dAOe
HRc/0su/sa580wJUX+jDd2RoJdbtxyX02xZ/yhsUyPe7qwfrx2tBmDf+14l9
vaIt47KlgPF4Ufp5kuBwgdhzUupNO3kfdpR7jJvYOYs4dj7gupUqdh9kf9Tf
5LtLHT5F/my5j585yrEVKvLoD6vYoL/bN6C8yq6kG1tQjy/f5363dPJFBnF8
IpH6xQn9if1LGyL3kePy3Wi66OkteTdZcLlOcCvfF41q6ZNVQpXYX8765NyT
/PWg/6yS29JHiWvNk/civRH5zM2Mv33gV+6PzuL8z9znzOH3A+0i5emv8D6i
0uhHNYs4snff43qB9LFZUh/rBI9P5LyJcv8MEfs8xf7f5X4aK/b7yP1GvsNa
G+V9HCLf58bJ98ylTzlOF5pJahwjNSPracdLpHYsqWogfPNJ1SjhP817lNlI
vqsOle/VSuzxl3eOj9xP9ou/F8v4D/nuKd/PjXVCg2X9DYnbRaFljIczVfAc
JvOXnv9+r30o817kNybId91XaY/RmPo7JZIn3Wqex/9+qQ8DhPpJHFqJ/E1i
n3wnN5rLd3Vv+f+A/F/Byn22/n+03rIm
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
Kvr1F/0vlfyRJe+daomnTJk3ffQYz/8B4IN8lg==
       "], {{0, 28}, {28, 0}}, {0., 
       1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHlYF+UWHumi4pIgYSouY+FSigapmbiMu2VlAS55XQYI0SAUM9PcRq1E
UdygvNaVsdJckMw1ZHHccUHBHUwdQAQURBQVQTI97+sf8jw/zvNt5zvv2b9p
FTjJd7yDoihf1n76zzfg6z5TpgTM8Kv5bBAcENa1c/CzxWb8Pftr+Ki091Ni
JYFqoZVCzboPhOo5FRhnY9769iHmPwNVYrBuvF+F9XLOtwQ/JR9jwxvnlQnY
r5Zh3R5wH/PtOJ7Jc+dB9Rvc35vyDSCfaMinplIeH8rJfWom5u2OmLc8iPMn
UKMr+c0n3jm81wn79YPgb06jHDpxKVhXjlFuL65vwboaTP7Libs9xmY++Xty
vS/v7UM5U6A/vTv5fc5zB4lrMfYbkcSzh/ryoH6yQLXn9viC9/vwXCPiDab8
aeU4v/c27gunPuc/xn21qedOmFfuQj51ZTXWd4Aq5dhv38RYffMfzNfE2AgH
1WpxbFBPmeCvraC+80Btd8pLHDr1r1VwvQtpQ+rvCu19iPj3lGDd/ypo2Fzw
e3i0ROR6J0CoWuvT27LfXC/Ujm0AuZcOxjnHaeAbfhZ8fy2D3ttDD2Yy7XaZ
/pcBfJYTaQfqJY92tLjvMe07gX7gSntV0S5tGEfxxDXyAfnk4tzpc5j/MUFw
WGVDCuTciCu5IqdXnTyZD9p2FX634LKsW+ttOdfNui583svGuarUW7KvZ6Xo
Qd32O/j3Og956uZBvpvAb++upF6Az6ikPiYyvlbS74IQH+YM4s3DOd2BeDTs
M+NgL/3Tk9Cz4yfUc02RT49JELn1jY0EjzZr8llZD/U6InzSyg/Jel+fI9DX
nGOynnhV9hnuA+W8Nd77huxburZY+HiXAq/TTMiz5jhwnbsL3Brz3z36eTVw
asxfOv1QK+X4L8ZlJO3GfGTE3gL/mj9iX6qP2E07lpUv6+18c2T+P9Eir6bu
ERzW8K/2Y3+6Jff//BjjISkytm65ythqlHZQ+ExudErOu24WvNq79WDXnUHw
74thkMf7EmhcEfMb81wJ43MJ8XxIvyUOxZ32bMV8MwN5Q22TjnMRa3DPH6tv
ynyhmQP7L7kk8iSmZwjfzz84Kfs7JKeL/O8YMq+91OqEnG/snib7LpYlCZ+G
Hn/C/07uEjn67z0s412O4g9Kl1cEpx3RAXL67oP8cy5j/C38S3V+Xn/ohxHM
K4wzfRv9NgA41TDmu5ejsD6vGHmj5YEikbvigejZcOwj+KxRfwlVRhZkCe6P
HP6W/bl74bcrM64J7fDhFdn39o4zQgcNEPupmwbtFj6dCwW3/naE+LFdp4b4
iVZeJffrgchn1jbkJeXVLPhXB+C0LrCOZACPNq+S9YVxt/ge1lfSnydtxbkz
bsLfdP65UMZdUiSfGK9WSD7Rh+0VqnWJFKouWCTxae8MFX0oa6cK1a5tFvub
npEy1l0iYCefSsTrwaJEGc/YJna23T6XfKTeKZa4NCrrws8GbIacD4HT6FoM
vC1gH3so4++/rCOxHLdm/RrOOEy6gv29zgg+27GzyGXkHxKc+v0o+OuulXK/
2WAQ4rPdb7B38Dfi1+aWhagXa69inJ1RAr/fLvaxFrQ+LvNzkyU+1dQmmXLf
QnfRkzFvsvDX01aBD+1o+x0GvlLkV415U19Nf42hf6YzLs/Rrq6089YU2K91
BewX54H8FuEF+RPD5T4rnvHRZgD0MyEQfPqMpp/XAD3cUvYrK0Ihb9Z7sHv9
3yVeTbcWkm/VyAbnhK8r8rTpNwj2e22CnDdK2kG+ENRhdXUp6Dfsg9azju+D
Xxrz2RdEwT9txqM69BjGLshjVgtP8D8eC5pQBH0OHAY9jKgN/vUKZF73wjml
1nDo58RI2Dtql9jfHttJ8pSRGyH5Uy30lLjTt9++IPPVIaiTvgnwDzdv3Nf6
A+jP+zrk9Ec+VZqzj+rCeh/Levm8rxvPuh/KfvLoRcz7ZSN/Kl+D/yeQXy16
iPktzeF3MfHQ8y/OgkNPCRb5NP8u4ofKI+88yPtQ4srs1lLykP39eMk3Vttf
kX87Osm85jIB8Td1wS3492DESXUV7m+APKpuLAQdyzjzpH/G0Z4dWf8bsF6M
QH+pFKbB33ILYY9NU0CTziN+vp2HvFY1CnYJ74W6uNQN/UzmKcmzZpIpedM6
kQk89Uslr6j9dbGTNjZd8Bl/V52WsXMT1J0cX8m7ilt32NvDX3CqN96Bnh/G
Ak+n68ynxPeIOIaxz/yTeH9h/WvLPDo9HOOF19CPVS0T+yhKOOxz9mX0HY7J
gkdd1lj8zXplw0WR536iUPOJ73nZFx+C+hFXgj4nPQ31sW8s6Ia66Gv+/z76
hbe+Evzm+u7QVzMPuU9tNlZwWhsvAueoM4ijZexvXqcfDiKuMta/nsgrxgkb
9nzDH/qoXiX89NY/CH971Yfws9TfLkEf00Dzxwm1p84XHOpPGYJPGXoR60sr
JW+oDprIrxSUS97UT29Ef9C7Gn46awTyy/bpohd78uhsOZceiz7WjgLOHu6I
78Y7gaMX69wmvlcf8/30J/uzP7h+EnlJXw6/1PyyxD+0cU6o0/vWS/7W3IOE
Kv0rBI9+pETW7UUl6Cu3BgpVPu4l8mm++SKvEgZ8dvQ1iTfTJx/14ckW4Wfu
bC/UmBMt60pCkuBXSz4SfVmBceIn6rHzqKc93we+dPbhX9J+9SpeyJe2N/u0
4RnYfxp1VVtuoY/ImS736oOnHpX14v1yv3rtjMSVGZ0k+UBJuSP6NcIPID+e
/gx9zlBnwWfancVOZvP20rdZixKRVwrGAJ+ZIfXCiL+fKvwuLN4n96/Pkfxq
xkTKffrdL1CH5yKf2yP5LujB+JvCeudNvLuRV6wleC/YzfYKPju0EfqUvrPg
Rz435F4r97zca+UHor9skor30K6Okk/0gD6ibz1RlfxvP1oo/aVeNlrsZUdk
Yr7VXcGtvTQuG/G9FX7q531A5FoZskfmy6dJfTQOews+q6mz4FN7JsDParEO
DmN/fZb2G8D8GQh8eg28v9SWY5AvH7lIfCvT1sJPsgbvlXN7GmyX9a51pH9U
366Sd4E5cyjkX9NM+ix19Bixt3YmDPiiZwNXaRD71XWiP9P/e9jf9ZToxxjS
CnjbLJB4NDaORhxcwrvKzE9GP1yGPsLqjfiyolgHLfYt15k3t8N/1cvwT7vH
ZOjhhyzxN9MjHn7x+mvwU5/9Iq856R/Rs1o4Ce8ehy14B5Wdxftn60fwq1mt
oJ+YW+g7S9h/Tc9Fn5pSgDrXdhPi3fcz1Pe23eDvTScLfis0Dvnl9ZZyzvbf
xb6a+aMJ+86d/A7zMe2XxfdDAt59yjrm3W4tYMcm6Det+EqJR/VeEN5JM5vi
nfsg/TLkGI16lxQl69qOENjHuR/wTNNRX7wOoF4fiUH8NP4R+fB/frjPrR/6
wDce4Z10+D7OXSmC3XJmo6/oj3pmbaCdfNmv8LuF2bzyhXUlA35sTy3Avkzg
tHyjMe/bHPPfTUQf4bUK31/61UDftnY15Ktuiv2RTrinUWvQ1RGYD45nP3UE
tPgQ7r+8Autv9cH+c/Vw/+wK4FkUhPka6P+V2sTRlfKbjD9/2i2E9WEdcQ9i
X3OS7413+b2vIfk4oo5qsXdwzqeAesI7xVpDPx91E3TICZx3hZ60aOjP+AN8
LBecVzzRh+h3joLfbeQBYzq/Zz3h96jr2G+sY3x9QT8Mg39qX3J+CPMmv58Z
1yn/B3wfFXJfFvKO4cL8U0j9jAE+oz7Xa1EvE/m9j98dDSd8JzKL4fdqCvvf
531TffQVSjz4mHngqzsTfxW/R1QWvxBn+ncv9pdmMr9HHuXYk/J3ol1TOd+D
dpxEnJu5XsZ3kxu+U+reoNrqJ8BxGFRLJh1GWg947VR+D3qT87NArbWkgaB6
HN/dgXzHpMEflFnM9wGs16wDOuu2eor6XEJ7ZrN/CSGO7cR7hfrl91/lO74z
+L3ccuA9G2jvRI6LmJ9d+P1jEb/PHoMejIGQ/3mfb/C7vNGZ7zQHxss9yjHm
xe9gRhDvucr5RNpjEb+79GV+ufR0/C+NnIqM
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
kk/y3mmsfLn/fzS+hKg=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28,
        0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
HPfod0VP70F839afyPt/iN2SFA==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHlYV2UWvlpjmtOiTppLdDMVl0oZxSVNb2q5TOYSkbnURSW0KJVcxnTg
lkNDDuVYauHGdddJYdwyTfGqgCsKouKCeF1RQIEwF1Abe9/XP+R5fpzn++45
5zv7Od/33LDRAz6obBjGp1Xv/RsQNvHVqKiwSW9V+WMRHhbZtk34Hx8b6Hfv
z7l+rbjLPWj3uwloTb8B6DW/Dmh88iugu4HffV/7R0q5P+030hfdAnTqc20U
iU8v4pvBpPeW6Lzh+v5sGfETdH4tQmckv9sdyM9pIPobwvsH9833yN9+V3SV
JE930luPCq9YfKpLvldJ5w4inv+8+EaLPkdyZknOEMpppnPtjKddzKakswuI
792RvpUJrb06P4HQPyv71aO9vADpuYZ8jA2iH6vvc/jdzJN8na8/YCezn+T/
UHTbJV855TGHin4dz/feIXS30H/2tSLS7+baH8BzjfzLxFt7gvvri8l346/S
s4T039Au3pOy/0LRj9d5iyTPYunjkc6ppvUu4lkFskOa7GmL3yTtb5Gfh8t+
Swn9X7W/S3Z5/BLphhwlfD6K3xvdKQJd6vJCnNsnCGuzZSLXn+QAOmZ9QD/t
hwLAsGpXwLf4EcWFx/MX7+Q6Ip3rebSD00ry9ZQ/lsv+lxRX/bX+SnHRWLBC
fpGfzVzF7zzFVeF57m86RT7TF1/FeYmpl0E3wjqPc/8bcZ7yp50A/otzDwG/
Z3g28LJ7E4bVzsR+SeRR0A1sdAH7ZbSP9UI59X6xBOeYnV3K04f+c8PpP6tL
Ode9Ka9xS3pHlDzgR/ek9KknO90WfkfieQlHSBc0ifvJs6CX0yH1HOCIuWfA
r8MK6rPhlEd/ZmyGvmV7NzCOjq4Fn5kHNxJ/FvDMyO1pwKufcJznfHURfO+8
iDjwXq9PeUfnUN5fmA9G3B3Kd7yC6zHyUwT19M6qrnRTPbkg/38gv06X/y6v
pv5xJbCr16uc+o1umg+6+L/mQr7COrsYx9k/A69z/Drsp+4C9PakABrLV67B
OrTSeuA/3ewnrDvd3ga+d4ccgz5b4/Jpn99wrrN5CeVrzrw2Q1TXL1FPQ/nm
palObqT8/gzV6WDlXUvVl5RC6p8xjvp1Wolz3Npp0M+rVBXx6A6vgXi0OmTt
BX3fkp2guxybCry5genAC/3bbsBHyuA3t6Qe9DIed+FXL7EKoH/yEOis+ud9
7J95C+caLaZQnjuZ9IfqmteI/rNeUrz2pZ5uiPSNkb8WqU4X0B5+0kXyq/sh
6Zs9gnxwo96DfnaLJWexHzjpFODs2synxgePgP7rCceJN/EM4z+H+BdXncS5
VVftAf/31/wCun/3gr5O2VbGbc2C0+CzYQbi1E4KpR8uHqN8YQWM2yTVl2Tq
6fmKy2nKs1H0n51C/zmVqZ/5DeuKn9mZ34ueZF05PY/1b0LMJexfCUZ9MNLv
Mg87b2C9CGhGO3xWk/U1OBzQah3E+G7/GeLQjWyFuPZiZ27F/o1A6G1n5YGf
2+o31uOGIyjH8j30T90LlPOY+u1DyrPWis/vlYcjlJdrb3P/MUI/lnHqvjmV
sOIT6pc+h/Vt+Emc64xK4LqsF+NoVT3geRPbks/vb1KusFzunxnMOhk2E/5x
Pt+NeLZ9QnPMu/T/jzbs5y5LBl9/RRDlm7lG/YF+NHPUJ9+gvFYg66t/UfW0
qeaPpvxuVNDPdj/mnzl4MvU70Z32GNKR9LWGkW9YJPm6w4lfYx7xhyYROu8Q
b/1rkNPsOAB1w44oRL8wo8ZDL69Za+ppJ6FeGVey6f9OB5j3/YIpX9dllKPO
WZ63jvODUaz+Z0nfntTHmUP9/LOE1hTmqfkB49vKG0u8lGjp9w3xy0bSDpeo
l3W4OekmWMSvngJ/WYNj4Gf3o4CLtHdl5t+WKRng83ko+0n+xt3080DUFXtu
DvLA2DSf/rv1Z9rroQSe8xznJyeQdcLPVbyNV1zOUH29orlmp/LvrvZPap56
YibXGZ+Sb/xL1Kf1Tcbrd1mMz4aTqceSE5Tram/oY8ctzWMcrIO/rMlJB7Eu
PYY66TT4cQfoig+i/jpPV6AOObODmecfTwN/u+kcnGdvb0Z5xtF/Xq181UXp
N0zx2V1z+UeaW7LV53dQL6cT7WOenkv/Ty6nPotusJ61iuHc9coz+fTbZdjd
rFWX8VUUizyyhvbHvOJYL7FutF+0DzB6PvqG1TtiP+Tq2w3111wZgr5jdsmG
ffxYh/kaeZ7nbh4KOfzVsyjvOM5V5quKvwuaX69Kn7bU1wxV31gm/ZJ3Uy8j
i3HmDsI55qih7Hv9V6P+GfGHMLeYDxdAD+uJxaiHhpvJOr8jAXXRqrML+niZ
iYRWwwPYL62ZA/j4y+wfIR9y3muzh32l6AvoaWXNRr3x9nOOc9a8zfktZQHl
rHuVeg1XPA6U/3aofn5Zrn3Vpd3sp/7HmYXM+9WIM8+5ibxxFm7B3OU1b485
zBjSA3FmvZXCfJrRFvOIEdYH85dRMH4v9dsLOxhVE7OAH5UDf5uzpkA/+0As
oLunGuLBj+7IPnjkC6yt3AHM44ul7DfxLahHZd1T2pU/kGderPrgIfXFTM4H
/uHVjPcacexvC+P3MY/+tQrfLzRbCtgmAPOY8+UexJ//aX9AM7qU+TSyDtbW
/HYHqU8Q9PMDruC72aQf9p20heyH+7siTr3co4zrgjcQv37XxaRvMhv+9r/N
xfzrz5wFOY1o9kN7l+Lw4fv3dN3DXtM8/W26+kEx/GZU74F6Z+56DHq47fKW
gO+1YSsAv//PdshRWh31wx6yiXW/USnk8cO/hh52z6cgr9nfRB+wjnmYs63E
zvC3U36c+ZjXDd+NdvMxp5onQmFPs2k7xIvplsDO3u2h7J8Tj8CPfkPN3SOU
h4/p/tBD98D1/O5USeX3qZfRf8xWb0BOt1JjzIfupkmJ4D/m7/PA11uajPWy
nYhPu1Ih5HPHv4s8dFvmMG5fOQz7+CfyMIf57WM5dzd+Gfnp1k0jXW4J4tpL
7wO+9pggnGduv5bEdTjz9qsQxnFcAOf+m7xXWzV0b6+lfnD/3WUf/WdMY1/2
i3OZxz8/i/gwYnqDv1ftBZxnBb+eAP5reyzAeu7/VgNuNTg/Jxcy786NZN7N
Hoz+5j0TQz/1+hP7nfMQ/T0s/TDWS5JhF2d0BeLC7f8d5lO77V+4/0QF6rL7
zkTkjbl5Aet6AOuif0D9vJfm6fvvE7VYf+yV27nO4FzkVEzHuVZELOTy993C
eU7lsbRnk18QZ/f6Fc73M+pT3rSBqBtW9QDUQc8JVf84jbUR6LNenn8K9dKO
P4W64S6Y6jMPsjG3m/uCkR/GmiisvXW3kXdmatd85tMYyltPenjKv0DFZ5be
b/ZrDjfO0c9teG9wIxYgTn3/c/C170bjHCP3NOeQonzWucgb7Ftx+9GXzZw0
1rfuwZxLH67COPosk3NrRF/Oa8Gjaf/3p/J+sjSc+Gk/sm5nTAA/N34/72Vu
ANZO3k7aP0x94a700z3BSlW9/FZzW+T9+4Pm0UsniTdoOf3cge8txoKP2F9D
a7NurY+jXMWcp90k4tveQc1He8nH4fuKa27lOZOY50ZNvucYnXhvNf65jd+7
0i9GVflnWgj3R4Vp7iSdGaj3roN6LzokPfV+5HdTv68tPYOUj3HCe0Hvbxl6
t0ohdDdwDjebqN9c473D1n3a1n3E/knxYWqe0Pud97Xmpta6Tx8XzM8j/7d1
/xynOWob5zHjBN+5TNV/U3HordD9oIX6QqnqzPuCO2SHPaqnY3WfukH/O030
fmdL/vXUz29wl3Iv/J3nZBM6XxK623S/9th/vd/1TtRBebJe9+5Tqgsleh9q
wbW748oDfcxtoneTR2XnHMnZXvuJ0udt+emw7oOFWj+pfn9ZesbIz4fvzzfU
x+grfc5Jn5uExnXtH9P+VuL7UwndfoROTeENEiwV3jDNV8fkl620i39c955n
WSeNRqoXvfTOrnugP0BxOF1xWUdxo3dF51G9T5fJb6NVhzJl7xy9s22W/frr
fV528W/r/a4G/ez+QGgtu/tAvtsD9D4rOY2f9U6ie4wRLX02CW+u/NRS+9cF
Ryp/Zkv+gHvr/wMPY6Hm
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1WAl4CGcanrJFWm22qFLXkK64Gn1cLYohFpV6nO06KiYlVMuGlE1daza0
hDRFtatEjZIEQcQRcY9GgrivuNoYRySOiHOVOrZ931eeJ/nyf/Mf3/vd/1/7
46heQ0sZhvF5uT/+9IqIaR8dHTGud5k/B5ERI1o0i/zzY3X9/vHj97hd0u7P
f7bfA3U3iA6/SX7+DY4P/A/UP8P5bh1+917ifKf2fdJh/O535djccYv8IK53
L2vf1Dug1gV+t1N0bjtSM+Yu6VlSvxn5flN9b8R1ZhCpdY58a77O66l1L1Ae
cympfYbnOqX43bnFsRnP9d4JydeL+/ixkiORfPem9inUeCBxGRnkO59yvnuW
+9q/SR+nOPbHSK5c6sf/Tvos4D5mFucZFfndGML5RlWOve4aj5LeS0sPy0nd
/2r/XeLHyG4pknuCcDUv4fzgQu4TRzxms984r4R2N3Ze5Pcw7mt9w+9Gowc6
9yHlqvyY3+8+4vcPyTdXa7/LpJ7P870FkiuOeL0A6a0M+fZNjVsQp9FN+hsh
e0dKD5b0P1X4Jl7mulZHuW/Vz7kuoXEx6Mnc65if7nNc/dUbwFd3Cun0WFCr
5gJQ//xo7rvnCM9ZVszxFJ5jp1+iftrLv6dL7nfkV7nyn8WKs9Hy3y/k/1sU
Ry+If0R+cFr4DtNOdlg+xxeyOG5wCPK7F+4VYv218Ev4nhQJai1OPQeaWHQW
OMoHY+zXfecC9jf7YJ7jHsV6J+0+9OKvqgvc5oenQY2orpQz6GfqsYn8pD7l
tQfIXl8rrrbKnonXuK617JOqecGKr8ryp7cLuF9qEvcfdoLnL04sAM0MOY91
cZE+6GvOMayL/W4XaNaALJw3JNdjHC36GXLULNiL/aJexnynTe5J7Pf464ug
Bf2vYH3DFOA2t5XQ3j12U67zV5XXfif9if5uFSlfnZc/9qVdrRuKvxqyd770
9Ij+YeV05j7bM65B3lInL2N+XAvI47TdB/ns1geBy7ntbsb3S0s3gL7XFtQJ
D9lAP4ldB361HzJAO/QDfqtVk1zqJ/QM9JzzBHq0a90mzhb9KdeudMrVj3Hu
FBGn7RCX21D+maF8NJvzvFfkp52LiH98DvkX46E/b3biVexzaT79MWFaPvYL
HQk7GLu25GD9gZ6wk1vpzE6cP6TZDtDVY4Dby4xIAx14JAXn3JmyCnRlSTrm
Ja+B3f1yaacxnhSHc73wuZDDtcYRR5tfSN+S3J2UV6sor0So7vRTfJZR3nxK
e/stXH5f1oB5Ye5unOMurwC9OlHFv2JdhcnUd5N1J8Dveec45NnQHLjNSZmQ
00xqcgr8nT0OYP/+HvEeHL0GehtoAZ/9Tv9MnNfxzTzMC0lAnFo9DyPujWux
lG9lNu3k0s+8ecq3t1SP6gh3PeX9PvRLZwLnud8nc/7W09jXzr4J/7RrBhbh
nLi/8dzCp7TnzGD4q3vwFvFPHI/vdscKiCdvqnuFOOrjuxWadhj863nbwG9f
fi3kqFoNdvfXz0B+sttF4zz/x3KM/6cfUe7J64irL/OEf1119zHxGJmq24/J
919k3fHVx1iJzJt27BbuGxgCnI75BPHgdCA1P71CvXbZA+pVvsf8OjmJdjez
QO2ou+Sn/UK8FT6i/42sAjv6t+ttxPfMasDtrwuAHow+paBXY2go/fNQF8rd
aCvl3Kx+IZz53rzKfGkFKs8Eq+7FK3/eph9bsTuoj+bMX87ZPdx/Yyeuy/sX
9037mvMrRdL+mz8hv8/HnHf2N+JMzGEdGJuA/GSWHXMU/OBBxPftqa3gb66B
fOX2qkg/KTWb+nx9J/X00kjK2fQcz9tCXFa04m6B8BxS3twpew5nnvHfVX0Z
xvxirq/KcZU46u1+IscTEjgumch5ZU/x/E0pxPPgAe1annnXuRrFujf274hX
68lg5Es7aTzyjxn1AuqGM+YC81bgZMS7NWAU9jHLFbFOrPqWuBKvE0dv+qfx
jfL+HOWTuqp/I+SnleWXHVUnRjJu/W6zyZ88g+PJX5DGdCDObSuI42Y288/h
XYg74+FG4ukwHnHk3TxGe4VmwP/soFDkSSf1NvKtuXz1PvBHnkEc+5sDuN+C
77n/I+rNHT2Y588lLrc3+x2jhvxxqfrxKPU9ccqj6m+N99QnLT5DPY1ayO/b
LeJ8NJh6TL4Cv7GPGoW0e9YvwBFYEf7lX7rMet9gNfKlG75iD75POwQ7eb18
1o/n56OuOOODj9M+e4HPmpaIfd16AYzz6YuIc24h61Xb7arXPu0zS/3YD+pj
XmacuSWyY7L6nD3sbzw3lfy8Nzhv92fMH11ehF7NkAz0W96Smsz7eTeO0E4p
lLdXedjHrb0FOLzO3Xdj3QcO+MaQJtnAkRJ9COOcUawz6TPRF3l+OHAaU7ex
Dzw6iPa8M4/x2Po52mEh84zzlHK7X8kf05VnFqvur2FdMGuwrrjlehDfmr9Q
b1WWMy9MTkLds+/X3g96Ohdy2mXOApfddCzG7v65GBvFnfYwjhZhbF1firHj
PoEdjfrZ8Ft3ZVvoycgMoR/0C8U57vxw9H9+/e7sl94dgLzjDLDorw9Y740Z
6lOSn903dR8aJb9NVnyayrt1+6mu38Z+ZlIy/M5KVh/5XhfkO//Lhuw3ravw
Q69b4EGMjVzYxZkVxr5r1Uz6Z/c5+O6v7Y148xduI87sjqwLaz5gfM7aj3nm
ke+5X1RP6MEJqIX8YxVdgFzWjH3012Lex9xduj/9/qwuqC9NvUI7N2Z/534y
DHnPLeoDPfrdW8LPjLW11mPdsb9uwr4Ly0JOs0Ib9C9efGdQf0xX+Ktxbjf9
cP1Y5o9DZYlz5jXoyWjZGfoxs/bS/nv3M++UXYH+1K5ZGue5znDqMzgfOO2S
i8hf3vFoxs2Xqm95tKOZo7o4RfZLYt9pNlrAeY/ms/7k16JdPmvCfnhV5HLw
p721EuvLtQdO2/s37Zi5HtT9MpT0ceEO6nMu+mijciDjMzMym/ifZ13YGgQ7
u8tiEKfuW9vYp728chnHAcBpP06mHefUAT774CX2DWN43za7CFec+rT/6T3i
K373G7O/s+eMv8K4v8l7zj/DgcdZ2fsnnPtqmSXkt1qKdW5D9I9edW871pVK
YZ/1bTPK7Z6AnsxqTVkn0kagv3SGxiDe/OgcUHN3F/ax6TvYp5Z+jue3DUK8
+8cHMU7DTOQDP2E9/TNUeb+03jVm6V5+UnSS7JfHeDU7hTH/F8fDr9zip7CT
NWEf+kQvrSL6Yu/uCNx77NGvMS+Oqwg5vAdT6KcxOah/5vsJ+fSDw8z/y/pC
Ps/+nHnr3qfQp/vVx6ybmxKQR/2sCN6XCzpjvfPQAd9ddADr7Ht8B7D0fuHM
Yvx5G1XHr6n+VVLdX7KJ37f4rHO32vIetr8B9OvkruK94Hgh6pUVUIP39Dqz
ca4Z34J1q/X7kNc8cZ1+8GA6+8iZSdRbRDz79nF32Neu+J3vGhN6sl8JysR8
K3vZFdqxL/v5rhmst4v3M+420S7eUPml3q/MeroHllffUkX17+R50qU/kh/J
OuOmt1P/F0/5RrzNfjIslPLdm0A/mfQ6z3llEPcZ/yHPvzSJ/Ih51GOTHzju
toTfG6Zw/gHaw9n5kPl7YAFpzGa+WywJoTwT8rguV/fcnsLzRDjrqY8J1Dtd
S9rT+0z5JpHvAH6q7vFvsk8wup2kfrpe4PxXqA8zRPfHZ++ZNZSXX+Q8ZzT3
McvrXXKY5q8Sf5L6pYAM7juR7xHG8GP83kbjSerLgpU3OqqODxaOxupfJspu
8lMrmvHpFstvWysuy15Wv8P+wKmi99yxyk/NH2jeE8574ynXb9e730b190XE
aX6i++Z29U0n9V6ZV6A89yv5AXo/u8N7uvG28uNG3efCdF8I0n2gq+Q9Jj8M
V33Xe6w5XXoP0b33uN5nKuldLkzvqHf4TmnGC08S8VgFpMZpjYcKZxTnu3NI
nanEbezgesfgPL86x2aR+qtn8sXJj1pLDz/rXb2V7LRPfcvrkrul+CXyn3ni
n5V9G+keXFZ1Uu+8ht5pnYNal6B+/L5ovu5beu/2e+i9thrxeOmU3/+P/OVV
6S1W97N/KC4uq1/Ue7Vlyi5RwttO/Pl6z1yqd5dszvPW/sH/P3NulCE=
       "], {{0, 
       28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWXlYENUWn/RZqeTDBQWVGhYlE30lguIrHRUVFcMlP32FOriQfWE+FcUF
cHB7iYhJLrmP5BaLBJbkBiOaUm6ghAqFgyIugJiCCaU9O7+ff8T3wfnOufee
e/Zz7uA2eebosEaKosx5+dmf0aGR/WfPDl0w5sW/kGmh4X49p/212JG/z37U
zrU1/Z5Bc/9vAi0PQOMk6Fb8rwKVRNCV2DrszwHdjid+6THO3XsIPBi49Spw
6yXgpjf2KwU8N+W+QHXBI9DjAc167gsEbs3H/XoJcNUD8unzwN/+AeuqM+j2
IkAtlOu9gSuDuN4N/PWPwU9rWo97nj4AVLFuJxOuJZ883GMmEPcl7k871nH/
SdrhCujqGeBKP9xnTIc99NHYr6WCrl+jnI0hj1YG/poHcON/9MMq2uMFyk+/
aLvIp5j0etrrJuWLoF0aUx7HGuABtGdqA+S/DTvYv18DvRD7zDagq7WA2gzc
ayVQ3hd/B/4R/f065RpKOSZXY70d1tVz9Ec27fKEcBP9GUb9z4OPup72fMp7
4xm3/wVurL6H9a64R008Cz2d0u6JPE57BGqZzuBb6AY5W4wEPrUj4L5q7Ov7
L/APWAY+Raexv3su9mUfg/wnqrDvP7jfbkJYTn9cpF+f6+VDu5ynHVdTb/pV
eZX5MIV+8qkE/xegl1L9Efj6vF4t5zpcqBS+hRlVcu+cr+7IPr8bFbKvr5NA
a5rLTYFetddpN4FGQM4t0cv19F34I1v4GEuuCH990gjo7fYL5N+CeFA16GWE
0R+ekNsOoB+60T9rGK9bmO+NuG8x6ogaWAo7XD8AeniN3K+VXhB5tHWmQNOz
QuRXm3/ys+i3I+AnoW/IOSf0kiGnRJ5WnrlC/+atk4IfdxWojBt+SfZNjyoT
mOt/W9avpoqeVtJCyDP3CvTaVc88oR4/MC+qmee3mFeLWKd8CHNY9+qx38zL
wf7R9RJXer6nQOXwdLlX9fta/GVGJ9oC4yvyZf+kAJFbTW5/RM7F+H4j9I0Z
aUJ3G5YusEfTTFnftFHWjcvaj3J/6zViJy0lX/hbQ7PvIX9XQZ6EcujXAXlr
l8A/VhDrQRRhDPvAEdbnPOpXVQE7RcRh39IM5FlYa+h3oSviaNMIiS/LtWmJ
wLGPz4ocQS1FP/PdgqNy/4gFh0TejbnQ5xuvDOHTos0BoY+LFVx3vyH2UGaO
uij0yKPC3956ROxprtWgz8KLkKuafqllf0ulXj2J57IfrGJ9cXkKfbPvgN48
Fud/vg/9/HfLPXZTQ+JSzXGU/FKVCLG38cYAiTPzZsw55M0k8af+4eoi4eu7
SKCeFAE/z38gcas1nDvGuBM7WDeXi35mYFm50Cd9KPY013WC3LVpkGviTeib
h7pqf09961hXHOAvbRTztfYP6BcL/6spU7Aej7pnDJsMO9Zdk7pidv5D7Kuu
mCn1QvlylOSP8UEy4rXb0xty77hOEme2T1exi+G1WfZr73QQe+hucccF/zzL
ErhAgx08BqM+3UoT/VTP/YjT3dGQa28x4BPEpx3NvJtPPe8iPo0/GMfnoJ/m
xnWnvaDnK6Dv3Cb87ZD2uCcuAPo2rELdyXZE3K54ALyyGeLZLwJ9oQny1u6R
AL/r6yWejbFhopee3vG04LEfiJ20CAfYJaxY+FldFiKOSuMh9xesl1nQT7/M
/p1Z+7f+bEbCj8a70FPfjn6gV0I/5fcV0Lf9Z9h34VOc7xUOuvNQ2OGnHsAH
d8a5tBrY4VY56uDFHai7Hl/9gvMhqJ8n7meB70HEc0Uv0V9zXy5xYnUvgl2m
uOOeNVcBM9Efjb7say+wn3sz3+awnhwFVIM4T5iIT7vUBD0zC+e7ZIP+Kejm
CcSJ2qIlzq1tgH+/7YJ4bjUOfsz1ljjWhySLX+zNLVA/Du7NEThsu8SnevcQ
6qani9hB7/gK4qPTJvDzXw453oG/jOW3IH9bzoXO9F8L9vtTnAPGU/8l1L8N
zpsrvwVcmA5+vWOw7+FA4G1C0TeWzUJcunrDP1vPop83+65U9s+sRH2Z3q5Q
9lftFr9pk+eIXpbfWukLdlqQ1BM7/IT4Tf+sD+w1vBRxMEmH/M1vQ85PAG36
yaj7+5xmBnL+X8T5JRT+1pbCLlrSUez782PYIeh9ucdy8cf80q8x5o63Jotf
rNmZ0if0gctEHzsqV+LNrG4neWbuCZb8MoMOSh+wrFmip11eJPOA7v4d6snE
GPgv6zDiMm4s8njzGdgzCXFk3sD8oa9Ev9ZDWDfWUK8E6jmIfWI68s4YkwG6
R1/Qt2Ee090CMX85b0X9C+xeLHTjUIFAx2DU+9xGEnd2pBPqfqk35paYHMkz
9fqQbNn3cZ8z4JNwTehpb4rf7csZ6Ksh92G/SU1QP/tfRZ/wrYCdm2FOVesZ
r53ov6bQT3NgnXmReTfjBGBNMM75ZiF/0gfKvebgFPGLOavqhKwHdxU59blF
ooe9f4vIrzSO+k7O7Xkg6+bZH8Vf9mpP0VtxOSz6qt2KxL/WgASxk9q6icSB
2S0R82mRl8SrtuVl8avZbwvqaX1P1ONK1FErmP0hjX39Nc5tO1k/l/K9UZCK
9fGnqhGnrsLXeHBH/KM8OvCt6JOmfo34qjgocvXaLvVdmTNO8sk+Mw91MeVt
wQ1ro6ybj9ORdzsGwT7n8xCfrYvOy/4Af7lHm91b+qLlFCL5auzVRH8rcyPm
063XMZ869Ye8LZBX9gy+py5RH0/OMwr6iHloMdZtd8x9A0ZdlnXfHTJXmLNT
94gcdpf9kNNZ5FSOeoh8xjpvqYt2YJnML8b6I6gfDV2+F/xOgfhNL24pfrRm
NDqOvOsBPhtCBZrOww6LHDG9Zb5TRjicgl7KVdmfuAj1uPB5X0UfN2dRnxD6
rx3zr+EuYK/uWE8OlnhUYqOFr3KyXOZDY/edJJH/+0DR0+r2ROLRajk/D/Yd
KXrazfb9IOcW6ZA3K0X0MvLaCl2d4IC8C/dGXGQWij30Dq7CR2ubKHFtBB2T
e+0tsI/a+rTUY7vPNNSB+emor/vhH2MZ36tL+Q50ZX8oxLxpvZMPe5z+N/It
+XXkl4tjqvCr7Sf6WWfTvxT6/a8lTo0J+RJn1pXu6M/3nkDu8VmSr9byOLG7
tisD8kWXY36z4mR+M5KqMN8dWC37jLpY1KvtXhfk/OIaiU9zQQz6fjtXvDcr
R0OfS3gXGk58t0awzy3m+/cg+ojh6gW6Q6LYR30amIf8/BnvgPFvir90n2LJ
Q/N8JPwWHS5xrA39UORWHV2kLliRx8VO2tlWqPvdxwlf46XHUhetVkMBV6Gf
24cLUU/euyJ6m7oP+uGNXzHnPpiH92bbeainc1Mg72Z+typH3VQUfp/IpP/W
8LvVgIOAfUahnw7vLPzV8PboA1oJ+lqnFODFy2H3ugl4xyzEPKVPbIv34XZH
9JXXBmA+m+vMd9wYwKXDEV/zajGnRPXC/vc8RX5lZ7HwM/Kboo73HQm/NRzD
HOrOd/lW9rdgvucPcy6rpp67Oa+twvcII4Tzik8jnIuslnuV3/xht6nJuN+r
AvQNlyFvOt4besN6nN+HedW6tRH873yButZ+G+irgWtlwM0xCznX4juOGtUc
dKdmwNuh/il5N0Dn90olmvHox++bSdDLruL3ugLGaQ2/VzxEviptOGcPxTxj
upXhnBvn0514B+sV7KMJfIfdZh5UYN184zqgH/LEqgBfM5rf2faA77NAxvl1
57DvEd6xyiPgyiuoE0oTfofI5bwyiHHoT//5kc44Nd/id9s3WH+mMp694E+1
gP524Hc8X8wD5kq+FwP/hH57AZVkvJP1k+xH1/he/oTfdTKZJ48px3Torzn9
wrqO/Wog8X/SHnNhH2UnvxONJVyH+cxYwjmzhPp70c5lxPMpTwHPLWA/CYc+
avET8HGHHkYJ9XlE/WpJvwCoLoGe2m3Ca4DGeJ7rCWhHgW6+zbhinbdKqVc6
88sb+aa8zzicyPj0ov8Mvh/oP3s455kdfL9PwH4tl/NODv37/H0xlXPBPuZt
a35vzeccNIhz3mu0gwFo/QN6mLcpRxzzhXbXttKOjxg3PvRDGN89D2n/wuf1
gvPzTb6DPmd+/fX/hP8D7xeFyA==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 
       0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
HtHybtb3yff/A0SbbYE=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtcj/cef2otMxthy3V5hAyHmUKbtR6juXWEXF4dM0/iOIWZ2kJzeXLb
Gsoo7BjnSbZZ42h0cQlPy62RopIQD5JLVMIKw+HzfvfH6fX69Xl9vpfP/fZ8
20+aOeqfjoqiRLzy/N+o4Nn9w8OD5wY6v0CmBE/v4zXlxWZb/l78ta2t8n0O
rGpAfWgd8AP3BBpD/hRoX3woUK28j3O3H2A9F/tWPO7pPbGv7gWuDASuJeO+
GYnzxlfYV6N5PhX8DRdAcwCgnY9zJqG1gfhlyjWX9L/DeS2J96qwb3aCnOaP
lLeO8Cj2tUTSNSGf9Rv0Nn1ojwie60p+mVhXR1FeBfeNN7g+BHTs+v2/aJ9Q
8DV2ANfH45yyingp7VFDuefRXtmk/wrt/ymg9gbPj6X/FlL/WsoRTL0W8Rzt
oY6gn5bSDheqsf4J+SY+AR7wF8554JyWQ74fYV2pIHQFtO4B2rW4r5/k+qDH
oFv6CHTP0r5l1N+N9r1NuYupx2bIafekH2bS/jX0pyf1eAw6xj2cUx6Dvraw
BvwvlWK/6VysD/sO92bkgc7my4BT74J+ahXk+LIS56bDPlpz7BtxtJMv4s5w
pjwp0NN6CD3tenmjIZ++mPZ/FfumM/HNuG9tJF2bdnanPkmM7y6VzKvboJc0
judu3RE5jh8TqET/VCnntnwg0F7hJtAIWSZQvxYLvGq1QKX9h8C3VGI/rhvk
Th8DfptiIF+fU9D3POxg1UIuZQHz8TzjvA3jvjX8oETRn8+gtzGYdttD++SA
njnjIvRa8BPwq+m3hb/ap0LW/5Yj0L7Z95bwSUq5JvTnXyqD3H9ckfM9Ai4L
/bVnbcFjjgnUn1oCzTu/yj01cabQMbvPFj7a28tFfzN/K+TOvAB9RjNPLkEf
dQPz+CXmZUQd/cA4bMw64kC9nyIOjcOJWB+WJHysgBniL+2vQ+B/IeumnLu+
/arI0f5Iiaynf3Fa5PF0+ENwdXS2wCfr9gpsumm37H/ut1/ku11wROhEWkWC
l2aWyr7zhBtih5SZwl8bMpF2Pg67H2adqKW8qYzPnazH61mn/ajnOvhNaXgO
94sKEU8+3ojD4ffEX1qrGtFLcQmHv1LDzov+O7fmi10d3jwk67kV6YInBv0m
0HlMkvCZ2CNR9n8fkyxybEpME+i+xBJ4YlKe8CnyFf/bLw0UvobnIsT/Zeb7
93fgj3XMszj4Ud9NvbMZtyOhp7UcdczonI79KZ2RJy3eFn9ZsUliTy3kh3Kh
99JC4W/k7igWusfeFf2UsnjRz1gSIvIayaMht3eP3wUGuGQJvUGm4Hb2fOz3
zpV1rXSs6Ke7552T/bFl14VOyU3ET34v+GEe/GitYDy2Y32cyn60jHG7mnWt
APmoBW4CXn5W9DK/T0UcdnITPso2Z4F2xhLJM7NV/CX493WJK3XmGYlT80qx
yGf8t07O2ev23YCdDfG7pcYgDwc6SlxqGX7H5X7PwAKh5zr5gqx/8Az23HRQ
9NP3TYacoTnQsxvruiPj8j32iRjGZyz7TQjr6KoT0Lv8Kfy2O0L006tbS5yo
YdWAme1k3x7wKvKxexTi6LVdwAuWIp5eR33U45tBnm81+OHhTtHb+qqV2MGM
eVYo5zpcg10WKVKXtKEOwl/1CUQd2A77GwHoO3oZ9NNWsr7Mpp4XOXfNZt2d
z7oUuBTrDbegD8zaCLs5b0AfuAt5jYnTYZ9mIcALw4Ev2gV7eh4EXVfIo1x3
B6xbKPrrkYMkvrWnZaKX7bVU6pK+/6T436prJ3XLtrqL3ayyOtTTEeWQPxl9
1K7Ps5Wce4axTi6BPmoZ6qxdRXuEo05pRXdEL9vnR/jhhga6Qcuwn7Ie97vO
Zl9eif3ahaDXewD2a7ojjzuMRjyM7yXxbR0cJXXJ3D1R9DKuxoueRtt/wW/j
/XHO0Qv+bvwl+O6BP+zkm5D3c+rly7i8yf4YxDlmJOcc52uA2izQOTcCcg0v
h34bAPWmbUCnUTjqtv9A4W9eRR3SXm4v9lbKe0pcmR4lEofGT45liGsFeRW8
/ozsz9svdcnqcF/0tQuXyznl6zao17GfQQ41CHJvQ70wq+EP7ev6OYvzZSHn
m0LW0Qn0b2Q+zt9ywHm/TPSHh6GIi2/C4M8dW5B3c66gPz1dInGmfJ4r9ULr
2wB9u9990cP0fVnqq/k4TvxjZW6WOmLdnyx10u4aJP6z3UaK36ywo+j3702H
vZLawo6+edCzzUn2NfqjLeeTEH6/9OS8NpH1dAjz0aUE+q/2QJ4dxBxmzSkT
O5pjD0i86BHviPx2vwPFyDdnkU9d7CX93M5fif7gdF7qvbFl0WHZD9gj/d3o
G7FH8NIo9P3WfaWeaD3bod/NeU34qO6ht+D3K5yXCmDfXMxxduxZyNuE8+pA
6jeL+iUx/14hHpwKvGQA/JXthXroFCt5bplXxP5aRjLmjQXHRV4l8uMDcq/5
JJlL1JSPU+V+u7dED72b0y65d7QTYLki/VwL23VU7ie4wr+9vDC/TXMSfvqC
UIlTrS5Z+oMWeBd6drCQJ/NRv0xP+M8cxjllF+dMG1CJZvyOXwx7nLyLvpc5
GXHXtonkh9q7tcxT1okY0cfM8JT+rExwRN9+LR59O+Ut0dtUnTOEj08r0Udt
c2Mf5N5+UPabeIifrbQM5F+DzoWwUxSgdVDyUyl476LI3bsCc225M+be6mjW
L9bRLawjh5iH7/I7agb7Y5/OgIf9xH5qZZ7kh5rza6ac699I5i11eIsjyM8i
iUvriSL9WO+47ZTsX28o+3roFyK/PbX7SYGf3ZO8M35pcUzuHwmTddUnRe4Z
hftPyLmbf0d8Z82R+DWzKnKE/+pyiWNr4FzEb+V+xNlazl8tWS/P0F+enKv7
sy9sboT+2bKzzCH2NjfMTWuTxA+q/0iBlm8Y5Lf8xO7G8FOAvuMEmnmtUUe2
hqAeVo0uRbxiXjF83BGHeZVST/Q+KbJvdTkl98yUZvDrur1iT2XpWslfu1GW
6Keua4i+4Z2FuqNwTmnOuPyA/uvEvjEC/lMT3pf8VdP8pO4Z/i6ij/Lm99Av
4JL4US9wFfurCz/DnBgVKvljBeRD/m+9JV8UJ2+pD8rrXZDH6ePQp1Nu4HvK
vRXqx0ezMPftLZY4tB4/En/qszqKv03/weiL77vhO2v7I9xf8SnybQbnkjTC
U+zvfNdRaxG/pgfmFNvBQ+QzHDLFT/a9d1BP3mwu8aOvnyJ5oSX8W/iZD9ZL
PTfSctHv2jyS/DUabcLc881l5POP40DfeShgv2LUi2aOmPfmnEcdi9onetor
XkZ/8a9CvS6eJHzM7HDRzy44Av98zL7emvNzBOPzEb9/Fb4/VWzAes1E+HFz
N/Bbk4bvsZ8DRR9l/WDUteMx0McpHvLNd8EcsL0KfbMG3+tWZRD6Vru5iKco
4Nqax5hLpj1EnxvcF33IZTjqZdE04a81OIfvh+wafL9Y/wG9rXw3iWOeTa7/
rmXd/Ib9byj96VqB9W2+OH+mCN99R38B3ytu0ONDzNdK/49gh/yN0CttGuIl
eBXuR8chPnbOB74mEPsJQ7Ge6oX1sqacnyJhj0nliOMuewE93BAP/gri7MIl
yJ2AeFROs/8V8fuW73mG04P/n89Yd6wkfDeqczOB12Eu0n/xAL4iGPijb4F7
4z1J+xN1yh55A3w7HAKfr7bjfG4W9rcexv5O3DerYnHuE9jBjvAGvrwv6FeP
xfm1heATxPc5J/olnvLnE0/jO9vP7PcW+/xdvsPOo10y8P5iL4M8ajro26+e
BtzFdycL73paw2eMf34nj2O+r7xIv2LeMMdh/rcnwQ+GtQ/0B+E9xK7cgfUc
vLvYjTFXqedgd6v+XW8Z50tv+qmaer1NPTryu74+Pvleahi8z3dWrSXi3OqG
/NWTIL+VRX2qnjFvAY0SQDvhKfspoN0JUNvJ9RJAcw3o2X8iP1QH6r0D0Eqg
nIv4PfcP9rlf+e4SR3kbMy4d+f1Q/47YnX504X2d58bzfW019W/EOhTNvsJ3
fbUB8dukux/+VM8/YZ2mvq347uhKfr0ot8W6EMn8mML+9QO/S5sQ30h5K8n3
Ivl5MT6vP8f/B8+Wiyg=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
1RdL/18j96QvN9Cfuyey34f9wHtKm3bQ0wgqArWzz9D+KZ9yLvkm+zrjZBLn
n5BS4FGrfmFdHtaN8nYF0r7mdp5/5yTzI2yN2HsH8Rz+nPqci6U+dZyTnfGs
F1pTmTeflvciR/p8K3mny5Z3Jw+h6bxP2NN539c8Kc/axncRs3Yb9Sq8x3tK
a7mnZKzmulGh3N9iNfvT4hje/y8N5fePMij3a5mr5J3Rui/nRF8kDZR3hFje
Z1VqPs+vlLlrg7zPybul/YrIGSf+ai7vT0HyrtmJ5zlr6EfTPZf8NLHDOZlP
/VZS7oLD5CPZX9XzfB+xY8T/1ZL39/hOpH6XOXiy5MlseR/rz/6kHsn7Y5K8
/+l81zIHy3uji+A4K/PkTom35lJHZB6zLshcJv3dOSzvLklyT5wn74WZV0l7
ivzt8o4cybqrrZX35eo6kfeI504irzcQuwxnPDhf8Lv2nKyP4DuReoly7AiZ
I9P5vqo35buiWirzSIbU9wyx85/MP/MFee97V9Z1EH+1Fn61zJ+25OVmeb8o
lvmmGc81kyXOx4mfr8k7gKfcm68LfSD+OMp11h3Rf4rgzaMftQmk/9y3tT1i
v/Xi325i9wR5V48Qv6yXObNO6n0r8Wfw3+v+D4RYi6s=
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
+x/wuYqe
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1WAtcT2cfP9oFDXPdxHDWwuy1bGmajTmWDK2Q29taHDN7LSVlWK7HzK22
VROyC0dqW2Eo126OyKVkosVIjpJK0TvKvBKvfb+/9fn8+32e5/ye5/l9f/fn
efGjUL9PHBRFmdPi8T+/qfOHhodPjRj39N+D6VODB7hP//vjC/J7/Kd7ldcN
eUytwCpQZd8VUGP1ZVD96d9A7Teu8/ti8iufyrzHRfIn3OB4Gddpt66RnrvK
+eEcKz7nSM0Krgss5fdrPNfsynktzuZ86QXyH6sm//Bayhst+87mvlZQDb+7
/c71/Smntpz7aze4nxYm65aSKkYZaTnlV/eXkG+y6CWmkt/XyrpLZbLvH5S3
O899/IHnt6QejbdETyHEZd/jWB9LPVruou9TgrOzrHuO+NVU8hmjbvL7AuE/
cZ7np8v4iOi1C/VuraG8WjXHSpict7aI8q4jPt2hkOesP8H5nRmkSf/l+q/r
yNe1mOd35HlauZwXLHqLFDsmiNw9Sc1d1Lv6J9fp5bSf6pvL74UyP0L8J4/y
mi+Qz87g/sZo8bsC6sn6lmN7F+2h9uI6tQvlMux88l2Opbw9T9/C+lnDbuL7
OzG1mPdphrF1JB5jfUkQxrb5KvnccjFvO0/Heq1Na+6bGUF5jkdRXv80nlsk
/j9PcL1Ev9C2UB9WjfjTXRmf4NjcKnjGC94fJG4CJA660f+N8MMc1+0lXtce
kMsasvsGvl9prMR4rDtpSVEZ5o+sLwV/1aASrHd5F9Twn/sHzs0+Dqq38rgG
+u7WKvAH9qoBzn0x0Icysgzn6WvoR1rWbVIn+omZI/EzRfKHKnxFVyUeSDWF
cWPcFP8ezbG2fwv1cvQl0oMPq7Hf3eLr+N52SDnkjdhcDDkG9ToD2r76GPhS
go+Cz+G5w1gfW2VB7t41uZDPO+04vr96AevM6ADqY0NDBfZp6wV7K9e8aY/B
4lep94jP6xblLSUu+5bYu17iQSUOy1XiuJ/kJYc80kmenL/6OfSph14BPrPV
HJxv/ProAuZHLcjDfi0mZ+L7vWn7MB+VnwZ5sk7tB3921B58P51zAPzN69Ih
z3epWZzvD72YU9b9jvXNDOjRPvEa/fluKP3UIC7L6X+U70nmG6tO8twXzBdm
C+Y3M4r+qO2mnTWfXyRvMj7MCX0YV24DgM/4Ms7GOe8p5/A95jDsY8ROzADf
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
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
v+fJj5g=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHlUV2UavuASoUcxFTJTL2KLuFWmp3Eyr5kWonMUXHIMvaS4DpoKgkzi
xQVRGyI3htS6La4Iipgb2xUZt9x+JYILdEUUFEEkRBTByfd5+EPO+fGeb3u/
93n373p+PtdvmrOiKAtc/vrnFxg2eP78wEX+zZ8NggL/1f/doGeLr/L37C+2
9t6gv4huPxJqNDwGbfFQqPWUtE8d5l2xz/5nDcbbMFZcsK7vx36zK/joBzj+
FWPTCVQ1Qe2z4GNe5r3jud6e679BPiUcY6WafIdj3uqE+63w53GovqS9MK9+
Rjkb5b9Bvj3JtwPkV/pg3ewFuZVhjXJibKzm+ZFc5/3qfMqxl+t7KV8D922m
Hk3MG/7EW0m+KvUXw/uiQbX95B/C9ZXUjyuoFc97HZR7Bu3Isb6ZfL7negr1
5Er7ud/D+UjIoV2mHubSbrF3MY6k3Mm8bwvOW7Me4Nw8UOsHnLP9MVZuEF8b
8LWOPqD+acdQ6msM+W589Jy8egLts5N6COT8avpTEelsnm91H/smlGP+6Cmc
r/ilQuS45iLUijaEKn9ur4A+jgg1A/xAv00qFz5bFmHcbiLuTb0APC6/Q+5x
13DfeOKcQLuUk75HOy+H/rQ+xE07KZ44p3elft2hJ9WLdoumXdQKzN8vw76R
r+P8n0vvCg3MvC18jr56B+dP3JT7j392Q843LxCq95ot1B5adF2oS0cZG1UH
5Lxdtklw63OfQE+jQyCfE/Bap2hnT+aDDk8wPkG/S6h9bp+xnDjOY79dDL/R
F9KOzoz/UbeAJxj2UlfWANeweaVy3u1qiewf4FUk692aXJJzkSEOuW/hpfOy
z33caVnv2uSM3HfVU9b1n16V/erh88XCt9Rd+JvNW8EvfIHT+u8N3P/Nn5B/
TT3kTiPeF+ivu5+PByOL9pxLvJ2J7yLjf+tl8O3rh7FzlOhZ2TKuTM6/slzs
ZaxqdlXkcnhfEHk69zsl47y8/8n51j0suf/FJYfhn+uFanlTMZ88+jc5l7/4
lqzf2yD8tbok+Hl2KuQrugK5WyBerI+A0yykfVYwDkvon1Pphx8QXyrtVgA9
qVFJ2Le+WO6x65xgv5Ae4ldKySz43fXOgs/60VvsYU2Ovyj8troC74B1Z0Wu
KTnH5VyD51Hhv+u7DFnfo2McEZAr9OzMEvjDcOCbHwU5qrMhp+tNyHmN+aGW
cRlDu/2DeH6EPe0C5ulHDeDT8g7GcbOxP3QK/KVwEOIs+LTYTcm5Kn5pt6+y
ZZwVBNrrRYkztS5MqHmsHHpYd+s69J+RJ/N7asXOhqdD8NnBT0+KXEuKsb9o
bDn0MgD+E3IcuPZehVz7qkBbIR6V12i/SNaTZOZzDVSdCXxqwW3sm9oB655J
YjetR77o1di2CXH3/YwS4AwSv9I3x0pcmhtbih7srCTxM6vGFDmtiYgrJeKs
2N8s63tF6MEqxOedL8XOZqwT4vF6J+SdTi9A/vWbQWfmgXYHPsWFONIYfyuI
L5t5x4Afqw768yX4p1VVKPKo+f4ip7m4r8hled8V+c3K7ojHqirIcTIIflzi
Bf5/hIPP+gPgPzEMNPhn+LnHymvCx+N1+LHvSvFPI3qD6Mk6Nk74al9kQS8N
y3E+/Bj87F41xqPof97IN+ZLrBcpjL/vmGd8gE9/twj0UDrkHV0n8qglOUL1
w2HAnTkUONwo90Xo12qXzXhJx/z573FPUD3O3b6CulDdW+ynNRlzDjjeFLxa
fA3se2K74LMHnkfdiAvAfeHIe9qgSthrK+OwH3HMYX58ROpF/APZL9Q7wKcZ
6rDdMw12quwKPd6yEPetP8H+PB/gcUwBjRhEXPcRt0ENqOv5kbDb0x03oa9h
yCeONqgXE95D3HYIRf6seAn6mHRRqDYd/E1f5BftY9RlbRX7yif0z1D2axXE
PYr9ylD2C4587E/Ihd4WpiLOXeAvdogP+o+KLzH+MF7kNpp+hXg7dVP8Swnb
IPFpJh2ReNL25grVa2Ivy/2vzBNcdoItVEufJuvmR2NRf5p3gR5fmAy9LkMe
1++j39EK2Hewr7RvEkcW/TOZfdpR9mmTEa/2txnY16Qaeiv/GHHgqSLu8gYj
f+xzFvmt3V1R3702S/601uwslPV+C6VuKNXH8+W+7M6o55OWiz+qbyjoAxoS
ZN7ooohd9Rt+8M+fHchrD+pR94t/hT5jhgPXp5cg59ya5+LMbMP+rdFuEcQf
jL5Zy5mG+dIuws9MqBQc9i8Dkf/jk1DngrzFv+yZ+ah3uxySJ4wCZ8mH9mQP
qXfW5/EYj1iWI7TTF1L3jfrFv8t6kymoIyUnkDetOtT5vP8gnz0qQx8YkC/U
GPMF9H1wP/zPD/nQ9CO+dNY/9jVKGfv/YvQHSpQ7zn1QIX6mjvcU/dtvfXpC
1v9+8qDct8cJ/ceSpTJvpDcTua2J62Rem9M3G/yeSn0zQlJBmyYJTnNvodRB
veN7sH+7cNS9UB/4cUE86Dtpsq4o78K+9Sniv6ryA+2BvlOdyz66Be3G95Ke
yffPh/Br0z8W/p4dIXy16HiR05p1MVHWY7qnCJ+jY2GfbWfPy/6TTmI/rU+e
1G078Rf0Z3dgN313yjEZf9IEfcycmfDPJx+LP5vdexbIutPX4td2cYbEqfJy
gFCjbYPkW/3QINh3/RjYIxp5VOO7T/2UfUvj+9OD7663kdeVnt1FP3ZggvC1
i34Qe2mBbXfI+p2U/SLPpv2Cx954EHX6eq5Q+1Qs/G5G+wvYN1TGqu9jqd+2
/yaJP/3cNZlXnA+JHa3uvcXPDe9i0YfWPhP273IF/twiTvpUY9IksbPS4w7y
ujvrAPtq05+4LrCf9md+rT+E8RbUc3XZRvFLI9QzU9aL6nfJeXc3sZ99zl/s
Yb05SOyg7FgE+fK8gXPRPOh9zRGJU9P73zJvrR0idjJ39ZB4Nv9IgP0ejpO4
tpN2in/rtcX7ZDzdSBfa7y3Ye8QQiVdl22Pk9Xbot437rA/R7NNeYV7xIr7Z
acDvdhD9SPPbcq/e4Rz0rb+OeMuPkv7fPjxc4sm6hHW70pT6bHsXIJ40H9S5
gah32vbB4lfKCPR59sozEt/6mQGYf6sb8u2pQ+Lf+kI3saNiBP4q9ySeET1Z
8eCrrOgG+d/heyELeVRZyvp3i35axvjMygX+SPYJmbvQx68Nlji3QnOR/yPQ
V9lDr/8h+shwiL9YbyxGX+qzEHVk9xWhRoqfUK3QVfxCcZ2JPmhjLepcxRLQ
dhl4F5vHRK+Goy36G3cP6PnHUryXR74sejH6ZUFevusUfp/R+R3JOE07/sS4
bM9+tVsh1kv2oJ4meqP/ONMgclmr4tBfrI5BXZ/eDnVEiUa9fPsu6Btx6F+m
o05rXd5GP/QgGfOtL6N/SMb7RHPLBP+CUr6PVopdjdX+eE9fGgJ7PxqBviaK
fXJH4jhOnBH0xyjWd0/G5T7G6VR8l9AW8P1ecg56mZiCfR6raGfUScNnB9Zb
ncV9CdCP/Q3OGWfQX9t9vsO+k7sxX30E851Qx+xun2F90wPEx5j9iC+vT6Dn
cF/2mwWwh8a8P5L0Nt9/22mv3/muKGK+CeM7cTBxO3Nfa9aTw9RLAPfN4fvj
fX4PGYX+3OB5awH6J70X3mvm1GL2F3hf2u4Yq6evMW62Qa8lMTh/AnpTlhzE
vJuN+cY+egj7FGfiGE15O1DefOIKYX+dw3zK76xqT9hfz+V3wWWPn9uvFAKX
9tpTzG8D1VqC2l+zj8iBP+gPQZVEvGtsvju1CaUYX+C7tQD215oiH2jFXF/D
PFFKuROJ06D8vYm3F/1xGvGkEW8XxmdT4iuHfcxK8uF3Ha0Z8dwCNR6CKo85
Luc4jHQU9/cnDeb8Wu5/n3ph/bK/AX5zBPRhxFAOfk9R+R3JimPfye/Jei1p
DeOxnudciMfBcw/5XbEf+7bePMc+x/Cl/7akHlPpFwf4Pbk/vgModaDGJMrf
n3xSGS9X+V33bzzvQ341vCeucR/Hg/l+TaG8txvtx/Gev+j/AXFcpiI=
       "], {{0, 
       28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
32f+SOJ7WPA/76N8h66mXSKfz/8fVJiT3g==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
A5DNj14=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
+owq
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtYj3cbf9awllk7OMzMepZxIafUMBs9bYWQJqccmodps3g11LxkPNd4
yattSsxk9ggvWxFymEN6qElUIivxLk/oqMNiRqJe+3zu9491Xb8+1/d8f+77
/t73/XzfmBkW+LGDoigLHZ/8C5yxyHvBghmLx7X6qxEyY+4Az5C/Bl+T35M/
q+3dOq8naAT+AbTuE/XkWqCZz3Frw32gvbuOWEXU1HvESVynhtcDlf2y31LO
0yf9yXl+HDfTua8dfYcYy7Yyjes0F87Xx8q6czxHr+A8tf53Yhzb+hjuY15l
28yR/mDO06/LOk+Rqw33s4ewbfyTbSVI5O0l+6/mOm0l99cuENUFsl8p21Zv
wQjZp63s+4KgM3lrLYmWF3kZq3mOsZn61aNEvucEHcQ+s2V8BtcpU3mOmSv2
qRK9bhL+6zhuPU9U+4p+Zwof92q2Oxezfec6z0kQO/d/wHVJsm+gnB/WyP45
jzj/sbS/IepbG8VfHvzNn9Suom+XCuI08jAHir9cI+pFwne+2Lu78MwXP8kR
vZwXPbeiXEqw9HtVcp6azX3yQ9g/8loN8OZ5oJ3cn+MHlxNTMnnOtnOcn3+Z
7e3cz4ynX1jf8zwzS+zQmWgNbCBuI28zlvKYY0X/4ufGN7Jur/jP0+JXh4R3
huhppGCJ+McYm/Nqc7lvykHwMFe1rQQO6VOB/Y4/dxt626MD7YqvgEqPuGqg
tz/XTfarhbwXxgP1kNGUZ9xq6n39TrbTT1Ped0r/fn+K5d4nyz19KPa7SXmV
x6KvWXKfO4o/RTCu6Ac53y7jPCP3CudvjmT/mmzwUoaml2L9mvJyrJ9QXgac
3OkWxqdsBxqh2Zhnlv6AccPrZehD79IG/M1nFerjiyjoQT20HrzNZZeIbafI
vbtIeQopp9W6QexDHnay8MqS+/Wq2G2rxE1XmRcj9h1MnmpiAvcpmY3z1B3L
KNfa5CqsC9oNee2LJnn5RJdgX8coG+fMdwMqTVuuYP2P665iXcwBoLa3zX8x
b5B+A+NhJdCXuXgJ9lfun4TdtZhplM+gPMrnvPd6b/q1kVRDTJQ4sUL8toXc
Uwex5ytV5D+Wfmm/055+ub4A+n0Sr2i/qc3gpVX2pt2SnSCfNSatGOd+GQI+
VpTnRaxbc+Is+iNvp6JdNPUQ1mUt+xn7je1pAXcHn8e6mCDsY276A+epXi/R
r1v2pDyT91PO9mW0wyyJw1ckDjvKPZsi8aWMdtfcGMe0XWfYP3EF9jVi58Bu
at7v0K+WvhK8zNl+8D/rXgXkUc8NKoScbwZeBp83fPIwPtfhDMYn+YOHfbhp
P7DD8UT0G/67sO8znvvQbvDDOt0cD71pgUmwp+p9FPJop4ZQvl2MX9p4yQfD
yc8YKHE2kbzstN+ohykSN89sZn9hLexmr1pJP7ztQF6bHHnvNva/if3rnvsN
4/rEa+hvd7aIeugHvqZrJO25ZDrGrcYdsKudkXEa48WfH0b/n2Gwr1aelY/x
nutLKOd66nWXM/jZH75F/4w/TH6VtKMxQu7bTYmzkv/tbOE7WeqBH78nX3UR
71sLR/DSBj4Lnsal+fAbe0gK9Gp2zUS/Gatw/MYA+pWrP+Oq8yPMs2NdaQff
ONjFyP/iEvUeBL5a5wW/or9/BMaVACfoz3T5hPxi+uM+Ks7ulG9aEeXvJvHl
dclvAcKzUfLwhhqJQzc5L3w1/d06TrleKWc+eGzRT290ZnyLo7+Y0UsY7/8I
I65wol71LPrTJg1yGclp5LfHAfJaD75G/LGX94N/K/OGMs5M9WW8uvE8+Kmj
V2G+8Ukl40DqBvI7VUj5fSSeNDJPmG9KvPQT+x29Td7DmA+01U+R30c65NGm
XCYWRFLOjY7Uz5ZxXDerhve0rAmo1NSx7VnB/B/xA+Nh4mDmy7hU5ovqKN7f
mgbmG/9H6FeeXcv26BYc17K57hTziD00QeID7Wc1Sb1pSH07QvKk1HFWe/LU
RzOvag2nIJfetxf9c0YA/SxpOOsU1aTdyoaTx3Jv+s2vAcznHmvpt32cqPcJ
LWEXvTqWefG9FNqnpBDjSlYQ7/ODLozH+b/Absp/boOfrZTCf6zvelOOqZ/T
XmWFUpdInesvdUym1AN+kgePSN29hXFXT/Flvi3vgv2MxGPYX/8pD3JbHm4Y
Nwt8eQ9bb6E94lZS7qJelC/XgP9pKW0YV0Kv0A+DXwdf27s75DeG7kUcUcbm
0l9HOwLV6EyMK/Em9RCcTp51OczHLqelvhH7vS/157eS5yX/64VSr2k/s3/M
PcbLMT68J1XnIK/Raiwxh/lOf3kJ5NI6d7yOeVNzC9Au+g7xz9qwnfkvdBvb
IbXMF7YP40j9fsw3xpczvm7YibirNPtAD1rYQIkzt5gnvo6lPtq9CH9RHffR
XldY92tNksfnsS4zXpO82Enq1eR/s/1wOvRkxE+DHo0rbpBPWTWbcb1dLFBf
thdohScgDpqLCnOwT91+4og7QMv5OvO7290s7LP1HxlA94Vo2329L+Dc4Utx
jhkVyjz6dDeg1ucGeFsbD9C/O1Qyzj3DutXYzjyn+Mp342dyDzeKn8p3meX+
Nft372Cd9N0Fxu3NuWnof/cx8pN5dNA5zJ/ZCnZQ8nozX7k2wT7asfkY14bM
BC+l/ttMrPO6h3xn5d07ifl9WiLfG9MuMP/XhWK+mnQ3G/3ukdCP9uFF1Avm
hWbWfdVOrKOK+jJeupVLHJX80FruXUvyUhIYP+38D2jH1EjmaedanK+HdUK9
Yb788TGsS79K+SN2MH/v8IGf6VO6QQ7l9X6U6/hCzmt2gJ7MHz5AW6l6A/bT
rXig6REHfubh078AXXrQvh/WQx/GZhV8rTkK6lar63Tcdzt7HON8IPOfWS31
Z0/JCwUSVx7Rf62jbcn7rRmoe+3o07Cb8uqog+j/6IUjmLcnMh3jnzVk0u57
oHdr3HS09Z3DcoGfRlHvpzsAjUGN1EPxSd43l2LW1xvfhT7t4I7oN2a3h7+q
/QLAT1n7PvzYcIiGPvXmWvKri2E+elXqy6fFXsOkftnOuGM1SN3y0yzJh5MY
Nzz6Q5/2ypE4R63fegLzYuexjow1yX+xK+apdx7AP+2rGvUT78l47yrfRx7O
jFcHPBm/2lus0we7MS6e28v426oe51uLf+N3Rup97Gee0Nl/eSHiuLHuPcrd
Q+qUCPle0CXONMg9vCXvDgXvsP/Fen6XvT0IdaU+6RBQKznF80J1+slZ6xr9
KYfxc9hhfu+FL+X3bfQc1hu3gtG2Lj7DvDKqF+uEAU7Mp5WsA8wO9zFPC3Bn
3nnpDL8Xw3XqIXon+jWbectMS6HcSeKP7vLdcF7ed/zFnqnyPnTyEtFbJ+5e
D3l0J1/Gqx4b+N038TLrteVHWL/l9CaPpfw+VzM8eM6EjsS301m33btKf1rQ
necn8L6baSN5XjXrH7VqAeuLnnwPUO7EEbd+QP6+BawvUvk9p2dLfNwjvLyl
Hg2S79kiqV/GsQ5VSlIp16cLOT7flW3lGPcNj5f6k6g1fsT9lBPEijz6gR+/
X+xRe3juapPtdczLxiS+e2hX89meS3sYAYuoj538rjZqvmKdl/IS5TG5Tlkj
75YnJM8dlLiZJvm8q9jtrMSdblLntJJ3s8qzkh9/JP+Jy9i/P5moHeX8dvKd
lUD/MLbJO8d8vrMppTnc54TU729JHXybcd0YxXcnyzmJWOpPuYL4nWCUD+U+
+zKILUS+Y3K/nhIe14RXL3nP6yt5/aTI8y+RL5zzlPwCke8Y+7vRPkbZAcpx
UL7zix5yXlWT3HO+A5qe8v6jsQ428m7wPAf6ldrIdz8z5BTlej+G870juN/M
uVyXy3OVRM5Xtog/thZ508UuJcJnh+hvpnzvuoge5H3Rqvm//WR8udTpGfLO
e03ePXLIx9jXTDzTLPYm6jbfgdTpfBewdxKV7o+53wqi1iTvXG+yXja20I7a
HH6/6l7iX5nyvuwuee1LxkXzT4n/y4X3Q+GriL/elfV9xM7uEm89hMd98lLS
5Hujg7xzlEo8nihYz/urhVJeO5B8jCXkoe+S+yLv5soY2WeeyHdd4uAA0ber
2KFY2ktE/+/J++BEwY6C6U/wf7JOk2Q=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {0., 
       1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
HspxoU/a/wentalg
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
9B8Pykn8qhXlcqUeKIcd+pT+H4pOtmE=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
3v8D9O9qfQ==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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

       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVmHl4T1cax689pi1Cq7Xf1FJqm4qRmpq6kqp6RClNq3S4aYWWhqJKUbmW
2katJS1VV61pqbWhls6VRCSCCFIkITdBUsTWoCGW0ffz+mPyPL+8zzn3nPe8
33c/J+i94b0GlTUMY1TAw3+9Isd0Gjky8rPeFf8aREV+1K5t1F8f6+rv4Z9v
X73a8SE1g6Bu5z+EOtkXmW8FNbbfYH5xEeuWXxbqn4JaE64x3+4661YXM9+P
sdmRsXECfpbN2PM416nDOsuA+pOUT1Xl0wK5DBtq/cK5zswrjGfrvmDGXrqu
/17H96Dmr3pOE767QznfL9b55ZfY95PiXAEu4/0L0KXMO9F6/iLV2x9Qbwzr
vXHKfzbr7Inwt6dAvf3o08qHn9edsT1az3tHv89Abv80/Owwxm4j9OLXVjnO
wse4zzrvB5V/kY53sM4ogHqfFvA94xDz1hnOq865/iKVe2A289uxm9fgT/Yd
gpq5JXy/fof1vUpZN5F588At+C9nbGeo33ys51y8+n/2NieonzxQfzqt32PV
Dx9gHzdK14eqPzyldqicgz5urGY++t4VmXevFwmf3Dyh3rv9r6Cv49DgD5H7
xJfweXm76ucc9GfwWhXucm4TxbcB6k8At9lI9TBb46gHOKxk5DMexcMo5s2G
6jcaP37rm+x/ZLdT6h+PpcCn/kJoXMQlmT975ZzwKS3Ol/1tVsrYqD71vKwL
+rJA5Gi/5IKsj+8h+I1aNcHduAr8wzYib88T8K+LP7glqvcPkMsqAZ+zBH0Y
VcHvjtc40/jxwwpZ/wH2tEPUn0PUfpka9zl6TlYM+wr6XpZxvxO+8P/7xDNC
jzWTsVv7eLasy0o+Iftb38gR/jNDc+X8sU3PYpdgwW03P3hR9ufHFrHuiuC2
iicj/52fOD8X3EYNzTflwOf0Ba/bmbE3Gn34jbCXHQpuI17xlFXaBZx2jVPs
u7lezvUmDyqU9WezBY//fKzI7Uc9K3iMN3ofl3Xd3j0mOCJ3HZX5ASUyNuK6
y3f/H28KdYeap+S8Zqlif7Plmovov6Wc51frwPn+IuQsTMXvgs5Dx2i8LVN7
Psp/MxRfK80XU35HD5s0Tw48CM7581nXaTR+FXMO//skWOzinD2SJXIkDjsp
422zBaf56mGR34muKLisegfThP+gsFTh507+BXtV3C7fh1+Ref/TRuIPZrOp
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
       "], {{0, 28}, {28, 
       0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
8f3d9qa8M2mH25xv/1ze3wDxV5ZO
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJwtmAl0SFcagF9L7dppnVJrn1EtbR1jrW7ywinT0lBae+shqWVISixVxVNM
xJ5qbAl5aC0laGMX+iQ5JGKJNYn1IsSaoh1LBaP/9+ec5M99997//vtWu29U
py+ftiwrusyTP536jAodNqzP6M6l/l5E9BncvGnE35s19PfJj1v74u8hf/+z
8oJAs/Qy6yZnBXoRuazLXGe/rRHoRp8XaI84xXojeFz3KrDwGvcs8PlpQKfO
CYGBz35Q9RJ4v+K+4ymeGUC7GfhMxyusw5S+0+dYTwQ6m/XddayDDxT/Ft1/
E/78Q4XcTwBfEAMfZgV47cTTwP9wz6oGfX4scnCusu91NSqnAt6dBDR1VI77
occ7xDn/E971lwODqBvcy2A/aIl8nUXcd2N0/RP0OY2U7xSlqzX0OyO5b14/
A/763PND0Z9jeM+exDnHVn6rHgPmrYXOnhkqB/h17f2sP10Hfe33gucecvUO
/856+W3W1l3u9QPaKTdZX9Fz7TjnNFB+dyj9N5FbcErt43nleyt0BM3Z97ae
BO5D/lYIfJl45OynwJdXETq9Hz/l3clNi2Q9K+ua4M08INA/UPmGfM/7Q6AZ
d0fOBYc+AW/oIt6JQo7u9jt8L74P3qw/eKf0n5ybD99m5v+gv7XK8SO14+pq
3yvVvtupHfZSfd9UOxtcxPcKyMctQt9+DejxqjQBT07GFVnfb39B6I77y8j3
5DHn5F7F+edlnXK0QO7PeUHOB6H/ui73FjcTfq0VNdXu1vBu4QHgtuO8Nwk6
vY7o0xyDT+8gerUW3mIdhpzsMUBTwH3nK+zFRKt+JxIv/AA5BPWxO3tmgdBj
z956FTm9fULWdY/lCxzP2u3b7bisi6YdlXOze58UPNXLCP9B2FLh11ToUCj7
e3uKvr2MAuHbL/cS9ERMgZ7EzdBha1zKgq9gIvYatELvrq/2nMo5M0Dpfx79
mDiNA+fh37qRx3rtBvht0FDszE6NFf34tb/NxV5nCHTmdzkk+7035Qi+47MP
y3rsMOHTqgLfXmhMnuybqHz4X3da1j2HXpL9hKflneBgEfIc9l/ku2yV6gf/
cL/H7pyX4NPMUv8cpva2Df5MY40rf+ap32Kn3vJEzl9+jfWydWJfbtdrZ+Xe
m72Fbt96Rvgz5RcK/VbZxkK3SQiB7/SYY/K91RXh32lXEv43JuwUvDEbdmJn
ewWfyWteiP/3Qp/VtwufbsFg5H5lGvSuIW75c4kbjqP5qp3Gv3xgEKJ5oAZx
JVil9hl5EL6WJBAXar0odumPryP+5oR/J3K3zFbRp/dOnHy33/tG1kHLvWKP
Zt8D7HJdB86V+YfwbeW2TRN88U1WY09Tt8q5F0eeEvzP5l4WeGuf6NOqmCp0
ODVbw8/cJdCZtxJ+dqUBL2g+v6z5rprm4X+iRzMii/vDD8NvfqHgNdXfgL9B
00W+QeJu3m/5jPhPUG2UQDthymXsuL3o2/+8kHu3m8i+u2TWRXmv7ReiR7v/
0LWCf3vhBsFzJFu+O7dLCR4/dRJ+8fUw7HVAM+huGwd9XeZhr29nQ3cH7NB+
SfPqH/Bnl4BfbzXxyr2u+Sp/CHhGtBB7MVO7CwxKJfHekM+RS0nsxhlTHbw9
z2JXYR9yv8lnwO4/y31ryE6JOyZlzSb53i8kRWDFp48I3tDKIh8rK4r8c24t
+Lq2AP8F+LKzt4D3Lnbqfw1/fj3Ns4u1nsnUuJJ+iHUDjTtpI4AbUkWO7lz0
6W3cAZ58/NX+EP1b9TYBh/+GnJruA1/kj8DRb4HnYYTYod0iYbvI5fEYgXah
wY/jDHl00HXkWPpV6IgN593ryNM98itwQSZwidZ7MVqPzNN4Eq75O566xDqo
+4ejON/+sbzjZ+LXVjPNm5l6vxZ2bc0Yw/rdiaxL+fDVuhj5VzGiF2f9Fomv
xs+Bryo7MuT8V7bkTavcKeqDlAG8cyEW+OoP4I1W/LOIq6bubuRclbxnxyHv
IEnjbA+tA7bAp9+NOGM+Qh9m2Xi+h+DHdh5xyVd9m7XdwGdG4a8hx9FT943E
+6pt8M91iWeE7jppmUJfmxu/yfs/nxR+/c4NJU8EbbYgj/qTwPvCXN7pOBt6
S3wHHeOxC+sz8qR1SevbLtinE6ryr6J2Zms/0Bc5mIWp8NGdOtP+dSPrVOzC
mteR712i4aeqxptDt0RP9uYs4sS5MxeQQ23xLyu88l6BSZUOyrnY94Vv5+IO
4lLFmdjl/Q+g491Gyud54miPN6CjFf5jJ+Ev1kP80A3RvmHcVbVHrWOytP5u
BJ9e26PAL3YB++PXwa2ngLXuSLywc+thd4NyRP7WtvNiZ8GiwdC9eSRx44Xc
A7K/f2K2rNcUS76wI9OwyxmpxNsTAXrf+B72YGXI2v82i/h2+CbyTN9DPBil
8a0VcTQYBl9BN+2byhNfgnjVZ6U9fN+hfhuP3lz7L96b0oe8lPy96MerO1Lo
8/smSf4P0q9Q35wKw+6mLBV7dMslC3ReySPft20ocdRddpM61m9D3hnSnzow
srxAK/ctkZ9JeSz7Ji1K7MTq/Yj6PfER8SFe+5hH2heM17rU0ni6AL90tQ5w
m6E303Akeu1XJPJz+91DT9ezJc87V2dQz0yIF7rNvqaiH397ZrrgXZYm0Dk/
VOzSrt1Y9BlYP5Hvu1oST82DXKkD7BHrRV72tWLqhI0VBNr9ylK/Hy+QPBpE
FlNXDZiNvp/Tfqys1tPVsUdvn9bd7eDPu6f16W76IGvb69jB2kuS3+3y06kz
YpMkH1v5fUUvxvGy0M8c+NoyUKD/Zdwe+V42VPjy+9QXvzM7d+8XuOIe9ev3
d6Q+terFUK8/nCv6d2vOEbz2o0yRj/tDuMjFH9ADfi9uoj/5OAe9PDwC3WHa
jx/XuOnhn2YB+0EIcSzo6xI3OhUj1+Sz0OO/LHRbi9Ilzvvn6qUKPDxwO/4a
7EUuycKXMzUMWHWy8OWtihToJAyR7+60WPXHGJGfO7Mu55/fLfWc13LNLqEj
eec+gTUXS740u97DT7rgV14jtcvp9A3OSo0z5bU/vkv/7TvR6G1DO/RWOkf8
xf94K/3P0elCv59YY4fc//D0ZoEntwjfbrWG5Ose9Id2nxLEkbFVJO64o/qL
v1qnlmCHdcMKsGf82dnViT6s+RWJS/7jZ3fLvYwfDuCHSceR6xr8NJy46GzW
ecoetc9ZrM0s1eOp9ezfSyQeh9UiLx2sBJ3Bavq6n+4Ln97hnvQ/5S4jz/WP
5Zw74rHcc5/KlvfdiGRgouYPtzt98sOx0Jc9j/hYOeIq+nkg/AYR74g87GmL
6Ff2zxI79ltNoK9+92PiyyD6P2/hJc1/+Jszh77dfUvnFgXEIWdwZ7636UF9
fGsc9fP7K4l3M2/QF0x18fdFlYh/JV8mnm+aQrwtUQn5RVfg/Xz6EqfkKvr4
jtSX3jfXyHu1hkDv55WpVyNviP34E5rLO6bvMeHbvtCLuUgt6hfnF40rOn8I
WuB/ThPVYwOtu3zmBP6I6axHvw5siJysai/Sn/22nzqx9FPErx+rUXfUqKF5
cpzWg/QxQdQyYPp88GXTp7tZMdCRRJ3kHmjP+2cXwGeDLPg+An7TJlPeczKo
Z4IJ2je01zldmvZJRRonU5WvSJ23FWu/dId7JoG8aVXDbp1nlK4uw4GdhyKf
jqtZn0A+Tjp9lrsnYP0tdVAwf6vGaeo9d7nOCeYs5r0+9O2mK/Wr/9w2zs9k
DuS+vUnrFo2PRToPy9H6Ok773aE6f12qc5xfdS6Yq/6pcwszNRm63lf+9mic
Gkt96DVezn4H4pOdfI9zr+g8aKjWvaOhPwjnvDcEfNYZ+g3739uhvyb8Pwkw
4LkbD50rkJ9pr371mc4HuwPtk9ill6zzs+E6d6mrdelCna+tUPu9r/ROVvip
9lf9dZ6TwLzOnv1A6XwELH6kcipmP4M5l1+H+aSbpnPVa/i9CWdOFJzjnPuL
zhHqMzf2byNPs0Hn6Eb5Ka1xxNO4OUXnxK/pvLABegoGUr/4P2vf1x9+7Uba
ZwzEDtzZ3POm6ZzjBvnSytQ+pITOr4rzwbcBep3dzDHticw3/V5aD+ZoPbFU
5wnfqP3oXNYdrX3KGs7ZdXRuGa3zo3XwZ+VrPZapdpr1BP4fvvqRDA==
       "], {{0, 
       28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}]}], "}"}],
  StripOnInput->False,
  Magnification->4 Inherited]], "Output",
 CellChangeTimes->{{3.739811234693652*^9, 3.739811238471654*^9}, {
   3.7398113057066545`*^9, 3.7398113113066587`*^9}, 3.7398114035416527`*^9, {
   3.7398123458803415`*^9, 3.7398123537693424`*^9}, {3.739812387172079*^9, 
   3.73981240415008*^9}, {3.7398125162916813`*^9, 3.7398125284106874`*^9}, 
   3.739812645727603*^9, {3.7398167233396544`*^9, 3.739816735836159*^9}, 
   3.7398248010308933`*^9, {3.7399157358104873`*^9, 3.7399157706464877`*^9}, {
   3.7399158216105194`*^9, 3.7399158292864914`*^9}, {3.7399169315092096`*^9, 
   3.739916952125207*^9}, {3.739918361683551*^9, 3.7399183674163733`*^9}, {
   3.739918412466813*^9, 3.7399184165299644`*^9}, {3.739918682540408*^9, 
   3.739918685523666*^9}, {3.739918725729963*^9, 3.7399187355024767`*^9}, 
   3.7472791485091734`*^9, 3.801897714143067*^9, 3.8036700634372272`*^9, 
   3.803688587293024*^9, {3.803688687825466*^9, 3.803688707089686*^9}, 
   3.803709599038917*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"7f1cd85e-efcd-406d-bc88-eeff121b2b42"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Import  Saved Networks and Compare", "Subsection",
 CellChangeTimes->{{3.8040075064218493`*^9, 3.8040075169892187`*^9}, {
  3.8040077231677837`*^9, 
  3.804007728338293*^9}},ExpressionUUID->"246c8d64-10fc-4255-80c5-\
fbb841c1dc2c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"trainedCoupledVAE", "=", 
  RowBox[{"Import", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<MNISTnetkDist05.wlnet\>\"", "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"trainedGaussianVAE", " ", "=", " ", 
  RowBox[{"Import", "[", 
   RowBox[{"AbsoluteFileName", "[", "\"\<MNISTnetkDist00.wlnet\>\"", "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8040075421946087`*^9, 3.8040076093963203`*^9}, {
  3.804007746378594*^9, 3.804007822925746*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"41104c8a-f3f7-4f2d-ab05-3fb70c2457fb"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["9", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    
                    LineBox[{{-7., 
                    4.286263797015736*^-16}, {-6., -0.9999999999999997}}], 
                    
                    LineBox[{{-6., 
                    3.6739403974420594`*^-16}, {-5., -0.9999999999999997}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQESB7i65vlYVu6yWZn+5tHX8+IHylZJbbJ22WUT
uYTH5u4s8QNvu1yVVnHusuHZlsC9LUH8QKG2/NyWkzttDs95EdCgKH7gb/dy
pdPNO23qI0AaxA7MWHNvU63FThv7l5PtXk4WO2Dbe8R3zvMdNiz+25+1u4od
eKsb+Vlt4g6bs518rBKfRA+s7JuzWNZ0h82smSAgeqBgfV9cw+XtNmDtdqIH
bAxuyEnmb7ex7Hts0fdY5ADXRsX7G7m223R2gIDIgWuG2fO9lm2zudmke6NJ
V+TA4k1b4h87brPRqL2kXntJ+EC+8T/5mrtbbSrKQUD4gM0W9wcilVttjhfK
AJHwAU7TiQvWimy1Ec85KJZzUOjAta23Etw2bIG6R/BA3oyTF79lbrZ5BXaP
4AErSeFJ/ayboe4ROMAxKyZIY+Emmy6wewQOXJVaJnTQZpPNDbB7BA4smP3+
UuSNjTYBv5b4/1rCfyBPxnLyp+KNNh/egQDfAau5TcHd/BttwMZZ8B1glzsj
rLJ6g40e2ADeA1fmiV7Z47bB5uwZEOA54GC/T2P1kfU24OiS5jlwpmHRvALG
9Ta/EicafSjhPuDmpPk/1nOdTQvI+htcB5Y1B3kVz1kLDX+uA+9c5Bo2/Fpj
U31ML+7/Hs4DSm09C0RT1kD9x3nAzn3u6kU3VtuAlZ/iOODSEbAwPGK1zRoD
dSuRBI4DRp7LGk0er7KBpB8OaPpZZQMA47MdMg==
                    "]], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-2.9999999999999996`}}], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-0.9999999999999997}}], 
                    
                    LineBox[{{-5., -2.9999999999999996`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-5., -1.9999999999999998`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-4., -1.9999999999999998`}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-1., -0.9999999999999999}}], 
                    
                    LineBox[{{-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}], 
                    
                    LineBox[{{-5., -0.9999999999999997}, {-4., \
-0.9999999999999998}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-6.4, -0.5999999999999995}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.5999999999999996}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.355555555555556, 
                    2.667008584809791*^-16}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888857, -5.442874662877157*^-18}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.417705098312485, -2.164589803375031}, {-0.25,
                     0}, 
                    Offset[8], {1., -2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-5.4, -0.9999999999999997}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -2.3999999999999995`}, {-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999998}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -1.9999999999999996`}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-3.417705098312484, -0.8354101966249685}, \
{-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.5999999999999999}, {-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.4000000000000001, -1.}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999999, -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-4.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8., 4.898587196589413*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-7., 4.286263797015736*^-16}], 
                    Offset[{12, 12}, {-7., 4.286263797015736*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-7., 4.286263797015736*^-16}]}, 
                    
                    TagBox[
                    GridBox[{{
                    StyleBox["\"enc\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "10", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["enc", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[10]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., -0.9999999999999999}], 
                    Offset[{12, 12}, {-1., -0.9999999999999999}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-1., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{10, 10}, {-6., 3.6739403974420594`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 18], {-6., 
                    3.6739403974420594`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "8", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "5184"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{8}, "Input" -> 5184]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-6., -0.9999999999999997}], 
                    Offset[{12, 12}, {-6., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-6., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., -0.9999999999999997}], 
                    Offset[{12, 12}, {-5., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 0.,
                     BaseStyle -> GrayLevel[
                    0.4]], {-5., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[6], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{10, 10}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"+\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-3., 1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["z", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., -2.9999999999999996`}], 
                    Offset[{10, 10}, {-5., -2.9999999999999996`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-5., -2.9999999999999996`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupledExpSd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Plus", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], "3"], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "8"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupledExpSd", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[(1 + 0.5 #)^3& , {4, 3}], "Input" -> 8]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-4., -1.9999999999999998`}]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Times]\"", 14, StripOnInput -> False], 
                    TraditionalForm]], {-4., -1.9999999999999998`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sdEpsilon\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sdEpsilon", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., -1.9999999999999998`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"random\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["random", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dec\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dec", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[17]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1., 6.123233995736766*^-17}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.123233995736766*^-17, -1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., -0.9999999999999998}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., -0.9999999999999999}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-8., 4.898587196589413*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"enc\"", TraditionalForm], 
                    Offset[{0, -15}, {-7., 4.286263797015736*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"mn\"", TraditionalForm], 
                    Offset[{0, -13}, {-6., 3.6739403974420594`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sd\"", TraditionalForm], 
                    Offset[{0, -15}, {-6., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -15}, {-5., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"z\"", TraditionalForm], 
                    Offset[{0, -13}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"coupledEx..\"", "\"coupledExpSd\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "coupledExpSd", "Tooltip"]& ], 
                    TraditionalForm], 
                    Offset[{0, -13}, {-5., -2.9999999999999996`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"sdEpsilon\"", TraditionalForm], 
                    Offset[{0, -13}, {-4., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"random\"", TraditionalForm], 
                    Offset[{0, -7}, {-5., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"dec\"", TraditionalForm], 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"imageLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-6.123233995736766*^-17, -1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"latentLoss\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}]}}, FontColor -> GrayLevel[0.5], 
                    StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 
                    4.531193156845207*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-6.4, 
                    3.9188697572715305`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-6.4, -0.5999999999999995}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-5.4, -0.5999999999999996}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655253*^-16, 5.5}, {-4.355555555555556,
                     2.667008584809791*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736824*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{4.919349550499537, 
                    2.4596747752497685`}, {-5.417705098312485, \
-2.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, -0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-5.4, -0.9999999999999997}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087296526011, 
                    3.8890872965260117`}, {-4.4, -2.3999999999999995`}], {
                    0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-4.4, -1.9999999999999996`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{-4.919349550499537, 
                    2.4596747752497685`}, {-3.417705098312484, \
-0.8354101966249685}], {0., -0.17}, Automatic, {0.4472135954999579, 
                    0.8944271909999159}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-1.4, -0.5999999999999999}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438362*^-16, 
                    5.5}, {-0.4000000000000001, -1.}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251568`*^-16}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-4.4, -0.9999999999999998}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251565`*^-16}]}, FontColor -> 
                    GrayLevel[0.7], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}, {-1., -0.9999999999999999}, {-6.,
                     3.6739403974420594`*^-16}, {-6., -0.9999999999999997}, \
{-5., -0.9999999999999997}, {-3., 
                    1.8369701987210297`*^-16}, {-5., -2.9999999999999996`}, \
{-4., -1.9999999999999998`}, {-5., -1.9999999999999998`}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-6.123233995736766*^-17, -1.}, \
{-4., -0.9999999999999998}, {-2., -0.9999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 24, 24, 20, 20, 20, 8, 24, 8, 8, 8, 
                    8}, NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {503.5, 211.}, AspectRatio -> 
                    Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 35.5}, {28., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "enc"], 
                    NeuralNetworks`NetPath["Nodes", "imageLoss"], 
                    NeuralNetworks`NetPath["Nodes", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "latentLoss"], 
                    NeuralNetworks`NetPath["Nodes", "z"], 
                    NeuralNetworks`NetPath["Nodes", "coupledExpSd"], 
                    NeuralNetworks`NetPath["Nodes", "sdEpsilon"], 
                    NeuralNetworks`NetPath["Inputs", "random"], 
                    NeuralNetworks`NetPath["Nodes", "dec"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "imageLoss"], 
                    NeuralNetworks`NetPath["Outputs", "latentLoss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    Association["Output" -> NetDecoder["Image", 
                    Association[
                    "ColorSpace" -> "Grayscale", "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "latentLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "imageLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "enc" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 1, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$GroupNumber" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {15, 15}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 15, 15}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {15, 15}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {9, 9}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 9, 9}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]]], "mn" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "sd" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association["OutputDimensions" -> {8}, "$OutputSize" -> 8,
                     "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "coupledExpSd" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[3], 3.}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "sdEpsilon" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "z" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "dec" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{25, 8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{25}]], "Parameters" -> 
                    Association["OutputDimensions" -> {25}, "$OutputSize" -> 
                    25, "$InputSize" -> 8, "$InputDimensions" -> {8}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {25}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{49, 25}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{49}]], "Parameters" -> 
                    Association["OutputDimensions" -> {49}, "$OutputSize" -> 
                    49, "$InputSize" -> 25, "$InputDimensions" -> {25}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{49}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {49}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{49}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 7, 7}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 7, 7}, NeuralNetworks`RealT]]],
                     "6" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {2, 2}, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {12, 12}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 12, 12}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {11, 11}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 11, 11}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "12" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {11, 11}, "$OutputSize" -> {10, 10}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "13" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "14" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{6400}, NeuralNetworks`RealT]]], 
                    "15" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{784, 6400}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{784}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {784}, "$OutputSize" -> 
                    784, "$InputSize" -> 6400, "$InputDimensions" -> {6400}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "16" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "17" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "imageLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "inDec" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "inInput" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT],
                     "2" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{28, 28}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{28, 28}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}], "latentLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "mn" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT],
                     "sd" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"random\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"latentLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {"", "", "", "", 
                    StyleBox[
                    TemplateBox[{"\"imageLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8040076130158377`*^9, 3.80400774982833*^9, {3.80400781198059*^9, 
   3.804007825673831*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"8f4b359e-a0dd-4b1e-a11d-29588d41511b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {15., {0., 15.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["9", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {15., {0., 15.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], 
                    
                    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 
                    3.6739403974420594`*^-16}}], 
                    
                    LineBox[{{-7., 
                    4.286263797015736*^-16}, {-6., -0.9999999999999997}}], 
                    
                    LineBox[{{-6., 
                    3.6739403974420594`*^-16}, {-5., -0.9999999999999997}}], 
                    LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQESB7i65vlYVu6yWZn+5tHX8+IHylZJbbJ22WUT
uYTH5u4s8QNvu1yVVnHusuHZlsC9LUH8QKG2/NyWkzttDs95EdCgKH7gb/dy
pdPNO23qI0AaxA7MWHNvU63FThv7l5PtXk4WO2Dbe8R3zvMdNiz+25+1u4od
eKsb+Vlt4g6bs518rBKfRA+s7JuzWNZ0h82smSAgeqBgfV9cw+XtNmDtdqIH
bAxuyEnmb7ex7Hts0fdY5ADXRsX7G7m223R2gIDIgWuG2fO9lm2zudmke6NJ
V+TA4k1b4h87brPRqL2kXntJ+EC+8T/5mrtbbSrKQUD4gM0W9wcilVttjhfK
AJHwAU7TiQvWimy1Ec85KJZzUOjAta23Etw2bIG6R/BA3oyTF79lbrZ5BXaP
4AErSeFJ/ayboe4ROMAxKyZIY+Emmy6wewQOXJVaJnTQZpPNDbB7BA4smP3+
UuSNjTYBv5b4/1rCfyBPxnLyp+KNNh/egQDfAau5TcHd/BttwMZZ8B1glzsj
rLJ6g40e2ADeA1fmiV7Z47bB5uwZEOA54GC/T2P1kfU24OiS5jlwpmHRvALG
9Ta/EicafSjhPuDmpPk/1nOdTQvI+htcB5Y1B3kVz1kLDX+uA+9c5Bo2/Fpj
U31ML+7/Hs4DSm09C0RT1kD9x3nAzn3u6kU3VtuAlZ/iOODSEbAwPGK1zRoD
dSuRBI4DRp7LGk0er7KBpB8OaPpZZQMA47MdMg==
                    "]], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-2.9999999999999996`}}], 
                    
                    LineBox[{{-6., -0.9999999999999997}, {-5., \
-0.9999999999999997}}], 
                    
                    LineBox[{{-5., -2.9999999999999996`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-5., -1.9999999999999998`}, {-4., \
-1.9999999999999998`}}], 
                    
                    LineBox[{{-4., -1.9999999999999998`}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    
                    LineBox[{{-2., 
                    1.2246467991473532`*^-16}, {-1., -0.9999999999999999}}], 
                    
                    LineBox[{{-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}], 
                    
                    LineBox[{{-5., -0.9999999999999997}, {-4., \
-0.9999999999999998}}]}, {
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-7.4, 
                    4.531193156845207*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-1.4, -0.9999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-6.4, 
                    3.9188697572715305`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-6.4, -0.5999999999999995}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-5.4, -0.5999999999999996}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-4.355555555555556, 
                    2.667008584809791*^-16}, {-0.25, 0}, 
                    Offset[8], {
                    0.08888888888888857, -5.442874662877157*^-18}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-5.417705098312485, \
-2.164589803375031}, {-0.25, 0}, 
                    Offset[8], {1., -2.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-5.4, -0.9999999999999997}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-4.4, -2.3999999999999995`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.9999999999999998}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-4.4, -1.9999999999999996`}, \
{-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-3.417705098312484, \
-0.8354101966249685}, {-0.25, 0}, 
                    Offset[8], {1., 2.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4000000000000004`,
                     1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-1.4, -0.5999999999999999}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-0.4000000000000001, -1.}, \
{-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999999, -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-4.4, -0.9999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.1102230246251565`*^-16}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8., 4.898587196589413*^-16}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-7., 4.286263797015736*^-16}], 
                    Offset[{12, 12}, {-7., 4.286263797015736*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-7., 4.286263797015736*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"enc\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "10", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["enc", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[10]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-1., -0.9999999999999999}], 
                    Offset[{12, 12}, {-1., -0.9999999999999999}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-1., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[5], 
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-6., 3.6739403974420594`*^-16}], 
                    Offset[{10, 10}, {-6., 3.6739403974420594`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    RGBColor[0.33, 0.33, 0.33], 
                    AbsolutePointSize[3.5], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 18], {-6., 
                    3.6739403974420594`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"mn\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "8", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "5184"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["mn", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{8}, "Input" -> 5184]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-6., -0.9999999999999997}], 
                    Offset[{12, 12}, {-6., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-6., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sd", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[2]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-5., -0.9999999999999997}], 
                    Offset[{12, 12}, {-5., -0.9999999999999997}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    GrayLevel[0.7]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.4]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, BaseStyle -> GrayLevel[0.4], 
                    ImageMargins -> 0., ImagePadding -> 0, ImageSize -> 15, 
                    PlotRange -> All, PlotRangePadding -> 
                    0], {-5., -0.9999999999999997}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetGraph", "[", 
                    RowBox[{
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}]}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold], 
                    Style[
                    HoldForm[
                    NetGraph[
                    Skeleton[6], 
                    Skeleton[9]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{10, 10}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"+\"", StripOnInput -> False, FontSize -> 14], {-3., 
                    1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"z\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"TotalLayer", "[", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["z", Bold], 
                    Style[
                    HoldForm[
                    TotalLayer["Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-5., -2.9999999999999996`}], 
                    Offset[{10, 10}, {-5., -2.9999999999999996`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    StripOnInput -> False, FontFamily -> "Source Code Pro", 
                    FontSize -> 14, FontWeight -> Bold, FontSlant -> Italic, 
                    FontColor -> RGBColor[
                    0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`]], {-5., -2.9999999999999996`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"coupledExpSd\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"ElementwiseLayer", "[", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"Plus", "[", 
                    RowBox[{"\[LeftSkeleton]", "2", "\[RightSkeleton]"}], 
                    "]"}], "3"], "&"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "8"}]}], "]"}], HoldForm],
                     FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["coupledExpSd", Bold], 
                    Style[
                    HoldForm[
                    ElementwiseLayer[
                    Shallow[(1 + 0.5 #)^3& , {4, 3}], "Input" -> 8]], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-4., -1.9999999999999998`}], 
                    Offset[{10, 10}, {-4., -1.9999999999999998`}]]}, 
                    InsetBox[
                    StyleBox[
                    "\"\[Times]\"", StripOnInput -> False, FontSize -> 
                    14], {-4., -1.9999999999999998`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"sdEpsilon\"", Bold, StripOnInput -> False]}, {
                    
                    StyleBox[
                    TagBox[
                    RowBox[{"ThreadingLayer", "[", 
                    RowBox[{"Times", ",", 
                    RowBox[{"\"Inputs\"", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8"}], "}"}]}]}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["sdEpsilon", Bold], 
                    Style[
                    HoldForm[
                    ThreadingLayer[Times, "Inputs" -> {8, 8}]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-5., -1.9999999999999998`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"random\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["random", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{12, 12}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-2., 1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"dec\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "17", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["dec", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[17]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1., 6.123233995736766*^-17}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.123233995736766*^-17, -1.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"imageLoss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["imageLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., -0.9999999999999998}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"latentLoss\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["latentLoss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2., -0.9999999999999999}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    Offset[{0, -7}, {-8., 4.898587196589413*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"enc\"", 
                    Offset[{0, -15}, {-7., 4.286263797015736*^-16}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"imageLoss\"", 
                    Offset[{0, -15}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"mn\"", 
                    Offset[{0, -13}, {-6., 3.6739403974420594`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox["\"sd\"", 
                    Offset[{0, -15}, {-6., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"latentLoss\"", 
                    Offset[{0, -15}, {-5., -0.9999999999999997}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"z\"", 
                    Offset[{0, -13}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"coupledEx..\"", "\"coupledExpSd\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "coupledExpSd", "Tooltip"]& ], 
                    Offset[{0, -13}, {-5., -2.9999999999999996`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"sdEpsilon\"", 
                    Offset[{0, -13}, {-4., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"random\"", 
                    Offset[{0, -7}, {-5., -1.9999999999999998`}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"dec\"", 
                    Offset[{0, -15}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    Offset[{0, -7}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"imageLoss\"", 
                    Offset[{0, -7}, {-6.123233995736766*^-17, -1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"latentLoss\"", 
                    Offset[{0, -7}, {-4., -0.9999999999999998}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox["\"Input\"", 
                    Offset[{0, -7}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}]}, StripOnInput -> False, FontColor -> 
                    GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 
                    4.531193156845207*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    Offset[{0., 5.5}, {-1.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-6.4, 
                    3.9188697572715305`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5184\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-6.4, -0.5999999999999995}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-5.4, -0.5999999999999996}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.367778697655253*^-16, 5.5}, {-4.355555555555556,
                     2.667008584809791*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736824*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{4.919349550499537, 
                    2.4596747752497685`}, {-5.417705098312485, \
-2.164589803375031}], {0., -0.17}, Automatic, {
                    0.4472135954999579, -0.8944271909999159}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    Offset[{0., 5.5}, {-5.4, -0.9999999999999997}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{-3.889087296526011, 
                    3.8890872965260117`}, {-4.4, -2.3999999999999995`}], {
                    0., -0.17}, Automatic, {0.7071067811865476, 
                    0.7071067811865475}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    Offset[{0., 5.5}, {-4.4, -1.9999999999999996`}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{-4.919349550499537, 
                    
                    2.4596747752497685`}, {-3.417705098312484, \
-0.8354101966249685}], {0., -0.17}, Automatic, {0.4472135954999579, 
                    0.8944271909999159}], 
                    InsetBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"8\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-1.4, -0.5999999999999999}], {
                    0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox["\"\[DoubleStruckCapitalR]\"", 
                    
                    Offset[{6.106226635438362*^-16, 
                    5.5}, {-0.4000000000000001, -1.}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251568`*^-16}], 
                    InsetBox["\"\[DoubleStruckCapitalR]\"", 
                    
                    Offset[{6.106226635438361*^-16, 
                    5.5}, {-4.4, -0.9999999999999998}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251565`*^-16}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-8., 4.898587196589413*^-16}, {-7., 
                    4.286263797015736*^-16}, {-1., -0.9999999999999999}, {-6.,
                     3.6739403974420594`*^-16}, {-6., -0.9999999999999997}, \
{-5., -0.9999999999999997}, {-3., 
                    1.8369701987210297`*^-16}, {-5., -2.9999999999999996`}, \
{-4., -1.9999999999999998`}, {-5., -1.9999999999999998`}, {-2., 
                    1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}, {-6.123233995736766*^-17, -1.}, \
{-4., -0.9999999999999998}, {-2., -0.9999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 24, 20, 24, 24, 20, 20, 20, 8, 24, 8, 8, 8, 
                    8}, NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{28., 35.5}, {28., 18.}}, 
                    ImageSize -> {503.5, 211.}, PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "enc"], 
                    NeuralNetworks`NetPath["Nodes", "imageLoss"], 
                    NeuralNetworks`NetPath["Nodes", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "latentLoss"], 
                    NeuralNetworks`NetPath["Nodes", "z"], 
                    NeuralNetworks`NetPath["Nodes", "coupledExpSd"], 
                    NeuralNetworks`NetPath["Nodes", "sdEpsilon"], 
                    NeuralNetworks`NetPath["Inputs", "random"], 
                    NeuralNetworks`NetPath["Nodes", "dec"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "imageLoss"], 
                    NeuralNetworks`NetPath["Outputs", "latentLoss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    Association["Output" -> NetDecoder["Image", 
                    Association[
                    "ColorSpace" -> "Grayscale", "MeanImage" -> None, 
                    "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1], 
                    
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "latentLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT], 
                    "imageLoss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    Association[
                    "enc" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 1, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$GroupNumber" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {15, 15}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 15, 15}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {15, 15}, "$OutputSize" -> {8, 8}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {8, 8}, "$OutputSize" -> {9, 9}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {64, 9, 9}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, NeuralNetworks`RealT]],
                     "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]]], "mn" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {8}, "$OutputSize" -> 8, 
                    "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "sd" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{8, 5184}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{8}]], "Parameters" -> 
                    Association["OutputDimensions" -> {8}, "$OutputSize" -> 8,
                     "$InputSize" -> 5184, "$InputDimensions" -> {5184}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{5184}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "coupledExpSd" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[3], 3.}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "sdEpsilon" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Times]], 
                    "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "z" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "1" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], 
                    "2" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "dec" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{25, 8}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{25}]], "Parameters" -> 
                    Association["OutputDimensions" -> {25}, "$OutputSize" -> 
                    25, "$InputSize" -> 8, "$InputDimensions" -> {8}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {25}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{25}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{49, 25}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{49}]], "Parameters" -> 
                    Association["OutputDimensions" -> {49}, "$OutputSize" -> 
                    49, "$InputSize" -> 25, "$InputDimensions" -> {25}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{25}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{49}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Ramp, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Times, 0.3, 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Max, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {49}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{49}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 7, 7}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{49}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 7, 7}, NeuralNetworks`RealT]]],
                     "6" -> Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {2, 2}, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$GroupNumber" -> 1, 
                    "$InputSize" -> {7, 7}, "$OutputSize" -> {12, 12}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 12, 12}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {12, 12}, "$OutputSize" -> {11, 11}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 11, 11}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["DropoutProbability" -> 0.5, "Method" -> 
                    "Dropout"], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]]], "12" -> 
                    Association[
                    "Type" -> "Deconvolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 4, 4}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association["OutputChannels" -> 64, 
                    "KernelSize" -> {4, 4}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {2, 2}, "Interleaving" -> False, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {11, 11}, "$OutputSize" -> {10, 10}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "13" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]]], "14" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{6400}, NeuralNetworks`RealT]]], 
                    "15" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{784, 6400}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{784}]], 
                    "Parameters" -> 
                    Association["OutputDimensions" -> {784}, "$OutputSize" -> 
                    784, "$InputSize" -> 6400, "$InputDimensions" -> {6400}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{6400}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "16" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[LogisticSigmoid], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]]], "17" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {1, 28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{784}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "imageLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "inDec" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "inInput" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, NeuralNetworks`RealT],
                     "2" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}]]], 
                    "$Dimensions" -> {1, 28, 28}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {28, 28}], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{28, 28}, NeuralNetworks`RealT]]], 
                    "5" -> Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{28, 28}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "inDec"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Inputs", "inInput"], 
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}], "latentLoss" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "mn" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT],
                     "sd" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[NeuralNetworks`Private`ScalarSymbol[2] -> {
                    Power, 
                    NeuralNetworks`Private`ScalarSymbol[1], 2.}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[4], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Exp, 
                    NeuralNetworks`Private`ScalarSymbol[2]}, 
                    NeuralNetworks`Private`ScalarSymbol[4] -> {Minus, 
                    NeuralNetworks`Private`ScalarSymbol[3]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, 2., 
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[3] -> {Plus, 1., 
                    NeuralNetworks`Private`ScalarSymbol[2]}]]], 
                    "$Dimensions" -> {8}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Total", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT], "3" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Summation", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]], "1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`Private`ScalarFunctionObject[{
                    NeuralNetworks`Private`ScalarSymbol[1]}, 
                    NeuralNetworks`Private`ScalarSymbol[2], 
                    Association[
                    NeuralNetworks`Private`ScalarSymbol[2] -> {Times, -0.5, 
                    NeuralNetworks`Private`ScalarSymbol[1]}]]], 
                    "$Dimensions" -> {}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "mn"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "sd"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "2", "Inputs", "3"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}]]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{"\"random\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"8\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"latentLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}, {"", "", "", "", 
                    StyleBox[
                    TemplateBox[{"\"imageLoss\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    ImageSizeCache -> {
                    296., {34.521240234375, 40.978759765625}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8040076130158377`*^9, 3.80400774982833*^9, {3.80400781198059*^9, 
   3.804007825804325*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"6ba55c29-640b-4016-9650-c665588d8cfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"GaussianImage", ",", "CoupledImage"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "initial", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"initial", " ", "=", " ", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"CoupledNormalDistribution", "[", 
       RowBox[{"0", ",", "1", ",", "\[Kappa]Dist"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"45", ",", "nlatent"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"initial", " ", "=", " ", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "nlatent"}], "}"}]}], "]"}]}], ";"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gaussianddecc", " ", "=", " ", 
   RowBox[{"NetExtract", "[", 
    RowBox[{"trainedGaussianVAE", ",", " ", "\"\<dec\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coupleddecc", " ", "=", " ", 
   RowBox[{"NetExtract", "[", 
    RowBox[{"trainedCoupledVAE", ",", " ", "\"\<dec\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GaussianImage", " ", "=", " ", 
   RowBox[{"Gaussianddecc", "[", "initial", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoupledImage", "==", " ", 
   RowBox[{"Coupleddecc", "[", "initial", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"NetDecoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Image\>\"", ",", " ", "\"\<Grayscale\>\""}], "}"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Magnify", "[", 
  RowBox[{
   RowBox[{"a", "[", "GaussianImage", "]"}], ",", "2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Magnify", "[", 
  RowBox[{
   RowBox[{"a", "[", "CoupledImage", "]"}], ",", "2"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.804007860195999*^9, 3.8040079875301456`*^9}, {
   3.804008019450433*^9, 3.804008023307918*^9}, {3.8040081426256657`*^9, 
   3.804008172973316*^9}, 3.804008310072299*^9, {3.804008356540656*^9, 
   3.804008365066764*^9}},ExpressionUUID->"a5fc40dd-19de-48db-a9fa-\
6ea10c02e2bc"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
zvY2anH8Qdf9CxCbD8o=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
9asTz72a/XMG77PdaPf9F7//BvjLgyM=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1WAlYT2kXvxhEZmRfPnJtY/n0GBRZ4tqGR5aKscc1lrFvIWO9Y5mIQULD
WK58pkLDkF1cS4kmy2TJElfUFEVFiajPnN9Pz/PvPO923vM7+3vrfz/DZ0JJ
RVH8HD798xnj33X27DE/Dizz72D8mKltXcf/u1iHv09/esbrV10+UWv0G6H6
6begjV8JtXtgXdtUALozH/NXuf9nrufinB2AefM11zuCGmVx3tiM89ZJUHM+
1rVmOG/tIT937kvLwbm2GCtfUL4gnFPLUp5sjJUgrCtT87DvEeUIwlg7yPEg
jO1X5DuN8lXBvDGG68+4PzKH41zsX5kFfrUx1gMgt7qUctfm/fexrjbKxvnd
HHuR/yHMKyHUXybOq2mgxg5QfT/XnxKvJ86r96nHUPIjTuMBqPkj8c3lfBPq
Jwx4TK9HkDcnA/eEE499D7TgGmh0Js49fgE+KU9xv3Ef8/FJ4PccfqO3hj4M
Bfdpq6Bf5Tj0Zm2HXu3WmLeOU34PUGsi9ZcK+bVt4GfOop0LiaM8/eYE/U4F
f7VBMu5ffwp0UBnwvxHwUvjFXBaqby4Wqp7vhvti6oOf7wnsS4jFepkZ4O96
E/f6A7eZ9RD0LuOoPuRRs+lvNYlnPPRq76UdQ2ifhsRTRLqS+nChXX+lv61O
ZVzdBf8Lt0QupaBJlozTV70Q+RfsFKqezcwQ3DNbPJd95Q7JvHLlgYz1jzFY
r/ZCxmazMsLHzhkofM2HYyC/vhr6K4wBrfQP44dyub7DeDnwKwPhV+o5+lcy
42ElcY9lPHegXzrBX4z+x7DPnIdzPdMyhXr7Qk6fBenC1zsmVcaxk1NkPadQ
qOZ/W6j1RH0i92z69gn81U3mjbxKT0XO6dnCx7jRNwvnYF/jMHBqASmQyw3x
YEdTbp12yQZOeyGofhHrZgvaXSfed9y3l3n08W7gPL9C7rPjNog9TI+eon87
sUhw2TMcRE47cKTIbzjGPpJ7Kjg/EPmaFN8R+bpcTJT5+CM35d6pulCz78lk
mS/0Eb5WyB+wa+woyJt7A3RnCuV6Bvm3FjJ+mH9TmF9ckZ/UrczTDsy/hYzj
OOjJiEmFP77cgPu6lxR81uSUdMTFtX9kvvl7walG5AlOs/J6ocq0/YJX9yjx
GH6x/KHsf+N1W/atLrgh9/Tbe0vGvwwRu6rf7YefnB0B+dwuQa4ByEdqEuQ0
HD/AruHwV412VIKZn84wTvcxb/l9hD6mIs9Zs1chH6wJBb7/3ha/NP/2A674
Zmki/64I+GdDTeaVXq1kn5a0XKi1LBnxNnge/HrnFfip03HBZY2c/LfQCg1E
D5pPaeA7yLwU+CfsduQO7LCH9aM5cJnt6acerBN9aK8ixJ1iIn9rjYHP2EN/
6B+OuK+dKHbThrYUuyl5DiKn0iIcchelwq8SsiDXoWLRh1ViEeyf0hr3L8oG
vxuZsl8tc0Dsqe/2Fr81jgwXP1W/7wg+1TOQj7cHQu6Es5ArMR38othHlKbd
dnK8jH3JYeb/O+8xjoc/W37I00aYN+w3Kg845gcLPq3DVuTNs+Vk3XIKA462
lcHny3WQ51gc+EdA79qcbeCb103ktzr1ljhVgvwkPs061RDH6klZ1wa8Bb6C
6TgXDDsq1L+WTj/1hp30NrRbKdpxG/udWOYdB+A0vkbeNCLaQd9vWwke4+p4
5H3nlrj3+mDIP2QHzm+PBr8diRg3YLx0uQqa4QX57sF+tlee2Mtq1CNJxpef
ip9rVyeJ/Y3FDpDTbSj4bZiI8QbozQpDnjHqom5YPdjXNKU9qzH+6rDOH2T9
yN0Iee6cknsUl3Mij6FNE73q/h1gr6UtwMfFwL29N4N/y0DmvUDGsTuoM+S2
f0qQuDUdM5Nht0Lk2QHV4f+RjvCLv1qB73od/FZ2BZ8I6MvyAT67F+tBGPEM
AVXes995zr4gBfv14E2Ydx4EPT70QrzcG4k6/V35LNhrllAzJA3jITtQ90NC
4H+bHiGOnM7IOS1kH3Ct/UH80m50WOLPfLaLeeUo8tfdPOhhaXPIG1yAODmM
eLRW/g/ypaDv0S+zLz1KupH1ripwG7fYxy27Aj34+cF+xbdxj2es6FVvPP+Z
jG92FzntbEvypRFZQaj6rA/y5+Idsq5NX4T8GjcTdfxJlOBRQu+jPkzwFrsp
g1uiXl7rhn4h/rzoxa5bC3GgAa9+dRDq8IRX8J/sI7BTafb5n+1Xn3WwFnE6
sI+OvAh9VF4Me74rgTw4dwrqWVhTkUtrl39d9s9rhLjZ5y5ya9XzYZe7q0Ru
1alJEuKglJzT23W+Kriq1JHz1kLtnsyXb4R+JtVT9KO7ucFPHNpL3NsD6wle
9aUh1DgRhD7Hl3mnx3Pg+YF5ZSJx+fFdso34dqOOKn0RT9abo4i75Akip77W
/5LsD6scJesJiaeEdsq/KPfV/Ebkt0uejJF9v+25LPMuTy/IeadRsk8P2BQv
NGO5xJ92IhN9XPQC0PWdxe6K69e4/80R1lEd+e2vPvD74oXAsxH4TL5jjQjG
3Wn201nAaf58CHRUOawvrSn+Yrvvlz5D2/yfY0L9M/+Ufe67ooWf89YLiON4
wWVOBQ510tNY6Hc46OoKcYJrdD/0ZxV7iZ1tr5G20AOlkGfGDgXO2ewfXm8X
u5rpeYhfl/7A+wvrxxv2a4tYD2bwfZrPPBPE/rtWEHA1vIg8oVRBn+J2Qeqv
HXHltMzna8dxX4HgMewqgt8adk3k1i95yH6tZxfpT7Rfq93H+Tmga7MFj+WT
LziUolky1ludFH81u/qDOpwTf9fKbZZ1w3cx9g+fBj++OBVyFuKdaQ/n+4Dv
WH0u38UOpANnYn3mEuSrbr7wh2c25NkzGfKP8EgQesgFfWNukujdiLmBfVnr
pI5ZabNE32pqlIyVUh/EH8xWzuh3OnwhdtDncd1/I/pVR0+p98aKDOnbzIDy
6M+LPQWvOamG5AN1fjvE44zP71P22Uvop/G0n8J3ZIcFnHfF/IuRiOPM8Yjz
snsh74EAxEdmR/TZi4aj34zfjPfey7qoKx8GIz+5N8F753ZV5PfuPqBF85Gf
z46GHr9BX6rWjBI9Ko+mCDXyX90VXLPnoJ7MmCv3W97R4BvN+n6cVGU9DCLe
L9mHDo1nXgnHuPcHvLMXoA4pFfAus7ouwHx/+L8y5xTGrbYgHhLRt1pV49D/
tIjBPvf3GLvWwr3hI7HvUifY4eMy9N2OW+DXznhXKIMs8Qtz70L0bysPo09M
jQSfa6zfiaTt+b2kBvuZRfTbeshD9iO8H7Q45BujEuqM3vwP+jX7pBGwtzau
L/QSjnewvWYpxi+WY+zPPJ5F/18Caq9tDJozD36ypyTi3ckRdeWr23gXvp8N
f4l5CLtdf4P9HfmeY7xZoXzvVSItZty1pp/+DjtqH/FdQgnld6EQvAeVV+iT
7bjzsP+yrRiHrAK9ib5V9b2Oc/vZh4ZeYB2mX3SNAo3agvs8cmDH5sPQV19/
K32EVRHvSz0iBO+Xkp7wx8UJ4HuFOF5AbovfG80Y9pufv2OOJT5+xzGZV802
zEOR/O5Uj/ZOZ31x4ffAZXiP6RW5/o75bN0D0N+hD+XoZaxXB247HP2E9RX9
oJYf+hO7BfqVuzuR5zqXwr5L0Ifxlt8d1/DdepNxN4l1PJTfzyrw+4QbcSzl
ueYcH4PcWhLxHua7agzz0UyeH4x3lR3J97GOsRKI/eZR9u2GjfngNJzPZhw8
sTDe8hPWz07BuMZgyhWK8+VZx5tQzjbEx+/U1j7W8yqs5xa/A+Yz/lzZ38TT
vhOZd2YS1xXIra8uAt8NxViPBzUyQLVkUEvnehdQ1RPnTCeeDwO1cvGdQf0N
332UFbS7Bb/Wz9D/9vO9yu+ZRk9+/8ulvnfTz6pAXrUp/ZLxafennQJJx7Ef
P0K9BJOfP+O5Lt+NPKf2A189DvLaD2BPtQtwKOPYD8awH86k3oex72A8aL6U
px2/d0VQnlHv6J98x84j3lP83hL0Sc7/A1DSuxA=
       "], {{0, 28}, {28, 0}}, {0., 
       1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtcj2cbf9ih0Duv00ykW+O1YU5t1oSeba/3xcaoHBNPaCaHkdnB8UG9
G8Y0wxvbPM1EkVQOzakn6ueU47Acao9DK6OipkiYfb9Xf8znk+tz/e77vu7r
e53vp9WYDwPfr61p2nT3J/8Fhn3yZmRk2GdBz/7FhIdN6vZq+F+LLeTvyT/r
zh+lAU+ocbkCVG9TCaqNLePv08pBrZH3uD6RvJ3EdXsJ9xtjhV6Q9Rnk7T3c
Z1aI3Dq8T3WV9Udc1+cK/xGp6kRqxlIvY6f8nkmqJ4pe7SjP3nkX1FlHauXx
d2se9xnbZb0W5Tkp5FU2eduL+NQq7lcLeN7sLvtN8lozORcl9xtcV4u4rjev
/Js++g9i32Dhk7nfvMv7zLe57vQjr/UVfR4I3jril5Vi/01yvppUmyL4G1G+
1lV+/0rsto3nnGVcN14ltV8Xu18sIn/iDvdtqiIfI/rklpAPF77qAXFvJzUS
uV8lVfP3DaSqlshZJHatvk8+gXYzHwmeBLFvlOgXKH5/htQZIeulgrOx0P+L
3XMk7gLFL+ZN6vm8w9+f+Y7yun5WAj7ybjH0fPAMf1/Zl3rnLuA90UvIH17D
9fAcyrlOuWq0+MeivexkwVMqdqhNqtUV/4q/DYkPp5vYY434oVziyFPkrhK7
eEm+7OK6HlXAdf/zlFNEPPaP3r/jfP0ThaAdgopw35LGv2H91pXrkNPFhXVt
f1/uXxF9EzR8xy38vi8f8lToAOrtMZP3bU8kHXGNtKnE94b7f/OzKf6wYiS/
E0qJO1n2x8v+JNpN/4/4rz7jS+tygucLQ0gHDyziui/0N5J8SG+F5uO+/3b4
GXTW7NOQvzkUVG/jdhbnKxMvQO4hrys4p9s474Sm3wC95o04UFt9gNv0H0Y9
VjFunErmh9aa8awto/7aXsnzEMnnLpJvs4WvictYiecOYodZcVwfmYZ7jS9c
1KPUG34xPk91gOPrhWfAT0k+BNrb/wDohrz9oFtezsB9sff2YH9SGxtyzjpH
gaPPbuC2QlYXQI8jfvR3/h3inRlF+/pkU69zxeTjmM92W6kLSuL2D6kr5+g3
65DEqcct+n0w7aWPrst9b77LeHr3IHA5q7Kugq+algv6xeEcyF0+NRvy6lzN
xPled4FHb7J0F9Yjdmyhf5Yn4NyzndJw300d+63QaPhfXciAfDsk+xbxldGf
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
le/YB+UdNEP81vIJ/yeLM4or
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxdWHlYV9UWPTlVzkMhpsUVn4hKKkY+Nc3rAJKZKFrZM/QKCKaGT9AKHtVN
yBwyLc3IHC6UGj0sJFIEhwuCKKgoDiFDXhREEUyzcI5Xa+3+6Pl9uL99fufs
u9eez+kePD8wrIlSKuqhP/4LnPnmyMjImdGTW/zJzJo5b5DPrD9/7CZ/f/yz
N1//ecSfdFkDqNGLvB77M9d9r4E6625w/fFfQK2nuc/5hrw55Teer5D963le
+5bUWfgr+en1oKqA55wj5O0c4afyvD5c6PMibx6/Z2mU4xiUazXI75eon3WB
cvQXuG71FnwTeU4/Sz311Tyvt+O6UcTz5kjqY31IOaozqZFEeVq/K5S3oI77
H+F5tYryzG2UY3vxnO3K7xsf8rvqNKmtRJ9RYo+7Yv8T5M1csVcB5ak9ol9L
8cs+wXn2Ktc7iRx/0Ufsp5WStzyoh+rIdcOP56x2p3h+SDVpodino3xn4CXa
N/OW+OU+5SwldaLvUc528vYYUmPaXcrbfJt88zvU54zYfaDgvUH9zJPiR4+/
4kT0DJB4y6P+2g6Jg3rKUTdpF22A+Lu+knzFD6QX2lLOmH9chfy+RfXcv4/8
QW/K6b2a++3D1MPvAtcTqKd6lDjNKsH77U3S3aRmK+K21gvOoAbJC4mvLRLP
owXfIqEjJc7uSzx48pwmcW7cpl+dtGOU3zme/KrJdaDT3rmM8/tmVMP+SUsu
4PyBpyvx/dOtqnBuSFAN+JWpVyD3ehXsYETdhR2sJpnUN/SIxP9J6uVKe9od
JJ9fZBzYPehXtfzW3+JcTZB4n1EndiBu05a83S/5I3libaO9zU87cX9hPnCp
7Kk/gc8bWw67bL79I/gjEccg53hJDuT0WQ9qzfkkF/S2fRjff9nAfuMBd+B3
yi9fwvmhmcBtztkI3GZ4JL9/rYDfTxUcbSRfb0ocryVee5Ho35n6Oz5SF3dK
/o+Vulgncf7cx1wfXQpc9tQ150GHbTsN+c7yI9Azo+cu7Hc9/jXW77UGtbcG
JuP87We3AF+Plt+Ajv5iB/Z1jTmA883Gn8F6s8cvAsfj5fCzFbcIOI0Ok6h3
EHEam5jv6j3Gr4pk/JrDJS+PSN2cIHHqy3qhJV8m7c44MT3WQ772Ziy+q8IL
oIf66Cb9ErAxBfbwbZqE/W43kmjfEOBxQiZ8i++tOLkVfHjoV5A3dqgFuvV1
rkf5HYQ+h3wRD/a5r4lzwj7gVGm3GMftP6F+G/fTD4GMQ2se/efcpF+dcVLn
OkldlfxTCfSvcbGcv59Kgt+0eV8gr9TK5GL8Pm1KJuRW//o96LDMTPq3P+JQ
CymHX635AUXgWyQeZ9x5FoC+cz6Lft+0h3H2zCGcH1pzFvs/aos4MeZNRn4b
l/OYrztmUL/ao9TvUAXpTOlHX0idfpl47CLBuVbqz0Gp8y2434hifGgTK4HP
2R0G+5r5hwqx3jbhFPQbeqEC8pbnoK4Y7dfC/sZ3n6GuqNRXkF+G2ynwVu9s
7LPfSzmJ9eGRwG/X9yL9fD/ltd9OP67uATtb9ceZl6s+oz/cyqhnuuALlrzb
JHPHDOmPFVJ39jGenQj2LePQBrGPjjgxXStYH0f4oi7oc72htxXVgnVhaC2o
1YF9wnpvDuNqTjKo/lgd1p2xu2vB33I/BxxHPfMh138p89GqQB6Ybb6EH9XO
UNpn8TV+Z9Eb1HPsCfpp2P/15TzBWSZzxGBSbbjUF138euJT0rhRjA8XF8SL
5dYS9jSu+lL/FwZIn/Ug3TuGcmKe4vmYBto9MRJyVMwa6Ou0mIc65XTttB9y
pnsiXvWf8lFn1avPOdBvVzn2m8kNxLeikf21azH1/28t8cVL3f+NOA2pk2aW
9JdX6WfdReqvdoj8yiepn/ueesYV645T/jaoWvuw2CuS+1ovpb9CokHt9M7c
n7cC9rGD1iI+nXfCjmK/3gH56JxtlYHfF3yCfDQ2ecF/Wnxrxue9IZTzBOup
eU7is/9PpO2Jy95KP5kPCo4I6RMv3ZD+KHU39bz0efpDa3DjuSHdSWeX0n/L
JgK3PqsGcax7ZSH+zPtZjOvXW5HvOxxxbVRvYB6PDIaf7A++gf/MhtHp0N/e
jbxUGa9jv7l4Fvtuehb9nzCV+g47QLu2YJ0xt0n8pckcVifz8TLJQ1Pm+WCZ
58scrvvplBfQi3xz+k/fWMx82tUa+jtxJutJ77msCwmpVeQz6K9pKaX43vtd
WFeqliDvVPBbNmjSJFBzyROcF/q3Rr7rHv0gXzVNg73svmLn+ETq60I/mCGS
b9HSvxPpJzufftSWye8bxJ+Nkr9XQokrfB39taCe/T58GfJCuRUjT4zBbaGP
UfIB+5j3r8gv7eM7J4CvMob00fl52JfeJZfx1Ax1xR54Np953Ynzw/TtqKNq
eSZxrgliHi57mXnyb5mrFuRRvwdr6C9Pict8uR+MFX91k3k8knFtVuaJv7vx
3NzujMMNXrCn4TMOuFRQMfQxj/lCf2tdIOe0bqHod87Do9nfsjtyLii8S395
x2dDzpAS9HcrLhp9U5/R8zjj4WAJ9N9YCb87ne8gDlSbcchjbaTE0bpw+uNJ
qZ/uMj+7yL2iXqgmc2kvzvdafRJpShHzumnzWsZ1Oeq62Wcc+rfa4gX9rfGr
kE+6vwf8o8dcA3XuL8xlnL0KfMqlkH57cRN+N5/KwboxsYw07xlQPedz4FaD
LwKv0uNPM1/zGfcrJiFetWP1xJnOvmb3kv6XIfeeFcw7bQTxO5nniP+Fidy/
pifzbHw5+99jS5A/VmkbfN+oSaIfcv2BU9/hoC46NxYyDq+/C39pAx5BHDqH
m4Na/r8Qz6VAnNdc92Kf9WLsPny3h5FJ//fcDX68F/abOVmYc8yKLryXRP/O
eO0v/ntO5szm7BvW81JnAmU+a8J6ZHVk3bfOebAOrmiHfDDHu0N/O+1D6lW7
eifo0DPQyznjh3robCjlHOc3A7/b0wemYd3nLu3RLwP6arHp9GNXT9jLcVkP
/6q+wyHP2h6A88ZrLnuxXl4N+2prLnKu8rrD/vys8/d+PlloudST2suC8yL9
uGSx1JtdnAN9VsJudqsHGIdl+9G3rFsZmKOdOYd5XygMBm+FTsE9QW88mQq9
Zo+BH1TCDdQRJ3YL8lWFtYRc485yzi33N7MONTZlPk/xZzwkBuCc6TIIc7AV
thP3Tr2umPeM3vJ+EiZ9olD4/8g8OpD+UzWlxLv3K+IdkAJ8Ts/iMuzPD+Gc
2L0/7KsnT0dftsJTBc/s7fg9JQ7zt/5oCuyurXqf+XS9B+qGPbUG9Un7JQF1
w/JuRF7ZGQVY14+6g5qemazH+78CfmPt16g3dsLbrKuDZhJHrMzNb8h9oUT6
YKPMYwEyx4ypIv5z0h/avsS55I7MH27VnJt8kzlf971OP2xJRr20/jWf9j54
AOt2BOdJFbsNeqpnX4HdVdwJ1sEugZxHn2wkn5vDeEn6J/vBqHj204BZoKa5
mXWgWRDr+Xn2BWew3PeiZU5ZKvF5TOa2+XI/bsn6aT8l80+n74n/IR/Sm/nM
5zU/8H4W3Rb62a7Z0EefHkY9G4toj+LhnF9eayN9sw/nuqhY1r2u5ZzjjuUw
zkb1573lXgDrmt2E9vXO4P6tv3Pf83xfsGdfFf/IXPad9D0l/byb4AqVufuw
vCsFy32/UOpPlryP9rskcx3xW3Fp3N+O7zPmGMa1NoD1V72UTX2O9eH5699R
7u3d3J/C+47zYBz5UWFix1yul5+XelfC9SvkbSXvYGHEp/zlXfSv96UowdVe
+uEIiddsod7yPrtY8tVd/D5I5lMl738FvA/bpsyrMvepdM69dt0S0qZZXJ8r
88NxmYfjRK9S1jdrLnnjosyNEfLOZQjtxb5mn5d7XYW8dwZKv/tI8PURf8i7
ixkh88skeb94THCOkP0R8p4zRd4p8/mepyp/5/4OjaRPNEof4rqZyHcR/XO5
X77Lc84eytF95FwZ9xtFfAe0F5Iab8n7SYK8P/wo9qsWvY/K/bxE7oHvS33J
k3fci/I+OF78GCfyJomcv96L/SRPE6QOxcs84Crvbw/IuQ/E7lVijzny/vMl
9bd2ip0TRZ+Wkifybm2OkHfRNJEj7832Q/JOG0JeDZE5pYH7rcXyHhPzB/8/
Gfd7Hw==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1mAlcV9USx69LuJSZaRppeu3lSoZLrmlcw0x7pqV87CVmFxCX1FIBEdyu
uGU9t1Irt64vFSvAfUGpLijkvqAp4HZzQ9REcSnF7Nl8Jz6fP/OZc885M3Nm
5jdzTv3Ij3oPKmsYRkzFh/96R8R3Hj06IqFPwN9MdMTwNi9F//2xjv4e/rmj
i4pDHlJvw2WhVirUHnKG8ToXoRWvQgvzhLpxZ4X6Fy8w/zOol8d6o+d59tvF
PHPbOej1QqHO4YOsq4t8J6aA9WVOMC+CfcxWyDfTfmX+R+zrjYP3a8P7jfOR
9+ZJ5p1DrvWkfg9gvhtwjfGf4J0w5LmV4I0nT8E76GO6UGMf9lmLfmE/1cPf
iz3+Nni7KeutWio/UedVh/f6ql01L0FXcM7+X5yPU1HlrdDzO4JcsyXr3Gjd
7xPOxY3Uc3mDfYwQxo1DpxmfwbjVBr2cScj1SrHbLtrO9w74w4m/on7kHL0d
2dDcFXw/dljP7RhyvlD9L11Hz7A/oMtL0a+B8g1vs8/1I4z3Vjlb8Zv3O3Y6
X2Of2RTeuMC5WFt8vm/ELvMzHW9bqPLY1z+FPq6Pnkb0PuzscfuazHv+U6HW
ikyhdvk0+Oo3hfrd32T+9njkla5ETv31yDm0G1qR8zRzkO8G/w4txk57YTHr
Nuv3bhpX7fCP/x72O2U1zoZgjz9T4zJT4/F91tt39/K962b2OYr+RnLOVfIm
5orQCd2FmltWXJZ5NdsLNW5uFWp2/FC++0WtWBfcHvqq8Rt56wtvdt4ivPvf
QZxPlwj0Or4NugT9rMma3xHY5wVpfDbUfLuBfVasxuVMjbu++eovzZsZ2OeM
fJ/9Yjagx+0Z6L96/iXZJzeqUOR8f++C0CcyZNzu8z++L91bJPTqMOHNGytl
vlX+vPBOTKp8d4dvEupHLUVOeJLY6/9YlzhJn41eUZpft4+j3yL0toPAQ2cP
eGiX1bi19BwWEK92LvFi7G4M/3gE51w8VeQbZYPPi369Lp8RvUa3/1X2fX6N
jLt/TsfOE7+fk/ntA8/KPtVy4OOjhLovdJRx89Z04a2Wi4WaUUtlvduvBfK8
t8T/RsBE/NpC/ZgPLnp9wDfL0roQp/6ceErjVv20MR3+CQd+6FecW9gW2d9+
cSHn3qi/2OHvayL6OMHjfNn3lyair9N7InaHXTom84sO/kJe7zog82JeyZX1
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
       "], {{0, 28}, {28, 0}}, {0., 
       1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
5X9oSoRv
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHlYV1UavgmSM6PjQu6aR3LBIbXSBxWRbi5kpYJoLuXURUVLMxWdCnK5
pShQaSrihnoNBZtUTIlIUS9gsgkIgksGXgTEFdHcQxt732/+iOf58T3n3HO+
873ffk7nybODpjXQNG1eoyf/goI/fiU0NDhsjNufg5DgD7z7hvz5sYP8nvw5
2sUbLz+hduRNUH1dBaiafYn0yAVQq3sV6cNKzvudBTXf4thJvUY+IedAtXPc
ryfVgBofCp93yjg/hucYieTjBMn+ng7p89U8x5Vja8Rlnrdd5KjgWBVybH8o
40cl5O8n8hdQPnNgOeVayXW2xXlrGakRwO9OS/Iz+wvdTfn1EOpJm8mxduk0
16/gOuMx96sI4RvIc/QN58lnJnE7SzlvNT4jfE5x3wLytU3R2xJSLU/0VnGV
fEKoF2eW6Gc/5VJ9ha7+lfsm8FxjlsgbQj7qGdGLv8jVkvpV790g3X1P7F/H
cx6QWvMecP38O5RzJql+mevNZH43rt/i/LjbpMOvc3+p+M2M7dyfSTn1PsSl
51CPznOC7zmRc9UVwU35zVz6ibmBfqPFkepvEI9VIPjX7uU5I4dz/FtMLeTb
6Q+q1T66Dv5N00jfngaqdbJBnbzeHEd71xKHB+VZs5nyuZ8k38ATPL9Q7JQs
dq4hDrspqVkj/vM7/d7cKn78zSWJG8qt3qY9nMuyfyn1ph2yeU76EshjtSqm
3NseX8X3qccuYv77yRWgux6dxX7X/EKsi56di3URB3Ogh8pnMa+1nVkKvg12
VUGuM/cuYX2rgGuMy1ScY3SpJt3xHOXOySSOfImnJNrJSSYu/TTtoaIkHrZQ
L+rEL/ST/9Av1Y5dHG8bAP6W5xDgMTaU1GD8QsMLOCem8UmMY1qk4zz3UftB
O+1LwLnj3o8HHVq3BecfHmqBz9CKXdgXOYr7LhaVgK7pT76B83CevqAJ7b7g
ecpfspx4XIjLGEI89hjiMCza0+oq/nu4kHh8xY/dsrmubBlxVW+FPvXS/Mug
lanV+L6v2xnYwet6Bsaxa7/HOHLCNoy7+XyHcw+5Yl7vlfotxpHttoNOqyEd
7PMDzkmvPgZcOV6nwGfGfviFERFCP1k8gnZr8C3lf8D4UafuU97RUg/6SX5u
wrG+XvKhG/Oekfcz988qhj+qqo9A7ZtF9J+q5Q7Oe+tAMcb9GmXQn/+eivkt
izMx9t14AuO3l8MuWljTPJyT3uUQzq0fnIbxhT02zlvbC/t0r13ga94PgN9a
rVdCv5blzXh5iXGqTZa87iH5zKmTfCB5eC790PmYuMz1Uv/cUqiH+In8nt+D
eePlK4wLl8M4V7U7SfnfjAJVXV2KoB//weew/42+WOfo42AHNajkPL57daT8
3SuPA0+brALQZl7gYzfffpZ+0plx3fYGzrXTDjL+u9G/nFFSnz6jn6ptksdb
ELe1mvlSVTE/6e9JvixjHDpXFxD3mGTyfX0gqNPBA35qHO9eBnx53X7B919z
ykHDpjFfbHdHnNqvjOV48STgNpPGw556+FfQh3az+DRo1xvg41R5IE/p1ZXw
Fz37IeNDi2Ce9lxIP2sreTaN9cbMkD6gUvqK2nza6Q3it4OI3/mD8WiNzOP6
nRzbPa/QjiNcrmDdHR15wLr1O3DpN+bDPqq+GLitE+Nph7oJsI8xdu5RzC/t
hDgzIpmXjMvPAp+9/h/Yr7/YAvqwC7xxjtluDvN1XDnxDehE+dZ9JTj+n0co
v2ZJ/7CG9UC/XkQ75hO31SiJ+3bmEFct+wjz/Wngb1b5w37K/xHiUL2+l3n+
1IuoA07eWMSjlXN6L/3jqW9Ak15H3lRbeyCf6D3aM960JPipUeAKuzo/uUJv
esdM2F+7ewz4zAYtKM/FCvrTO69yHCz26il5v0jsOL6WeH3YNxqJ9FtjjfQr
MaKXIOI37wcz3yz1Y57RM5lfmn15BN+zJidhfZ8E4hiZHYv54w9Xg++B5zdB
/sgI4Lbb9UjB/LKUZMhxNZj5xggDXjsrG/5qpqYyHpZ0ZZ57+gHxJcymvI+L
Kd9AyR8npb/pS5xaGeu8WUg/1JtIH/PDXe73LaBd+4dDj3bgCuhX7ZsHP1Ox
0QfBp+AL1odRUah/1pHRqA+qQRBwaEYJ5X91K+q89VMW7Ox8Ek87X9gEO1uj
bmFslD71M8Y+k+Dn2soA1Amzly/1PHoK5XrnnFDWPytN+rQS4jT8BPdAqf+9
pe+5y/7PDpd6Mb+cflIXx/jvXQc9q3/vycLYNQ14nUHDOP/NAcSd7fXur5Dv
6FHoxaiOQf00S6NYZzzdUe+M/tNRX4yko4nYv6CQdm7zPnDq012w3shYzXx6
kvGoR0pe9JW+y6T/OcXsX+wJ4qcbpS6Oo12dXtIHmF4c942H/hz3DaxLWgDj
bsodxI1Ka4w84Qz5HHLY/vmV4NciDPvs3ffYZw3qRP0vasg+tOE5xJnx/TDo
QfUJgL+rlj3QDxjXomjPWB31wyr5ink1pxXlfpX13oySuvcv9jPaaOlHWxO3
1op51Pr9CHEP/Yy4Pu1C+ULbM69NyqXcjQLhN075FeAyxsxn3Tu5BHVLKymG
nlUHT/J3CaOf7Pyc57gN4fk9RzMve9+E3NqDheiLnJDe8GfLe+ZurGt6EX2c
4dka+tMrv6P9XJgPtQ1yD/qM1MgmHi2U9U7vI32otYK4mm2kfrc9A39S4UOR
v+2M+bRTwl7kd5UXyvjoGgzc1gtXkNetAt4L7PU/kt7aJ/mY+lYBnFcezYnz
Wgj7hzfbw/+N8/9EX2PsHI84tqI7Hsa6yHqHcfi1xAvx6c2Y5x3PS9KHyX2x
nvGpBsg9Yg77F1UTSj/vNxH1Tavoz/wd6Ik+S2+ez3uB/7fwU6PtAOBTqjP2
mWO7SZ3y4blRc0irWLesjFDifUg5Va9w2M/ZNIPnrF+4B1RFA58zZnk6cdI/
rJi2tPuOl2in28RhF7MOmKskviZJHx51gPNXMzjfkvGhag34nXWpMfuxDyYj
X+ptQxgni+KzKV8icKqFj3lPGrmM94y07oyXrNugRpFGvUV40B8zahB3dvep
5F+RiDpjVT6zGfyib+IeYm6Zw/5t4xbUC3v2H4IvnLgipH+ukz77Pu3l1DEO
9eNf8Hv/ZH53Arm/y136u/dg2MvcP/y/mB8Vv4N4pkMes2LKT1g3OwN5X5/R
m/30d4dYv+tfgx703RWgjusw3jsW30H9U35zNmK86NNVoHdzca8yOz+En9ot
E6i36b1Z/+Yyv6iG6cThy37FWCh2yxYaK/W8+hDX3WU9dw5s5fcEX8STvpb9
oR1oIu5V2nrg0+8lxYHGtUcd12YNjyH/8nXgM8RjLeYvxlL+Zw+wn1ncBPYx
Ysu/BM0uxT7DvYj3qKml6Of00ibo9/RVIxjXsTr90WxIOTcdo31KJW/OkPea
bRJ3P0o9/Jh13Bkg9+FMeacJ9Sdt/RH73Cx33j/b1cBfjDVrUymPiTyn9X0T
/YvVdPMarF/w2kp8r0uGXcx3C9nPzPgZuI2U6/A/fdE/YX/D/x77UZ9c5DUr
PYX30NNR1PfSRMp35iBxzWFetOPlPcum3LoP49B2kXccd+YbJ1pw/sG+3JF+
zTofQfqhTr+degTxY0Z34j3ob26sv0MzEK/63XjWxS2n6dfds1GnjVkvo6/T
th7GOs1i3THbnGLfvpv3Ti0ui+eb0mclSp54JO+IrnL/e1reZVZJnYuQPjRc
6ri8gxpTpf4FyPubG/WhTXpIukneu9aJX59n32AHxVNfFSsk37PO2Wf7kW99
R36/xzxglbBfVAnHua6NvCvIe54ZyrGWKfo9xT7RqvyN9Ki8HxbKO+xVsVu8
3PsOyPvSMLkf7mT9s+OEf1kpz98j+L1oXzOX73fqorzjBUrfk8Jztcby7pdN
+uTiwn3u8k57ivydCbxn6x+Jvt57xPMb1XPdBb43qBTqVV3j2Bwi97eAv95b
raZ/zSPWTdpJv017GrnyTthS/HQi86w2Tuqkn/hDGOUx+sh7xxTq1XSRd89F
HNuBlMP4mvcP51O5j6VIP7uZ67VQym8vJz5dkRqDH4gehN9Z2tseL/2lX5HI
J/e3H8VvZ8l7tLwvaZ/Qjsph3nF2yHthK+IxGwrOfuRr1XOdbsm4HeVV0vep
G9xv5Un9mU982nFStU/sVSbvqBOlr/9F3gvmUv+av8RJY3k/6iB98RJ5d+4l
74KD5N2hOe2pjZD3zfgn5/8Pys9jJA==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
sI8Vyvx+ku+mc9g/R76k/wcYAZwj
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 
       28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtcj2cbf+yTYbID2ebQekYRswNv8lqbPebUa0Ix5PR52sJGhfBS2nqQ
s8iEcupxfF8khAjxZJRzkjmkeNKJUjkUG169dn2/+2N9Pr+uz3U/93Xd1/m6
7vvD7yb6jX1NUZQp9V/98wuY3j00NCBs0Ot/ImMCgjw9xvz5sSV/r/7MTr9X
ffUKqjOeCzTWPxFop2LdWPhUoPK8GvumA2rTa/B9/DN8P/WHQPP0Y9AHk88/
wMfuhv2aC3ClFLjdB3RaS543CecZQfiujnwEWAZ+Rg2g9Qb5dsZ+MwtQy6jE
egLk0ueDjxJCucuxTx0Mej33AfhOoR1mUe61oLMmgE7Ph5z6fynnlvvgm1KB
fV3ugX47+KlzIYfyrAr4deih1QJasZDDcoG91Cjwt4op7+u0bxbPteAfZRTt
Mgr0eh71bkU/XaOdN9KuNVi3zz0Ev1rS1d4GHpmH7+Elf4+DQPqnvAz2bVsK
/I6GfX47cV6/jErZPzZYoOaWCvpO2G81eoF9vf4HWFVEesp5APprXWF3LZb2
X0i7u9EvX9MfrzHOrlTRfsCN/vCD5lWO9Z+ysd40H/wSjwF6pVPfcMhjB4nc
ypdHBaoXm4LuwZAKOX9Zf6xP8xNo9RsC+uprkEMrBJ8wyGkOg/30XdR3NeNM
Y5z6EqYwDo/z+2XSj0Bc2V9Bf2UEoHEI/tGTb5BuK/DQEsj1uBf0uOgpcmvB
j+8Kv9KIe7J/mJvg+qXGhbJe6FMgcML82/L926N3hG5TpzI5LzkKfAuhr95t
NaA/7KsPfgk7fwA9tTDkm/oJ8/KveGb+GL8wPmvp12nMx/7EV1wGvmYj7LDm
PZwfFVku6/vTiwRO7pYv66vfvi77Hu64Jvx3T80W/pnzz8j6FL8sgQOdZV1b
5n1WvvfteEH2v3AV/e2ayvsid3I6/Jy/A3J3hB+1lbWQ5yjiWNdZf6IBlQrs
s5xY9+4yf30Yj3fvAM6Cftb8xbBH59wK0BUVy/4e7rly/ureF+WczmGZAmde
PSnrN8cdEv7Lmu0TPDBQ1vWyt2SfkZp2WuRceOGSfC/Nz4R+93+T771dSpH/
DvDTHcilJEE/JRDQeAd6qqdYn7JRr8x85mE56psSg/xTpuK78RL5rjxCPCrP
nsp5ZtA58Y/q3lvsb2+JFznVDc4ip97DOiHw0MRU2Z+UnCjfi9YeFHxHifhT
cXIQPfQ8f7GP8aj3r/J9Xuw5gTk+4mezTU85Vx35GezuSf3G0Y95iFNrE+sI
+5xyFnpZy1G3rQjGazjjukkS8MM/id8Mx+W3hH5tlCV4Wi+RR/+hg+ipOvpK
nJmOF0/Jemk3+Mt5NvSOy5W8093nSN5ZA1IlL7VJSYLrjctyhG9Zmuw3w53g
38n9zgt8/lLywg5EfTY203+O0Eu5zvrdhv0qE/7SOkNP7Tn0sgdw/5UQ6O3b
vUTwsNbHhK55cJqsF9Y7LnKlNb4s6xOni1yWXzTiturbPKHz7moL3wapUkfM
s7+KvZTqAsR7UjXWc4uLodcTiQ9995c473BDOUfJWCHrSgTi1WgA/ewv6S8X
9sM9zLvxjFs/QK018zWe/aXbS9Tz3JPiHytm6DZZv1O2Q+j6uIg+2q5poo+W
Hi3yGe8/Qn66FUj9Ud68IXbXP8pGvRh1HLDpfwSarv4C9XemYN/sQair+8Il
Dkzv9L2CB/0s8aI0PCL21gI4r0xh3YyFv3RnzicdWW8GIj7VeegTVkYm8BY5
yG81QeqE/sIrVvD0LYjPhA3iH/VcFur/rVbSF4yzi1BfB/SXOqht6os+fhL6
WN/vR7y79kRet10DmPE+9D1RJnws56ZiN8VctF7OP3djs/A5uh15/ywHcgZS
P8575h5AazT8ZLYn3qQA+nZKAV3dQcLfavGvLbKvpHSxrI+fjvpXWY14Wrlc
4ksd3l30sfxjBCqxWQL1sXNEH7VOgchv596Dvnt6AG+lAe7wwLl348U+ylxH
4a8td9gk53imr5Bzv+uwX/Yt2I04nAE/6beZX4WcB1sC1wKKsR6KeUxrcRr4
3jT0r65n1grfZldXCp/kz6XPaTsnQq9/nxf57ZQw5JW/F/QZG4h423xRcLOv
gbnMNRbxGTsG/gqKxLn1ML+p07yAvztH+NuNriSJ3dzjIoV+wOydsv5kIOT0
Zn8vp5/Oci7bxzxM5Hzjhvg0t85lHzyN+jWrcq7sr8qW/FMjn6DeHVkC/2z4
GXL3vAW/VLeBnsHRiLt3HyEuM5MAP1mGfSETcE4c4kxrdxXy+B9mvbAQD+YP
O+HPE5PlvAIXsbN5IAvn/g49jF7wm72R+Wezr9dn/PoiP42n66Fn/blSv7SZ
Q2fIvqXDJc+ViHjRT1mC+dg41h3xEfMp+N1PQb3InAV+JydhPdUXepzphvMG
rYM8+2BXIw3zhV17CPsn1Yr/LL84iR/7/d9EDr2mag38NRxy3oN+SgD6ttKH
et6APzVn9vNI9BXtw8nAr4RInBtOEZOEz4w2yQLd20k9sTNfh5zDTMSVQxjo
v+0LfMIqQHsZzuuwFN99vWGPgEL6j/eAYsy71gp8V31TZF6zXOvPQ1wXzRa6
nr9ul++9cZ+xUnnfOoV8M5OYZ668R53kvJ3BeuoOuY344bsF3j0eLnymjJQ5
RN87WPq0fcAJ+WOOAN2T5dCjOgLnzfkFeL3vcF6GjnPGuwO+cR5043lvmD4M
+PoMzOdtG8oco5e2WCjr2aOlfioth0r/1SbyPphI/y1hnp2hnr2I04+qjT6h
R6Nuq026HxF8pccikbO1n4n8Pyxzie3nKn1IP7hN8sRe7Ih4La0H+r6ByL8/
PIGnuKLujG+K/qDVRT7mH0O97RIk/ci61F7qmlHkDns2TNko+jQtw1z0XuZN
kXs049rhLvR4wnzTqW8M/RVO/xXy3pzrDNhlu9RJpX1NvPCPDxM9rTH5Mi8r
29aKHPqZTJlP1I4/op/7rkKf97yFOH42FXFWkoM55u1Zecj3G6C7mSbyaitm
Sv9Wk3TRR7l8L06gkw/85dtS9pvNkedaDN4HNC/WRQ/2vyrOnR1YV8ZBb11n
fe1cF3aZ+Y3EiX3qhcxH2v4vpG7ZTUYniBwVoQeEziMZfs71TBd5EvJkjtY3
1ADPdRC7ayHH0Tej5mJu9Y44KnhBTSry5QL699QCiRMtzV/ordjdsItHBepy
u1PQIxX3eqMR7w2ljMdWvP+9AWil06/nMb+p8ZewnrAbdXzXN8WIvwsyNxh5
7URfo2HiHqF7nIT+f2a41Dk1IVvk1Nd9loS8fCjzj3rlkeih+Fw/LPzmN5A4
MD9vKbh+srPoq34fmSXnfloX8d81E3HdnH0kCPddewH8pv3O95OfnlNvzqNx
fG/ZiDg1D/J7L/rxAe+3tdcwX/gFYd6aMAhzRUqM3GuV+EK555g7p2Iu3nRQ
4taO3I65O7HyquCbHeX+oU30k7jX3XME2qNWS78xFi3DfT+0GeYBBfdauxR6
qK7oH0rjm5BrBv1SzjklGH1AT2Sfc6d+Qxmfzfge54L7v/U983I04zkkDviC
VagbM0+gLjRYiTkmapTMK1a9BwLNrXUwn98fAXkTDNzL+zzE+hewm9o/EXok
50LedXgPsR/z3e8t9A37Y77LteF70mXG4TTKuYJ9vojzy5tcr2Qe/nXv2wU/
2m/jvUMPwb3C7sn3mzjOeYd5b+zHe/8XzPOf+a42rpD7MZdYezkveQHqt3lP
W8D6nct3rS68r0VyDokHP2UI+rOayHveX++jm1kn97KPP+VcncR3w3+yzy8B
P/M65fgRchslvD95Mj+D+b7Riu94QfC37QF7qJMA7akv2Wd53y7geiDt9gG/
fwx6owffUZz4Xraf9olGvplujLNFfAdzYP/ju6nixjk7kvfXS/RTBHDVk3pt
g3+Ms/CHXkD8MfOyOd9Fb1HvUM63R8mP79ZWc9brRuy3B/nu5QNovkV7cN0e
wvhgnKntMPebFfRDT8J1zDO+l5m3+N7Nd3MlivL44H1Fn0l9PwK021GupXxH
+5rvat7UP5X5XI/r6xlfxfxexHowmPU6je9e82EX/TPm/2D6YT+gWcK4L6d+
2+ifPNprO/VZwHML6M86tH/lq/P+D/cLkZ4=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtcj2cbf2xk5Li2OY09NrNSDLO9ZqZnOZOFGe01ejK89vE2xxnCnmkq
5F05VqiHrDkXUw5peyg5hERSifdxqui0UDmkXvt+L3+8fT6/rs99P/d93df3
Ot93x0kzRk99SVGUOa88/zfa94fPZs/2XfCFw9+DKb7//qjXlL8/vim/53/q
nspy9+dUc6kC1e9yrD+tALVbcF7d9Yjz6x5w/VvVoJbfQ87ncaz0/4vzaZw3
YoXWyfrPyFcp5tj0J397E89VO5G/1YFUPc/vSiyp0Zr7DJdq2Xef4/qUz+oi
3yNk/QH5vlP4jhHaUuT6jus1R+E3lvKbowT3bpGrlGPrW+7TKsjHPMux8hWp
uewxv3cRXC+RavX53WrPfUZHnqd3E35duc7MFz4+/K5G8nzjtugvWPThyHkr
TOw2ROw4TuZbyf7eIn8vsVOqyCNy2KuKSdfKOKOG6yc8JZ+3xR/8iEtJ4by6
6hnpFq632pGalzmvjZHvC7leG/yE/OeLHN8I3hdyK7Sf2VDwtRH53WS9h+gv
V/TxSOazuU/9mPN2BO1tDbxHPj1ySFuf5fdB17m/rfC5R7n0d2v5vYByW92F
NhMcAYJ7i6x3ITXPi5zbiF9rzvXKcvGrhuLnp8SfdepRvUQ5tYJK8R+Rx0Ps
qXFseor/HigV+xTye+VU7ssfzHHIBtKiy1wXTJyqzw2e0/QOqZ5Hfu/nk/oe
JM6UBPJbGMrxz1ESd/s4Tj3PcQD52D0lD0wV/UcKnk6CZ7vEmaesW0HclsSB
MZ7Uvl1OuRek8fu1+fzeuU0ZxoPGgqoLHpF2SQY1PJNLcc6JzaDm8SsloN12
FYNvC29Qven+e5j/5FAR1ie+Rxq4BvPK579x/dEl4GOE96beG6yk3MMKiG8d
8SlvCL7NYt+WgqsN9WB7SJ5cIfbzod2sBC+u3xlF+Zsfp9xvbgW1psyA/PY6
Z8pX1vomvtdY+aChgdn4PiD7IqhP93TMD69JA9++/VMY59+fwfld62eCz5ES
UG1a7Q3s802hXja0LKP8yyn3D8Rh3hd8g5mn1VCx61yJLx+J2/WCa/sZzvuX
Qn7F8Sr0alRUAYeWFFWA+ZGhwKO7N7yC8WO3DPDvXn0M4zq338FvfL3dmP85
NQLrUxqvBf9DjbYwrufEga6JPoz56JATWN/GAXpRogNu4fzA5cCphbgSh1+Z
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
z8f/A/z7j1s=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
vEniPzelvjoo+y7JvkV/4P0fiOKiZA==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
avPyfZb9Ct+nVfUXdvg/q1ONOg==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1mAl8T9cSx+9rUbVW7a3lhrZUUa+WPrR1JUU1toRKa+ulTeXjIVrEFj5X
NZVX1BrLJ9S1RayJrdZyVQQhRez7DSER+xqEeO18Rz6ff+Yz554zZ+bMnN/M
nIA+kaHfvWQYxuCif/8L7T2s5Q8/9B7Rucg/THjv/k0ahf/zsYr+/v4zG967
1eJv6ix9KNT77oFQ/+wtaPRVaNIj6LqbQu3jd5l/QOfdhjfyVM6A+8ybgHyr
Lt/97deFmhl8N99TuWVU3mzku6NZ53WC2kWRawy7jbzK6GlGMt+5lYecDch3
05WPUTllbrCuH/u4KXy371xDThfG7RVqRwf2sbPQ06qo41uV9uJcjCi1a4Ta
+RrnYT9BP6MSvPkRvBWCPKPui3NinZ/LfsYJ7PG/UXuPqJxLd5h/BeqMwx77
JvKta/rdZJ11CDneF3rO/W/rPrp/FvP9JdjhNn8M7Q41a11Gzq7TzNu8F3k9
mG9dOAeNZX9jCn509zyDL/ec+cPgzbZP4TurPxtx/tYJ9HKDWW/+wbh5iXmG
gf1OUi58Y7W7nvp1EdR8g3FzGPZ5n2GfuRx97fXr4Lf+wH79AxgvHwMfsBya
s4z97DXMH/kL8jLaMv+LkdDC05hXdyN2nEdPN4rzszOIC+szPf+JuRof8G4I
fnLjs7FrgMZrR43PDzSOgtX/STl8/2U9+pxec1No15dviNxaM3Nlfofcq6JX
m6+Ed/OG5xL/Y2SeO6OhUHPxMNbtyb8m69ZtyJHxbyZny37jpgvvFxoq8ryG
SddlfkFx9HoRD7U1/nP0Xl/W+K2p8XMOPxiBfLfnarxswX6/ygXWzWrE/MQO
oo+ZHnBZ5EcWyRJ7gj8/L+uNzsdk/eScE8I3iM6UeRt3X5J5EybJOrNqv4ti
789xF4R2HO/LulfvCW8OSD0q6/MenRS+YrzI9zpVF7vtHcdFD8/fhb5x6p/u
GrdFNY6n4FenPbx7hDj02un44D9Ylx0rci1/lejrpyackfVJJw/J+KX+f8r4
tjFpsm5NnNhp/vTOWe7DjHMy/1kv1ncLFnu8X+tAq1fGvhVjZJ7/eplUkTsw
fJusb7Flp8gNuXFKvo+bhX9ziWfr+hP0D1XcSVB7gvGnMZVxJxV/m/F7oMNj
JA6dHkFy/uatIaKHPWeB7GO/+yBD9EscIbw1JkiotyMcf417X/xltMoUu+xu
wdjX7qbYYZbejV2x+TLuTJ13Rcbv3+Nctk+Tc3Pi1/8u8nPK75f5R4uJfP95
Gv6opLgUhx12a8WPMM1TEYpDpTQP1bvE+IIU7k2r4nIvzDWDr+DPtyW+/IK1
wjtt78p5OvWnSty4uRW4LzWaCvVXBooc/3ZZ4d2ExXIv/V1vIbd2FOfRYpnE
uxlVCHtDpkucurHFtwp/88FhodXfkHtphoPD/pR8aH1w1Fip/qqp+TxScagn
981ofYXxYzUZz8sRPby8BqK/83YE+jVfLvo6JRLEz+4zk/N5N551i+KQ0xje
bv4r+x5ErrcnGD0Pd+Jebtsv5+YtKCx+9ev1EnvMEvEpwmd1Jg7s2ZxT0Bnk
BoKr1nTwxHr4UO1Rf/bm3rnZmoc3g6tW3yTm5c+/gR01oBm9xB57+AD0j0tH
30IZyJtzlnN6cEbtu4i8Cjqe9gnzljQBX1Pqg1PvHxa7zNVtJD6N33/jfjf9
UO6zO76anIf1fZCu535ZBYorm4lDz9Q6Ixi7/KrY43+K/9wu+M/b2hP+8mzw
fFI7ocZW8paVfJJ172Thl1zscLpD/QcH4CcfhY6G9163OLfnH4ODS7YQ79dW
ir+svApilzGqZLqMx+wQux3jR/Gb9+ZM5IVzXs77mg9Xq98aa/0RqnlzutZB
F9V/MzV/Lx7OeIdZ4i9/94+MtwNXzU3I944chJaYzniDceybjv/dki7n+fMg
+Oi5oqftpoIn++aIf/yP64g9bmbeHlnfKldw2kyaw33o8gX7PD0PPaV2bMcv
3nPN7zc0f0epHbW0Tr6v+f254kudQ6o35210joA/hx/MxP2smzAQe0Lvcw45
BeCJHUIcT+omvF1QnXjM20cc9ov9S+Y1SxSctKtf2CTj5Yscl/0itjC/IF3k
GJGr0W++1tn5GperFBerwTt9sNPXOse+j53ubOWn6D1atoP5I4ey/rtvkZcT
wnjsGMYX7SCPZFWlPmk5mLjbOlb0cw6MIX8WK0kcjj8q+d/oW1LynD328nZZ
12y1xKXplaRuqVICu+pVQN/H5HNrAffaidP+Y5DmvS0ap72pt+wE7TOWap3d
DuoYfLc6neD7GepF96c7sp95/T3WO42RH7+U8XrUX35Ua/Jv4QmCG+7GNy4x
nzrHPbrliNDArVIPeI+fnBY+Kl9w2v4zhrw0rRz7zBrL/mepc624TPQ6rbhY
UfNctvqxLHa43bXPWajj4ZonfgMPzfmboR2aMr/TaeyYdVuo1b4q35MtuU9m
n3HUT1U6Sp3lHd8v98e421XizXxySPzj7N0g9nnnBwreG7k1yBOJEeB+jWDk
nzeQHzkaWngtegQdhrbFTn+I1tOTtT9Yr/eyGnWoPZg+wOuo/eXb8xgPAsed
RsSJ+XAQ+W5wU/jk4nLO3qH7cu7WqGjqlycrpM5wX/4Y/zy6vk9o6gBw8ZXK
1Jl95hGHa9aAz5VLE495pbjHTT4lr7Z6Cb2Se6N3+CbsvZIKfUv7t1UafxU1
LndSV/uVte/pSt1pj6XPMZc1Aue+WYL+zl7Rx4j+SKhbYj75qEV1iT/r6yDx
i108Q/DCKJ20V/gzE9OJg3Lg/KZk4nZdqtxTP78v9sRM5LxCynCOxULlu5V2
Q+6xFTuX+uLzqdz3TPDY3AtO+C/q5w7a77XS/vlD7YM2gLtW8DFwr8tQ6oqR
tyXOnFtV0W/RXbHH/WUi9dSTLL73KC3+MtJDpR629k0Xe83Uu9IH2BFzJB/Y
v2VzTq9soo+qlknd8NY9+qylFWVfN7498Ts9WfKHczpT6lajInjl/nSBe9H0
e/z2ifY/QdcUHzRfnIQ6G7HPfFAJ+76fKfLdsgulPvKCA3eJ3tlfSh42Yuef
ZP1Z4d3703YLTfjqoKxv8qbo4xVtILhp3ijEPesaIn4wivcS/YyvDPzyn/LU
t0NqgkfBG8TvRtEpB2Tfxa9KPW90miN6WTOOiDx7YSX8VkTfkwzNB9p/OwnK
a93iXHxIXbxD/ZZfQ/oUb5eVLPKzKi6X73PjwPWweMF5//Ip+rUlcwUnrdqe
2GVcbE58rQzjvP0w8sjBL8GTKpHg5pQL4jcr0hc8der3lfzoJiYd4N4lSr3t
bxxyGf8MpZ6vu4T4HKj3r6bmuQJ9jzmj9Drx68wE7513VxAPj7d5wq8uIvbZ
3SYLNReX2ijyd5aSODTCfiWe3AL6eG8t9zMUfHWtD8CLiJPcs5JNySfJ08CZ
okPIK/uHEDd31hEfg/4U/HU75yK/5SHqnrzWvCPsByf9K9r3tQUnzRh9L/pW
+8DS+j6z5i+dXxY5f51D/6eFxU9eShGJU2Pqy+TpQT3Bi0FpxEvfZuBC4lH0
X/k65/lee+QGrMLOweXB4aQA7P3vbu5jSjRyAl3sfvY/6rNikWK/lw3e2sPO
aVxqnnPxm1ND3+N6KG620fezQM2Le8BVY95S1oWdop8blIa9XcbT7zbMIN/l
KC4UbgbOJ/xB/E2qgpzN4LqTGss+7RLZPyJa65G92Nv3Z/wRwHm4U6kHjQHb
mfdv1vs9qXedoVqnldL3wyfan6dpfdZG+9w8/OaV0TwSr/PT9H7m94euLYO8
q7yD+R10fAR1qDVwJ3QD9Y+bofGSCp75YdTjVgH6+UNT2Kf5Qvg+G/heezf6
VKIO9jO07wg+hrxI4tHZh55mDvKdZ/q+Ga3+m6HvnHW0rp6n55Gu4900fufQ
/1jrTyGvub7njMpX//M+4IXpu2V3pS15t7TuMd/9mj7U/5260T7Pu4nXGeqX
hdqHVP5AxfVyivfb9d03Xt/RF2mfMErrz4faB/XDDqeE1m219H21lfq3quLM
Y/XvI43bTPVvkPaPKYx7+S/6L43rDI33qxoXa/U966mewwHVz9D3vXuaf9Uf
9go959H67npS+4LXVM8H+m6u7+7OS+qHf+n4P33E/wGBdqKO
       "], {{0, 28}, {28, 
       0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
GXSm
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
fy/1iaY+/O6nP+P8UPJTX23xi/n/AQta8sg=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1mAl8z/Ufx78qx8MRLUdj8nWVI8xZOdp3iUqlQo4sfafmPnIMLcvX9cCs
lkT8KV82RLLK0Zbj/0Um7CBzbLb5btiMmSv5E/PX+/luj8dv78fnen/fr/f9
+TQcOr7PsIcMw5hU6cG/PuFTQydODP+4b4V/BhHhYzp1iPhnMUh/D/6stbev
hDygTpWbQt2Fl4V6o/4UanW6yvyka4zDbwg1ujJvbLvO/r91/8+6fryE+Sfh
67xyRag5n31+Cvv8qVCnlO86zUs59z377N4X2Jem57or/1yVs9dffPdQqc4X
Me/cYpyO3F4qcvqdoXYc1NoEP+s+fIw6nPPbILcRDA53JWP/Jb5jBZ5n/UIB
657OP6P6cPmuE3WJ8Q7kd04rzpqqrwjwGa0Ux03FNQv9enfZZzSDr7lQ5T2q
OCzG3jn4mDnY027I982L8PUWoH/3C9Xfe+dYP7eB+X1R4NtwkvP9Dqlcv7B+
4D/sT9/KOIZ1c2CyyuODq20W52LRh7sT6uxU/Xfcx/onjN3xyOfPv8i+b9TO
DvL7weoffRTnUexgFrPfq83YW6PnbxdDZ61mft5nfOexzoxLQxkvGo8c/Ssz
n53EeMIJ6Kf56GGDyr1F4+OK+uN9vmNdw17Gr+jdrHSHc2PBZfbmnJWs+jfU
bqXgNFNV7iTw2c2xu3lG4+OE4n4MuZzah9lX8FeprCd3EGpmV+Dc4wHq3w0Z
p0GtCSXsn10JedePZT5vMXz3YVcnaAvrHQ+wPht7+o3Vj2dpXMz9H3g6qp08
9GCvUD0Vqd+W1/ke4HDLqx9XBLdZRnwZFbOhI5HHj+kn8rqvDhXqzCm7LPIc
zwXvCfD6z1WD3hjNvqbthRrhMYyjY4V6G/LhV+8dcPj4uzf8FDSeePAfyUXO
g+qXJvZ0E7G3nYS8drTmi/c0TyXgF1YodrY1Hzgz0KPbq7X6x27B4a+OKJH5
qMMXhc/sljL2s1JLODdE9pkDQtlfLvaS8L2+SajbqqLgsR7yZd1OXsf+R+cz
n9yd7z67je+WJoJn5S7kjM5k/bT6bRL2dEaqv8WDzz6l/t1K7Vaax/kjxLGd
uYT5J9vDL3umyG8mby8WPh2uCbV29RKcbotaQs1VmUUiT53XhVp3ss/J/Cd9
z8v3ZpjQ8VkXhO7Vc9cGCE5nRVP8oEJ15EiZgJ2/a468I/Aj72Ps53yg/noB
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
/g+vw5ke
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 
       28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
i6X8Zvq9iuN8B9T8eA+KexGf3wHkJJls
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1WAlYFlUXngfLX/stRQMDTYdcfjNUzA1L/8Y1MZS01LTMITfcwqUFKmr8
hCRSkdQSUxzNJRUUJMzdQREQE1AIUVIGBTdAWSxltXrfI8/zcZ5z59x7z/re
c6/HB4HjZzkpirKk2T//xvt/OmTxYv/gt5r+y8z0n9+/78x/P7aX3z9/5sWH
9177h+rrakHtg+SVlCpQrZq8taqGvNN9yvV7QD61jvwtkQv+k/QH8upkzlMn
kbf7lpN3cNz4QvZd+hfX8+B85T2O66Nl/ltC/WReI+WVXNFrJOXNYvJ2nMzf
yfW0OI6bt8ir00Tvy6LXMNqrNBe72op8c9HrNVLr8wruHyb2+lTz+0/0i1Un
evQW+49zPfMVfjcHkBrhomc5ecXBeVYfodu4n9mP6xjP1nO9oeKHrrLfI7Fz
DXntf7KfxXH1Z/JKlOgfRV5PuEf6wx3OW0ve3NtAuepGfp/BfZXd5JUcUiPi
EfmfSLXNMn6E1KzgOvpY0debflIsyZ9HjINZIPnWhvGwTOEfPh7nfGuczB8r
cm0lThGU054hbx3iuvaMIu4/MZX041vUbx6/G2+InZ7U3ygQWiF2lZNaN2X8
uNgZJ+Nit5EtfnmO69kb6S89nPlk50p8V4m+yyQuKeQNlfqbOyRvJjBOarn4
raXU4epKyqemUe5UcDn2WXX+LmjLA1KnlDO/qZO6oF5aBfVUJ0qc2lB/O0jG
b4v+kyXeaeLnzaL/zuuUC83m/NbkjQ8lzwdTT2uG+LeJxM1F4nybvFIi+OAj
+T2YcVV7jeD4/bmwy+oWWAq7/vyR9uVH8ftq2q+FWORds0hfIrWfPUP/1xdy
/cRirr/8lOibyPlDKK90/ZnyfgGUO+pPGvYB5Wp2kl9Mv+rppJYicfaX+BWI
fYGCpwsEn6IyqFfZq7DL/nHjbchvdrsJ6vwl7YvKAFXTBpHXd5RB/pczoFrW
CfoleBzlPskBtRcMwLhp5N9iHkRjXe3yIMzTX2/BdYaUgCpdDOrx0lFQ46ch
WMcYxfrXOkveZUk95Qne1Uh+3hW81G3yA+k/xaOoGHJ6dC7WyQkrxPzT0XdA
G6O477CHZcz/SuirtmhCuvQh5mtuJ6h/zlN/YN45p3SsP7nxMHg1Yx/4G08c
As0/Bznbaor5+r1g+FedGlPK/CiEfVbX/YxLIe3RY2mPskbi1lNw15/5rg6h
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
       "], {{0, 28}, {28, 
       0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
8t3Hu4k6n+9lOvNjDN+xD5EyLiz1mbz/B4Oeh2w=
       "], {{0, 28}, {28, 0}}, {0., 
       1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 
       28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
v2c+pnwvv4+ve6GHvwABYI+Y
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtcT3cfP2Nzm9vD3FrqkIYXYvQkRMcl1ZZcGw+2jjtz29zmMnNcZ+0p
7IkeaZwt96G5pUWcRFEuk4mWdKJUops7xWOf93t/PL1evz6vz/d8L5/35/79
tho/e9jkaoqizK315t+wcV/1nTNn3KLhNf5iJo2b4eE+6a+Pjvy9+TPLK0q9
31D9+WPQoKdCrV8xrnQC1bLx3U59iHntQbUxj4Saz/Bdew/j6qQnmO8F3uoD
XmsLqvyH9F455s0Eb+7FPmoVqQv215fgu9H8GcbTsK/SHePWE8rTgvJXgjci
OT6FcgYRVxz3n8dzP+W+Xpz3HdfHc94orDPLybtCbi2WckTzHH/spzehvLHU
3zDqbQ32t+pDTq0J130D3riN/ZWf+X0Rx50hn+LNfZdinvUB5V9L+wyjHXtz
n+PUTxZ4swfXudPuv97HvK7PsX5UJeaNpj4i7+E8HeuMHsR3BvjVjvhu9XoA
voTnTYHc9nXsq69/iXNigNdeRP+4wflBlK8nvptzeE44cTTn+Q3Iv4AejRDi
V7hPHuSxc0vBb83F97bfQ75l7vhu94Z+D/mDvhyI89YGYN3oJlj35VCcE3gI
39tk4vxWV7n/dfAK9GVmAq82l/qrTb9PoB9cJs5w+sHLMsy7SL3kcL4LcZZB
z3rLIqzLycO67W0wv2TFfeEP1SsWOWs8uSfzd20skPX5o/OFurQDfyMN9Kmv
UOvob4Uy/991ZB/laO4D2Vd5XSK8Q1/Ise0ozo+Dv5jdgE8Lp31DiWcs7be/
BHpLoN2qUy+doQfrFecVFwP/5gvgoyfhvNmDgcdcLnKaQ1zvCl3ZKEdoizpX
ZF7p01ThpztfkPkfK2kyHjArXXAkeGQIX5RxQ85Z2j8PcTtC9KS8Xyy41bEP
BK/6eyz0WpoFeWYR333gNaIZfyeZ59Yz3oo5HkN/rAmcagvoy3D/F3BnnxH9
Gm6nimReWJjgsv578qacu7cucA2YdwZx7pMk/MjvhOqXTyTLvn3m8vurEzLu
6gTaJUf0YK3bZ8Pvnsj+6pidglN3qgl541dBLk/g1IJfgPeFv1k+zLuhzE91
mafd6ZeehaD9LhLfPcFlhjYRuyk7a4nfWXvq35bvy5L/FLpz3R+y71lTqNou
S+yjbTtwTfZvFHBd1k2L+F3Gc+adlf1OVLdk/unAk0ITJ4rdlX9k5WLefTnX
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
nyf9ZDftwvddi++B+uM39H/DX4NL
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 
       0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
9ZIP3xd8qQNmitjv7/8H/B+11Iih
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxdWHtYT3kaP+MS08yOsSaMxRyJQTN2G7GYh04YjNsQs4Nn4kh25S4mYnFY
4xJyybWio4Y2CWGRqXEQXSipSK4njUxUDC2j0Jr38/n90fY8v97ne3u/7+e9
f08bv5k+f6+jKMqchm/++UyY5x0YOCF4pNPvg0kTpnXznPT7Ykv+3vyZ6189
8npD9RhQM7lKqFZdLdRyfinU8OF6h9dC7TyMtb6kn4LaEaBGOc5ZZTw/hPe4
4LxSinn7fYwNN66v4/kkzFs9OJ5F6rivLc6b9bHPVMl3LtaVyaCqxXPelO8w
x0U4rzfm/a+B1/4nxup1ytOIcmRi3YzEOe1j3qNgXt/E81sxb7mT3iHOp5R7
AOUIJp/2XB8PqnrgPn0pxyblKKLcQeR7nedXcFzB/T+CKsRnvMX70oj3CO24
/GUtOZQ6NZgvJa6g/4J/3d/ANwl+YfmCKsexrtTnPadeYF9f6usxcdAuDjtZ
nSnHNtovvTZu5R/E05X68qO8J7l/IvSsVVLvaZQ3gOcWQD6jlPyigMtqRHyn
uL+Acl+g3RJAjd70/0zgU4seYd2wMQ68j/Gyh7g/8VfwL6F/DKVe6T9WL8od
Sj13IS6d/jmdcdKbON0gt9aB+4jLHEy+f2P8RXF9IP2jEHYyU8sx73MJ962/
DtrjF9yTWoL1Tfm4f9R20GovnL8WXyHjtr4ViNtUobpXhFCz8Urcdwi49Rji
m0I7TiCex5zfyvlQ6rkL/YH2V+OIax78Rw+inl48wfyif4HW3V8OP/jwgewL
SyqVfc/Nh8JnZltZV4tbiJx2jipUadawTMZNfe8L7Xrpjuw72vOu8LnX4p5Q
jyfCx+5TjnNJIfCHTY8h1yjKO5e49pL605+dabeVtPtN+gPj3syFfezvgUuP
nkq9tRP5lODQIln3vXxN7t0ZelX2hbaXecNf+UVo4RDZr5d+B5wfbYKdrATR
izEotUD4jsvIEL7FT2Rs7I2S8+Yef5zzWwh5m92DHGfpj3OIJ5zxcZd1oCH9
bDTt9QrxYX7LcX4p9jv/hP2HPhR7KE9rRH49w71Q1pdfSpd543ye7PMsFrvo
6dGy3xhTJfJZw8eCX/+18If2z8U+RmIA9OE+8aLc32Cd6Eltng8+3snwX9eN
wMM8ankh/vV44FEaM5/+hfZxdtQlxzr3X3Tkywroa1IM+OZC3/aGGbdkvLNO
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
TvzOpzE+rCH003ju7/dm/D/LQPvv
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtcT/cbP9i+2l7zs4tNYRzDXubHXMLUas5spo2ZMffhZFQbQi4p+jkN
kXRBrutymoZMIusX1Y9DishlJqSlY9VqVLNYLo1+2/v97I/1etXTcz6fz/N5
7s/zeTpPnzvap7miKAuc/vwz2jvw7YAA76Axjr+Qmd6zB/af+ddiB/n980ft
cffXwX/989FtQP3ILUAjrgHQHlcDaMbXA1opN7mv9U+Ed/ndrCAdo20d6fWR
/Xm/Aqobec46R1z/gOt6MaF6lPdoI3/j9+OVpPMU95uPfidMINQ33yEsuSP8
8361por4BdKxgwgtF/Kl9pVzPbnfbOB3LfE+4XHqQQu+Rzqxcv6dh9zvLnSX
8h5jLOlpl6k3tR3p6jspl9aO9E1XnjNGUK9mNNeVUcLPBtHDDK7rSeTDGsp7
rUOka79JekZz8md8L/paUCd0ZF+o8FVIuvb6cq6v5rrW/xfyEfsjv1eVkN4F
0fPyRp7zp/6N+lryUZvN9V2nyH+Hgzw/9jDXlxTy+0absA35sGspl/r2aX5f
QrrKIOpNCxV/2EVoJNIf9ELKp6ZVEJ9POkYa/Un9TfT+hth3pfivZzX3q2W8
p1U6+dOTuG9oAr8vcCf0Pl8HuD8b0PiqXS32LeoJXN1pATeaGol3e5f0p6SK
fagfzYV20R3k0yonbtlcVxspj1JEPdtpEl+fSfz1kfgpF3/pLH6ylvqyIkjP
nnCFsGAt1x96kL63g/Te2wB+zdtNv4Du1643gI994TzwXvGZgPej9oPO5l+B
az32HgF+PuMa9pe/VQXczaUG9Od8TzmHiH/k0z+1IyLPcvqVotEO9ieME9Wl
RuSQ+NH+jkfJG1vFrx9dI+y9jfLO7Ue9BM2BPPbU8p9wruTD64Ar6k6D7sSt
/8W53K67AEuT43DOWLAB6yOSw0BvseuXkCu8MRp8x7xxFHSCrxYBDsu5hfOR
krfuPCI8wvygd5O8VC92XUU7K6cZX0qq5FOJez1X/HQJ7aWN28NzIyfTTmox
5NIcA37GvTlRVwFfWHcI6xGeydj/3iex+F57ZQvov+sMXE2fuQ74x68CGtdH
rKLdZs3FuU1zQ4E375KBe7w+sIEn7oYf26NoRz36Mflzppx2L9rTWCpx6s84
VhMYT+ZlyZ/3GGfmhXzSeSKA58+uYxy9n1tFuLoY39d8egz0vow4CHxDyA7Q
zdgUj32ZvSGH7eVLeQd03Yr14RNSIM/ul/fRX6duxnpwnxXAe8ZtAh+1c3Kp
x/3VuOeI1Kehj/9hR9VT6sZ4ibNTkq+TJP58xJ/diNsJlM8oYR5Rh52Hn5gv
HbhOvW48B/5ib+Rg/Wgr8KmF3NgJPOcU4ksZOYvx9bg7/NaKXHAK69v0K1iv
SAIdLcMnG/hrDvi1cu1n+LE16EXozbJ+wL1WTBD5mfAHYW/axRorck2VePOV
OtqGecYsEHv2YrzqDYe4/9++xM+9Wgk+njn9I84/W5CP787bwb/ZPg9y6r/M
Pwk6Ti/Avtq0jcgv9hPFyB9q5njEq/6UJ+xhhR0iXd1BP3/m2f8Bb1qHeLSq
D5iAHS58D7kz6hEfemfyawZL3tgs9goX+4yVOGz5gPKX0n5WPuVVfz9O+XyL
kMeshIkV1Jsb9G4dqbgE2BByEbCq8QfQa+1UjnP/GgV92zn7IY/VZT7O2wUp
8G8tNoR5MnAy8q22twX0puR0/A4wdBf8WWs+GP6u543AfXbLMviR1p71V31G
+q4gyYsPRc5nmU/156RfuSt9RH/mF3tSMqHLVPrl0+2o/5TWjDslALh9zgvy
mU2lJcD7B6EuaJMvIS/o61aV4d6KWn4f/i3kN+9OgXz6FhfsUwuMC4Avn0zH
/tsd6e8j3b/F949TzzLOK3HO9N9B+zikv/pC+pP2tJfakfVdqaE/Gi9L/jx5
nfBpT+aT1/4D/ZsXZsPP1B1PXgb8uQr525gWCbtZPSrAv5HtAP/q+r6l5NeE
3Ib6Ob5rjgfwRz2kDPbU17eGX5r3B+YBDjyzB993TtmN/QmTYE819yb0qMw4
ifPqVvZR5utS33Ok/70m/YmHxGWm5M8q6e9OU24jwpn1rXtH+I26vFchvn/c
E3Lpsz/HfYZ3LPjXVhVBPv39aujDOHAf8uhJSfTLjw5Xkc9u4E/pmlvKc2sL
ACNishifFZSnNBx5Rn1v4wmc77kI/q64TUVd0hTp21yln1xK/9MGMP8bI6Q/
FH8135T86hlP+VcNvon14tXIb/Yfjch/9qV58CPluzLEu307F36qzehMu/mk
Uc7tW5jPz9QTjl4IempgFf3rfFfst2JCYTerXyjksTx7ob/R40PSQDfsHvzG
6P0S9GjVmDyftkf6FsmHc9m3mE3sY9VH0r/Mlb5b+jm7uoB1NOc59lcfLsP9
atxu5Eml/euoR2r5GMZhh/cZl3OOYr9l+DOfvJIHubQJZwjz9wKaY8opb8+W
rNuplbCfUrL+MOikzUBd1J+KYv/j5AP9mh9UYL9hhiIfGQOZ39V5lEuropz2
EKnf9yTedMqp/sB+RS8eDPm0lX0Ybzd892L/PgfiXqlbDv/Rw+ahPqhXJyL+
1Gnl9ONuCuRTnttDP83Jhj/ZncNorwEDkX+1oV+gDtoHo9jPOe1CXbFq76AO
GofX4D61Ivos7bKvknAN8+1w6Ydb0F5mP6nzLeS96i9xKe8hs6GY+/dXsC51
bU3/9wlA/bHP3meeDspDnNixvyNfq52WUq7CbObJzHG0Y1kJ5FHMnYgza0kr
6iu/EPyrdwvQZxqVAfAHa/jz6MeUpj24VytiHVQ8qqE/22NKJeUuAX/6Vnlv
bpI+2Y35w14pdc5Z3j3jKKc5xOT34D6sQwcXbQeeNDYSeO9JyGeW3yj2I6s9
mM9S3Bl3J6bjnLZpEPjR287DutbxWBb9Zzz6UDV0Avuuay3Z53y1CP5gTYpm
nzJrMfzUvBlIuad7I1+bAx8ifs3HrZD3rLbsq+1rfF+oh2lHI1DibJfEnZu8
gwZ/RzlTU+E/Rou49TiXM2QR+Fvmtw1831FZlyImsC+MX8W69PmnsIuZEof8
rnkfgxx6abPloJN4LBDfw+NXAu67CH3pr3iBnpl+PJ3xeY7vqDDvMzgXGQp+
1L559Mu7zH92M74PtCusZ9p02kn7SeYiK6QvOyR55kYG1/2C4U/2V6Xsd5e7
+GLdz3ch1h8cj8L3xUHg394djj5Dz6tAX6wuTmV/vP90BPbN9yDephy4OW3R
14BdDvL9N3ko/NR0JNJugXHM1yNiWF8mTmJ9eRzOejyacWT0u0r+Y6RPK5S5
hrx/9Gasc9aX8h66dJZ4AONYuZhH/6meaQBPX+sDuDAKUBv2B+xhjXQPxv0+
6yCHVbkQ7zktsZTvhx4bvsG54Cbmi8ltkZe0FfHwX3X6DPYLi91R55WjP7If
jc5GX2g4teT73vkY+f7iEu1Xdpl28WW8aTPl/dNd+ph+klcy5X3Ymn5qt0+o
Y5y5Il+oKw4zn73UQP/8zC8R52+mmYwLf8Sp/mQA84J7AOvJmSzUZbN4CuSx
hi2DHHajF/OQWyb72aAUvve7LIA85mYH7tfD/ajv2fIOPST+doL2U96h31lZ
Mh+SuY3iwTmfKXMXy0vkfkv81k/8NbGSdWLoN7hXuRfF/nniNNa//HL0M/Ya
F/BtlPLdpHTvhLpg173DvBNzHXIYy6qY/2Kz2K9rPeg3Wbnkz+sc8Q4XyU+n
Uupbob30evqjHijzwCz217rMoYzx8q7tQjmUi9KXyrzPkHmb0UveFeGcA2g7
xb7L9nF9Sxr14O9KfgIiyY+6l/fFLea5m7eon4pk+sOBRH7vy75Ry5V5gy51
6zXmPdNV9Bwi87EGmUe6Sr68LvPGbSKPi8RfvfjjdJmvydzIelPmTZFitwip
I83+fkfIHPSxzAVyiFvvcs6jbpF5z4vUh/E8181BMtc9IP1sgcyBLso8MUzm
mCfFvxwyp8zguup1g/CBzMlkrqtKPjHaSNxtET/tzHeDskTqQrLMXQ7KvDGZ
fbY1Tu5vL3x9LfLIfFcvEn468v1s9adc+mV5T6dTD0qD8HNF3l1H+d26wn1a
V56zYklXi6E+tBlC32T+V9dKXqwp4v5k2tFylu/7aC/zE5HPSd7tx2Qu3I32
Ut6QeeEw0ccOicsx1J+xgn2dckLmqdtpDy2a5wx5h5m1Mt/tIO9qVewcJHPr
b+We3sLXQ+kTHdyndxI/miXwquwvFnvckv6ySOzoL37c408//j/w02Uh
       "], {{0, 
       28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
Cr8E0S9a8yu8/wPjoSdb
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWAtYj/cef9mQ+yUjjvG22PNsY2OnNHL0tqFN58TqcLaRvc0aEU0sJrYX
MZxxzshl2eoVaxmnC0Nu9UaR2JBFa8krlUqXRcmldOzz+drz6Hn+fZ/f7/f9
fe+33+v8QajfR60VRZnv8OifX+BCr7CwwE/92/6xCAoMGe4a9MdhP/k9+tOT
79Z6PoJWKKEaeQdQWdgAqHVuBDQ9ea7f5b6yk3h2FdfmlvuAxr1bpDON96zx
9cRvK/cnyz0frjUX3rfiiG9Eyr1U7qvTuda2Ed/0vsf9PNIxkknfiBd6i4iv
3+C5euk2zwOIpx+Ve224Vv15T+lLumYN5TcchO99gT9THiNE8OdzrV8U+ySK
Hd4V+TJEjnjRa73YtYvoN4t07G1yzxb850XvK6Sju4teG+Rc7GFmNz5hRzNX
/NhR8CbLvpfY/TXuK3coh5VEu2hv1RHGyL1dzZR3WBPxdhLPTBA6xfSzUsRz
dd8D4vfm2k7lffU0odYg5wrPtY4SP53FThVix1FCf5fYexPXxnDKqwcSahJH
dgfRw4V0LNn/k35bym37lXO9Ppt0qk4Qb2sV970lHpxEzjrqZ90mVNMI7RKB
i4mnTJLzIvK3q6mvmS/675Xz6SLfFZFrCPe1V0X+bmL3OVybU8W/vgK7yP7Q
WsI6xqdZfojw4Bzy2f055Tiyn/uzviXdvlHUa/y/ybdpGeHaD7i/ZxjhygjK
s2U911W7eD+HfLTPC0n3Mu2qmKJ3a7FLJ4nv9uI/k3j6McnDWuJr/cTezVIH
LlIfe/VV4j1D/1gFK2pwP30OoDFmLqCZMa+aeKMrgTe+fznWhzuX4dy8X4x7
V8ttyNPbBVBbtZfr2FMlwPsqswJ0NzVVYX01B/SV0mjK6XiBcv1L9PKU+Jso
9WaoxO9AqXvfS7y2Ez2jJO+968Rv0VIHXuD62kTqk+MKfSzfA5DH/P6ra1jH
5OeBTl3Zz5Bj49hTgC3rjkC/tef2gt5Zn72M7zRA/eKtw5Dr5NbTOM8Oy8d6
2PEbgIEdwFcd0oF2vsy8UNoxrq0Dol8XqY+jRA/RW+sleRYideFmLmHWFtC1
j/aEPrbDevjHToi4DvwLB3/BevOgE6C79rk08PVYsB98R325m3EbEAc9eu6P
At7CuA04T3SKBZ28c/FY9w7eh/XcjJNYHwyAf81xfcBXHV3MOBka+UQ9MDOl
noyTet5P8sySuhIu+g9mHutBe2gXpw+pV/HLjJv447+B7u4hZ3HfP/845Hl6
5FGsN48FVCoiDuBe+7co75K+h0DP/Xg68F5JtAAdkjKA1yv6GPhG3UyF/Ht+
zwL0tREParunSsH/dh7i1u62kfkReZLyh0q9WSJ9SuqjXSN6RdfQr29InF76
L9cbP4DdzF/KmC/z/XNw3y8rE/KUeiOe9MGe0NdYMuEizn1nXsL9EQOu4rzT
FMSZdi4a9JT/WMhPY9Z45J3lEw58LcAVeple/vCf+u4u0LNrE68xLsbcxP40
5ouWkEq9FPrNnij9b57UkREyr+Qwju2PpX9W/ES9O4WyXsS2KsQ6ryvsqRfv
v4x952WIU8VcDvn17f7ANxrG0O/1bRgni9eQXjDrqv5NA+xvtTyAnkpCwBXg
+zmcwfnCeEBzbMYF7PvmwL62FUV5Fr9NOjHV9Fc3mVfCRb+z0rd/kPzbLfA1
6Qs1O3k/eALiQb3kAPmVdVdRD5WlH8KO+kevMu+diimv0zzy2XCc9JIuMw6M
8+Q3Yh/tvcCH8ZW0DfaxJrmeB9+qNxGvpuNIxIWd5gC/Gu4jEZ9mxxdhN8Xx
LOlqrPOK1H0lTOaT38R/MvfYOyUvc2Uu6TWd930WQw+jz15Aa2N/+uWywT4R
OI50X3bnvWXsY/qb23m/OYZ0F0/iOmkm9YqJZj7vzvyFcRdtMZ88UKeUk8Gs
w22GoK8oUxlHik8f0jvHOcL2LiW/XPrHHCjzzFSJQw/Jx/7SHxXeM9LZt5U3
utJ/9SHUa20c61djOfVzCwPUwgOrmQ+HgW81fs515BpA3d8Z+1pjAPSy9B2I
dzXnM+Sb3uMu+oP9YijiUa2cR72GjYVeekI6+VdMpF4nOD+ZRZw/tPt3nuhz
SpDMnaXU6/Hca2zK47ljE/tC5Eb2uSkxlLcpmnw8SwHNdRWM05dWM35qCxBv
6vIm1A3DI5D7FatZn1pdQ95qKw+xjqwbjnhUXohHPTFnNxfhfLYb8kBvjmK9
LPkG/IzuZcyH/2VQr+zr1KP/k/OoHS51spPoK/Oa5Sj+TnmbdA6lUo/gIto/
Jorxemcm8tFeWkQ7pwcU4P73R2B/rfAt9vWBIZBf/7Ej+ohancy+vj0JfUN/
MBB62S3J6Dv2Cy60y0sVpJ+bQvvlDAV//VPKZT8fQr/8zPlNiWd9UStl/kyX
d88qqTtREq+d2NfVL3pJnWFcWo0hiCvttCP4q+f3/Yr9vLnoF+bWPOSP5d0C
+e1L/0C/toMj4hmno7cDlgXF019TqOc/n4E9zNJE9BGzuSv8basH4D+r+Aj9
OKMedVYvcaIfhwynf4LOUL9DMk8WS/7J+8kskHnmgtSfo5nUN/s28+pEN9jP
bp5Ou46dgbw3Dnugvpmp69jPjcJk7FdWJEIut8IdzNNtJvAc10A/Y1CPFPC/
tZJ15NkU6Ge10wuY9yWIT2XCTvhTa/3xFfKLRP/TVneHnZXerRlXQZzD7cEy
VxeKHsFSV8rkfZEp78mZB7l+tyfn22cqODf0KwQ//bRrNuQ+sQP9XfVfz7ms
Z14a43475hD1ViPmM21WWBLkfycQdlCnbkPcGu/3YF/r8gX76fRKzJvae2vY
zw9/grgwrhSDn+36I/28oAZ62k3fUc/w8fRjmLyH3pM66Sj1pD3j0qhmX7D6
8L2itA5hH53zPOiprYJQx7VkL+hj9/wN+WSFLMqkHW8w35Y1Yo5RRmRxTnad
hL6mns3DffPjm6wfQQ2ca57dDfr63HX0V0oj8I2t8eRzpi37RuFo7FuVLvTj
9Fc4V73qRr94SZ4Nknp5XurJKqmrudIHS2QucGuAfeyXJsOu9pg1ucCf9Cnq
nuUeAP5W92rYV9MWUv/XM1kn+nzNuTgwoJR2rmM+lc9EHll7IzjvfOGCcy1z
C/BV57bgY7tRT23IAdBVH5agnyjJVcgTe4nCPt8xlvoMlv63Wb773JM68/j7
x4bfCZd7UF/fM+x74QrsbXWdjTlC9/gr4kTpV4X3jzZhNuJLWTq0iPQ9mael
cXw3eQxiX25pxXdHejvpZwOgp7b/ZfaTuGnQT3f2h37awzG0a5dZ9K9vNt+H
EwJon6nhkM9wy6K88v3H2iPxKN+rbHknWdECvz3N+FU70x7eNZSjxwzGaW4Z
51C/RvQx26WO+d+4nfLFTmZdXzmKdf1hPvNk9lLqe7sD5+r5yylnr1j6N7mc
79+kWsSttXQT52mnVJ73zWA8/e0TzrcL0lj/slk3tcHSD16Rd558BzOPCfxB
9K3jPGDM+4ZxeiyZ72f34bT/O9vATz/kzLnxqVWQwzj5F+xb43eRf4If69OX
0Zz3YzMBzcbjpOM74ybjbxz7t08W6/RRL+b9onLa1Zd5YsR1YDydrWD/u8K+
bt+Rvt7j8fwp7wX5DqfNkfNqyb/r0jf6M17NFRe5X9mXeg91Yd+/m8+5K2Iu
6/SNAs6V+TrpOj1Ffi0J7J/KBcindL/O/pWwh/O450rSC32a+HoW198+4HkE
5zEl53XG1/lLzLdR0teKZI6+LHWk9nH9FP1my/fdOtFflTobLt81nisT/FPE
C0wjvSnTuP6Q87M9gHOrLt/91NvyvTLlHPfrPyL/VhuJv5l5oIQWcD/xO/JZ
sUL88SPx1hzm+VbxV0it9DvJJ1P6nHxPNkdKnAbIe17kML6Wta/0/88kT39q
eGJ+M+fKu3iHfPdY3MJzm1CrFHiR0PZ6SOgucBihlSvQTfDq5ftpm5vk8z7t
ZbXnHG05Stydknecs9g/QuYW+V6rPv6+WyHfldbKu16+k6tvS74elLj9u8yp
PRqf6KPWIpljbwidqWKHr6WOXW+SetwsclIP9TWp38sF7x7X9q8yH54SOVIE
yrvNui76LZLvYsVyflXese8LXv0jvf8P2PmQ1Q==
       "], {{0, 28}, {28, 0}}, {0., 
       1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHlcF9UWHzcylyKl3CDHwiWTRETcQkYxxSUtkVJbHDFM0J7mEohYg5WA
RmaopaVvcAEUlJ7kEi6MKLs7CCoEoyIqCoSiaWi9+n7P++Px+fw4n3vvuWfO
92z33NstcN6kWU0VRVnY8u9/k2aEDl+wYMYSf4d/BkEz5np5Bv2z6Cy/f/4+
uVPn8zdRhzWAai53QY0mdZx/huvGjHugdtxt0lfqQZUk7tMvkZqenLerKUf9
jnL09SLX8zfu286xebAW1PLlfitF9MghNaaTz06iHtpy6qEMo1y7kvNmnMhr
kP2nOa/4ks9KlbEifCeFz5HU/kz0/0H0m1dDOpr7tTji0rw5NrvI/Ee0h1ZK
fu0q9VMLRe9I7rM2yHiv2M3jPsc3uV/pz7H+hfCtoL7WQ461PMH9hujtJfbY
Jt9/j3INZ7FHX5FzSuwayLE+j3zmmOvkn1nA/dNukJ56SP2/auT6mgek3o+4
v+Cx+JfUKue8tfAP6hf7O+VPFv2PiD2DRS/zJsflgucA9VMecV2fL+NOsj9F
cNSKnZqKn3pQrppCOUYP2e9wheNum8gXNYJyctqSNgaSOloSd1WUK34zNhOv
EkE8Vi7toG8gTnOtjLOEryXtZXQUu2VyXr0q8b9f7F1DffUp9LPRRvKrQvw4
h/zWWlk/IPmmVXPfv8pJ0//N+QvBNeB/p99tzBcHgZpLWtZiPHYzqJ1ugyrH
I6hHYzq/63WO340tJh1A/9vRtIfpSGo4VPK7PSVuXehfbS2pGkzcVnPBGSj5
Lv4x66UenCe//Yd8x138t4T+MjfEkV58gvLG5d8E7fHhDdAZG6qxnnOYND0I
60ZkIPleGYh5vboC1BpRAnuoA5oBv1k2BVTt3p/yv9/O7wdspT6fZBPXSMlj
U/KmOf1p+oj+1axXiuSf4iR8dVJXVku+TpR8bFZCvr8CaBffrvCbPvQl6G1+
3wNUORlaBX6PezZofdBFzPukFkP+2b4l+H7sJYyNJ1++SHs8dQnzb02+DDzH
f4Q83fkxvqM5ZhC3+0jq1fM46XNl1HeC5Es08SllxGd+JvGbLvU5X/wZLH6O
ySN/FOPRSD/P+NvxInBYSTHQx6yYRjyjSy8RV8x5yO1cfgbr3oknof+VFseg
V+1rhzA+1XIX1ttnJ4H/2NoM4Pop4BzWA/sSr//Xt7Av1IH69NwueXSU+k/K
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
8dm/1/8LDPGEJQ==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHlYV1UTvmJpibmVWpZ2LUEz0T5CS0G5uTxKipRgLpVeJfFTE/jc8Auy
i30CUi4fIWUuXVERMTckd+kKGAjIkgmoKFdEwfUnIO5L9r7TH/E8P+Y5586Z
M+/MnJk5p/PkkFFBToqizH7myb9Rk8LemzVr0n/9m/w1mDLp8z4eU/76+Ir8
nvxZJ686vJ9Q0+k6qOJew/GtM6DajIug+srLHH9SSb4gUi37EulSB6jtdJ7r
E65x3fQqfh9P+Wq0zflSrtPTKcfyEjl9SVXfasrx4r76oSucj5NxTgW/f879
9Dai/8lyyonkeiVG9HzpAvkCRK9E4jIrOa99xvVmMvUz+tIOSgn3M1ZyH2WL
6OEpegzmOq2G39VrtKc+g/vYicRjmdzHSuG8eYh86mjqYbxPag8in/If8Uvb
G5xfLvZvL9/9OLbnEJ+x6xzlJ1A/y4fyVAfl2L3IZzsL7mXil45l1LeOeNWM
O6Rb75P/t3p+129znHaP65QHnA8ln9bnIWlLzpul5LPb3aJ+BynHTBM7WdTT
jKUeRjFx2RIX9rf8rk0VP/gSn7lL/Ojg2C4kv7FD+PrQ/0oC40NPyeF+NatJ
j24k/1ultNMmsfPfemY0cN3ym5TvzbH9Du1izSO113DeWkK7mCtoB30nvysv
OuRciX6txb5BEhfNJa5yJO6nynnIp3+UKRIXbWT9vWLu1/w4+auCKH+xdR1y
K38HNYY+Q/klP2FsnZgDavpnk++l1yReXuZ+j1pyPHwcxy79Oe5EPitpAfcr
4/56EnHp/elP+23iMDcSn9WC+pqpp4ljlfhxEOPY+k3ibj3trnQkn/nRdsp9
7Es7Fflfg3z/N0CVN7Kugm+L92XQxDsXIC/sa1B9aPdKjLdHgGrTqs9hnWsH
fLdrl4IqE1ZexPc1LjUY93uJcl8YQ/uU/Z/7d2b8qBpxqjeJz1jGvGiH8Nzb
oZKnNMalepi4tPMy3z1Dztcw8k/py30avUJ8rScAjz4hqgrr1vmfwj532xWD
70GzfFD7TBb07fldBtZdf4ix2WJFHtZl+54Afq/9x8H33Jbf8d2RUwr+zC20
Q2Bb7KuOuct46ZBHff9NfY1c+sdcQr8qPTmvFpwllfNqlfFcKR/M43xAH8iz
Lx+6Ajl3wi9hvs9E+MFsEwp9lBjnQ/gevngv9avbifnq2kTwR3VZBXusCFiO
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
7jsLRf+dcu9Z8YTvT+IXbws=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1WAt8T2UfP/aWS4mKWkmcQoTIJQrZGZHUclk2Qs5cSiK3SCucDVM+vDaX
JaRTzeW10FxmXmzH5dVstLkMY9Yxl22YxcJyffX9fu3z+e/3eZ7zPM/v9/3d
n+e5waN7fxhgGMb4yvf+9Y74PHjcuIgvQiv+MxgWMbJN62H/fKyt370/p/hy
adA96m26BurfugpqtL3C8Q+kVvlfHD9XBurEcJ/ThfPmWe73PuJ3u8d1jrO0
rju/OyFc79oatynhuAv5OomaH8Gx55STfwnPMztz3qpDPm4sqdGP82YHjv3O
mp/1J8dttD79L8lJatwkP3cHz7cCuM5KFk7pwV1Fah7kOv9v4rIbka/7Jcf+
ZJ37jL5HSR8+5XD3cWz+KLyu1r8jPTaVfBn87ueTn21TD35PUvsD6TtIdmsn
e8kOjqX5n2XPN3muPU16SRLOz0t5zi8at7tJuoB8vEzhL+R51uK/eU6oaDvR
WjfI15c+Op4WzuOcz8jh/uo+vw+QnIGUy+kr+7SRHRqQujOkj1zpozupXVvz
c3iOfV56vkI8ZmNSu9sh4i2KJZ/WizhfPY18lqfy+5YszrfcxnPzV3C+9UbO
1+F6t8Ienu9t4Lov15I2P8z5msTp9Dkpv5VcJ+WXvWS32/KDDOEYJnzV9H2o
1teQ31U+T/4/yf/3iF+VGM7nDSGf17+S/bMvYX7oZyU4Z8RroPaSYaDu7qSL
mDejSTvc4feGX2OfF7eK+7eeBHV2jOL5I2lP63A++aScop7SKKdRQ3Hbnf7u
PKt4SRWudxnvzjOy/3bhLJL/yq52/DKel/wG+cU3Ic43N0Aeu0UHyG1EHyzC
+Hn/HM6z15/F+pntT2N9xjeg/qibp/D9qb/P4Hunw+cxfzSS5wzbS9xnF5Bv
753Ubz/FbchZypepfPaB/Fxx6A8Xno+vy/6K56OK207y29ACnj83k7iab+J8
q/5cv+cu5HFPf1QI2i6vAN/nXT6Jfe1fycG642UHMP6k6n7Q8aPTQavG7AO/
yQv/gBwtFkEv907iuUMuAqeRHUK+afRfP+oc6QLGrTtP+GQXQ/neuCV/jVV+
jy4Xnkvc/xj935iRwfNjvibO3DD601MJxVh3OtkHjkvxR7Hu2fbA4eQE7ML+
KVGbsG5zzFqsOxmyHvM/DEvGObXu/oZzQybkY/+NJhew7vsG4GPOLSC/0p7U
68P7KN/2C6QvKt8pr3hhiqsflR+T73C+JfObO+siaXo2171MvVm/XyW/41fA
32jdhf6W/ABwmZUqwh5mydUd+J51xcM5DdNScP6R/A2gHXsCl9dv+mbo4bNU
6MG+lJYHujiDehtajfEbN4P+ungucfZjnBiZtINXl/5ojJOdutCP7aHy0z9v
US9/Kv9vPcDx87uJq5PDdaeaEV/mS/BH/+P6uZivvRL+5yz7hX43cd5unJ8e
vRfrRkb9jnH7F/DdynyU3zvmQQ9u42PQi3ViBeLSbBKOeDRbD6Of7v0v89Gi
clKnJvF8RD81x6qPuKA6OlNx+tMt5e9bsuM11SHmKbdgPenrymcRxdSnNRJx
4s+p53N+DPzKbb3kBGhhJcx7FXqCulUvH8f5XYMPgv+Cz+m3cdWA3zxz5jD9
Lwj5ya88D/7hjV3MfJMfSVzz02i/VtS7F848b1rKFwmMP2+n8km4xk1Zb739
WneN+4woxd8elziTk3C+taMA+nUzqhTTf25ALm/TbFC322zgd2N7AZ/fYC3s
bA+8noV1zYYj3ozYUtp74G/IL37b94lrQQFweSPjgct74hfm6XcUdz2Y95yG
qmf3+6l4xeFk5ZkS9VFdGXfWh5x3cph/rX1H+X33OtIDVcDnXr5j/JU8AJzO
sUJQq+wK/Na5+Bb97Im2iEt3Ztkh7KvXOAPr5l3dA3n33j7IeN4GfVj9t9Je
od/ST77qRn7/qkO5hjMveNOFrxbltwJllxTVg/t9sfzWD1DfeUz9SzDzrp/H
vOl+V5362DUK/J0pDWA35+ly1De3x/Az3BcIP7S7zoCd7LmdgMOaXzMT+1u9
Bb90wqexLmRXRh2x2hzAedae6rRX6l5Qs/77zCtOCnHWzaM8F1nv7XTWb2OD
+sFXVdcXqs6fVn34RvE4gPnFeeUY969mPXCuT6E+IxrSHxs8jLzprZpzBOt+
bpcNPnnngMdvHJcKfiWHtmP9hK7In27ISoz986HIR37cV6iXZpwN+3vzj8Mv
nHZL2QfVOE+cFZNJn1xIP5y5i/Kp3/LfFp4S5ctQ4aqnfJJEfNYM1gF3Zx/F
278Z129cR1xZIQ8inpywZfAro8ZdxI9rR27DeGxAEs6t8gfrXPQl1AGj80TU
P3ddGOLOyfLgr9aa0bC7V+kK88qLLaE/MySG/t55AvWZM4bz3YuIuziScp9n
fbBqqt8cKP/sq/p3SfessFzOr4kgffox6ivuU/A1dq+HH9ktEmAfM7Mv8rrf
qAzUqTqU8kemg3qrz6fh+ysvoP5Zve7CL80DFVj3Uzeir7FjtyCvuIv3A6eb
OQDUfG8p+7noLxDHXqPd1MODrVgvHqpN+1jyt+2q64tkvzTazxqvPBN0hPjf
7cX+9tpU5sP0QsbT9+GQz3OXbMG+Sd+xfm99GPYw72aznlVuwXgb0p92GtH+
fzh3ay3Y2Zw7MYPnFIE6lV4GTm/E0WPYv3U26otRIQhjc1NqLvGOY3/UowR5
yFwaSBw1mOedFNW/HorDu8Rl72I+sst5T3Hfagj92PkbcJ713KOsz0Ur0U/5
g99g/zGkAvGWjoGcxrFUxJN34xzi0GuZyH2JMcBrbPwZ6/1HH4Re7Lq9mT+X
DYI9Xbcv47dOP1Bn+Eb0A8ag2ci/fm5fxKm/KgR+a5wrY1/anvZz43UPSFJ9
nyh8dYSvJe9n3oDRiG87qBr7ki7rYBfn4jvrgPeb4OU4r0lb4HT9KTvBt1Yi
5LTDP4V8/ieHmC+D8oHHDBwDfJazjLittbCblbACdjI6bGA/HjGPdH1T1pWV
Q9knVLsDf3JCVyJujLnDGVcj1EdnClcv4ewqv1yi/u16PP0zthH9+0Rn4PNi
p0FO569HEFfW2u9WgO6qkYh1tfYx/nLHEFd2xSPUXyb1MyoOOIw+PuS1aoQg
3sykEPiZ/fsk9pmB9UCNdj9wnNyZfUKpAXksdw77whaPUd7DvB/7KcL3uOr6
JL3LzFC++Zb+67/Ke7WV8wH7hJg5zNtPZCEerClVke+8uoPhV+6pnrTPx28D
j/V0VZ84ZqMeOg1Kea+bkIX8YBS3wbw3KYp5sMMSxkGVLNjD2raOebrbu8Sx
eTnrXlgw7TFzAHHVZF/tvcD+2AorUx1QX11f9W++6rnuTf7gM8Sdm0g7T27K
Oju+CHo0e6efpX//irxm12sEaqVeYF5LzKX+m2XAv63DZYgT22/Ecdt+rJ+X
F1PugbwfG417kN8n35Iu53uAO20q6TMjKW/sQOJMXE1cddSPleg9Zof6leWq
h3qvsXRf9/apT9tRyH0d+W5iBbzEfV9PZV61nmRcF+oekdSQ46yt7HsTijgu
/ZV+8EdFyjlyHPHcWqd6tZ9yPaJ+5Cj7LS/gINdV5LuE2Vz3mHLVr2z6m31G
7xGb1E/2ofzuZfVjlnCv0f3vqur/a+rnBuudrlkRaQHfd8wb4hfK/t2vf4Lj
6pTPTOE7jTud9w5nrEcazXOcRL1/XFJfP133tu7Sbz32W3ZvrreXUt/WFOIx
Nt9/B1W/+ZD2G8orn8kv35OfNhCfoepntqmOjKCevG66J55WPhqt/raa5FzN
e5V/7jbXDWKf7gUVk3ZgH2uMkj4f1/pZNxUH8qeWJfI3vdOlsr+//57s52l+
kPpjV++YEfK/RNmjv+TKoL7M95RXm+tdRu+J3v13uHzppwXl8Q/ovhh8l/t+
FU0QPcJ3APcLrrcjODaa8rsXSmod5ry/hnpxtgiHqXeDWXrn3iE8C2WHl+WP
t4nXz5GcWbrvrdA7zHrhvym7RGrfZu0LVx9naH0T5d9Vsn+gaGP5S6T0EExc
3pOU28sgDuuO+O/XOVPEJ1v7g6X/M+IbpXf2/+jdO0F6j7///iD+ddSHtb83
/j+oF6kH
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxdWXlQF1cSnsQ75a1RVIyj8cJslkSJR4g6VLKiG+IZRSiVQQVxvRBTMagr
I2ppFCPeKEZGPEGDB4hXgBHU4AUaj3gtDKCi8BOMB6KIrunv4w9CFXT1vH49
/fXr6w3tx88YHviuoiiz6r79M9x/tkdIiH/oiNp/MQH+U3u6Bfy16Mzftz9m
WmVp/7dU9X4tVOsM3hz5Sqh1H9RO4HNnyNkfUf5PrBtzsG6ng2oLQY1hoMr3
XB+FfUYLvncy9Z2k/hrkl4KqO7lvD9fzSdPwXvU69cdCXh9G+pL6N3P/r6Rd
qTeduDqDN8eC1xuTP8j9Q4jzOddDQBXiNewKyAeRukBe0bneuLKav+wn5KO5
nkO99LfehP7pC97MgJx+GtTqQbt20f4d1NOWevncqsfnzSmfSX/l8nkR9c+A
3VYU7TtPvXcdwFH5FPI9K3hu1LPpJfZvobznC/gpDnqswDfYf5/+qwne3sr3
dyeuddTXmri9eZ4uxFPK897J9xi024/76E/Fg/4pgl1Ke7zP8OV76xNfNNeb
lcMu72eQa0375z6H3i2P8TyoGPt887Ee8Qj8BlCzSRH0/QP+UQ8R1zzG0RKe
ayLj4yfaf6WyWh7Y3GcPpp2niTea8lOJdwr91IXvWQ48al4p8DtfBx+wAevl
+0EdOaB7chjvfwDPiHjoWxuO9clf473/7A2atwxyvwyEnNt86N8N/9hXiWMu
7YljfvjwXBoy/pKAX/eqigeuq8QdBP9bXbFf6wf/Wq+aQv/opUXyfLVbnsiH
/npT9Npx+aI3LeyB8Dk5xaI3pdAhOOd4C285jtyHPyffkfVFS0ReC/MUOSPa
uUTkI71hZ/EkvPclcWYxDjeSDiHOBjyfa3zejvhcuB5MfAMRb8YTxJc+cSro
tYGCS9nmcUnsj1+ULPLOJ/eJ3S7vZ8jzRvtvy/6xJwqRX6kPhUYHi92214cO
+HlAgfA3i26I/N18+OvbBMFr7XYVeWu8F+w8XQC7ylm3ZhFHEOPtW+JLYRyz
PmgKcNgLKKc8wPr8rVh3ywaumHkXhHfMPCh8avLPwtuJCSL/Y6Dgsr39RN7q
/FpwmQ3KxU79ehD0PXCW57rHGZxfrdyLIh8w/qrwb7bng7qJH+wvKrE/nOew
nPWI/c3eT7qXccvzs6dUVPOHNYrxHXIL62GdgffRDVv4ljWPiX1fJK4RvnnB
ZpF/VuuyyB0KRhw2QD6pX16G3mW3obfNGehtl4L4u3X1rtC7H10Ru2L8Bae+
tVTwmZldRZ/1eRzwTGadSya+e6+r1UWtCfGF8vw6op5Z2axPqawf2zLxfGcg
/Hd8ksSjkaZHy77JB5bL89iD6fKetuFyXvYq1APbhf2iEf3Xin6ryzzutgH4
tNsF8Evib6K35/GzIpdrCz7VaZacsx1zHPsSGJe/sY578FyeMu7GsB7mMU4V
9iX2bysKcarERYK31hcin4sOy/Pz4etET6x7otijTYD/S0phr+dN+O0T9Al9
Ge3JYp77oj/aaS8hvx31yQq4Ygkd0/oMcPneE7qii8ipV+5UqxtWG57jE85T
Vf1/F+OyKfvCv2GHOhT10h7NvjXUFXx+SI7YebXLEbHTEblT+LbdJR619O6o
G+7hrNNZwKWgzmljeW4BrM+zES/a4C+B75tcyTfTv/SAvG+T46TID/pe8Onv
FEPOAX2KO+PBnXXFwX7Aucuoqjfsi2o51wueYH828Crt6gNfvYprsu+D/SeE
9quVIvJ1c1Hn5o17iH3jgavDKuzbjr5oDEQ8Ku9Dv10/Hc9LKqVP2A1fnhLe
6bt44S/PkzhVZ7csgh/9oHcX4syoYL5V9fmLPK8BnEP3EV8h/XqB/ih5wviF
Pbp/iditTXp+S+xL7Cp5pg/zkvywDjn/T/R0ykCdnLIDdSX0Bepi1/fwnhGw
z1yp4j0jfbG+aZrkl+bkKnGuvlj0i9Cte+U8jag/RE51jIN/DvF8LMSlWVX3
t1Wfby1P4j1FnDFV8z76innKxvpWH9FvZPSV/Lf8yyQ/jNpDMpHfDaWeqj5J
sq48C5Y8NLqckHpvhX4g8WW2nII88p8I/nJrOXdV+w7+urRio9Cdi46Knrwp
4jf1/kGJS+XpQtgVS/t3AZ+aTLvnEwfvG/pKnttgUs6ntjPqnTEN+IzXjM/s
bJkzjMW7kSdJo9HXGyUKPiXtRK7IDUsW3qzYKNQKUuS5ai4Te63WGZKvxpnU
bJEba+4VOnid4LOSzgo+rc2P4i+zrDbeH3USeDgvWj+wbn7Ges95WpvJPOO8
qX5DahNfFOJSW3Ia+IxeoA2aYs5Yasn5qNYLiSt7QXM5B8PtU5nL7M0z0dcX
lcD/Hd9Bv9y3XnDq4QlSp6xm52ROUf/bQ/JNX5xjip21E44L37I/4sV9FN6f
jv6pZfPeMgb4rKGk82i/yTpKXptNvMRv+2Ae030eYl8664TRG/NUn2aCUwsZ
jLyP3SBxqC0oQXzOjYX9n+6AfcVFmMt61RN5I3ga+mhYY/Sb0f2T5PlT7w2C
72gNqc/6/G6YS8evgT1/loByzlc+Zl9wZR6+YBx+zjjNrqLMzz6cdx6x7z1m
nTmfyToYDLkhqzEftWmP+tA/TuqfeiJR5kTzSB/BYR6oL8+1//ihb6xtB315
P0Df80rIZ0XKHGT/5Lle5NZvOid6I4plXa+TiH3Tgc84wPoykfH5FeNvJJ8P
+ts9/yb5Zzy/QOCz8nl/68D+PAFxq7peAv7wDPBB00FnT8f5Bi0A7VGIebho
CPxyjfmczLr1KgZzbCtvmcP1tq7ST9XXgzB/Rq+W89Vmwa/KbdwHrRaIT7s/
+8C7nBdesU9EkUZynfOK5sS6U4C+rm4n7n28PybzHpHLuH2Oe59ZeQ/y/dJA
XeZAj/s6yHVBXTCL4R9jAHjrX1k4v3G+p4WP67AH/HuCzxi+V+JTbbWQ58J7
8CTOWbz3G7c4r6g8v7Lq3xssB/OR90QzFni0It4Le9IPN1iHFwOn4gScRn4h
+KYXoe+T1eCPjYSff0adUhPRdywv3G/s2y+kTinOfWVeMTut2CZyPR5Jn1eT
HiD/1mCOtSJw7pYf5+Lz/P7Rg/gimV9ZPI9BjNvDjMtjlFvLPt+IfNV3i8P8
TuDH+64P9KteyAtzSwr4GYfwnjMrQe2NkN9swk/xT3HPXZX4u9AWKdIX1HOV
cr8yUr7C3Bnvg7o0yo/nhjyx6tO/rzDfmceA1+a9z9zD+Pyd8TiO3yNmkqbx
/MYyDvaAap8R9x36ZzPrdC7yQtUOg66MgVwY7tlWWTPwSTlSN5VTddBXWvjJ
fGnFlG+R5zUnydxudIuQ+5E6Jkj8YDzAfciIQD7oqcCnTiOex5XV6qPekvk4
hefGczQ6sY7ye6XJ+6NRl3HM7zVaDdbleM7lyfTDNcy9Zg7me2sT4tCY5Ya5
+GCZ5JvtMR/4Gj2TPDOPrJQ5U6s7QeZbbUYZ5puwWMyFeVehbwHqnrGR9WEC
+zy/sxih7HMfM5+c2Pd5T9LzuK4Qby7jmfcn9Qrxd2M/bQqqV313zUQ/MU7x
vh+BOUi3y7BvLex86wDc49ZY+L5SloVzbRiB556D8L4ifI9SSziXl3Ku7sBz
eUi/36R97BMa7yc266pynnnIemvcoHwo841zuTaH92T2HWUvqJZIPpO4S3m+
Dj5P4POQN9XqgZLK/tOrjP7lvaUjeHsG46cZ74mv6f+zldXjcBnx8LumebT6
d20tkP7vTZz8fqGmUk8S93/N8x5Iyu/6SlXd5flbw+mPBuTr0F/8fm9GwW/K
h8x31vGqfLer/g9wgfg4Nxv8XmJPo933Wd8XM0753Vmp+Zb+H6pn9ME=
       "], {{0, 
       28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
/f8HVYWVHQ==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1WAtcj+cef3M2sozmPkPvmDW5zS23Qy+H7MI4ZNZh642TSTp8dDZRnHcu
IxKbtMjlPcyt3G9tRC+FVGIVUsqzqKRkzEYMZ77f3+nz+ff7/J7neX/P7355
3pw0Y8yUOpqmhbn++W9M4OzBs2YFzhlb9wUSFDjdu1fQi83W8nvxd+znuz4v
oPctQPONi8T9FKDz/DLX69wENLyvAFrPsrnfn9/bRTf43Ykirre+yvN7i7mf
eY37DfJIz5/0bR9+Z+VcANRf5XfaSdI1euTz3C3BX+d5O7+QeF/St7K5rruf
IVxP+vo08m//q4TnZou8BvlXWyiPGkH5bY/Twg/pmpXCb1d+76Rn8HwW5dRr
ea+RXEA8nfStm9SX5Ud57KHCd1vZf62SeGou6X4s8t2i/q3evF89u02675Ty
/IOzxKuoTytL+A89L/u8V+tIukafMuKbSdceJ+ddjnP9szU8t3kf9xPuEB6s
4X4u5VJDyI8Rep/3Pv2d66MecT3wMb9TD8nfxV+ptwfUq965iucX/8TvQ6q5
voT61fbLPZE8b43kfXrQde53pjx2e/GXLbSftZF20CrED6bQPvb65fy+flEN
4NYLd7Bv7QE0o/K4/vlTQMt9GeUYcIx0LOpJi6A+nOp7XF9KqO5VUL4Y6lsv
fMDzragf7ZtynhsmeptH/9E/E/+rI/72ufipB+U0pxA3omg3fR7Xjd37CUd3
53dDblYD+vtX4Vxw8G18n1FVCfqTJgE6U/NuYX3+JeD2pR34Tl9EPegLPoD8
dnYaoNPPH9AovoZ9Z4Yv8dYLyF8ziYNPRR827ao9o1zmI4nfN6k/+xWeNwPF
bvdoR1XF+FUpqZSzZjjh8yDca+wtKMM9bp/fwPqe7aWg13/qdcDI/cWgdztW
4b7FHwC36zb9GeuZV0vpX5+Vg077lwDNhkmAaopxE+cSUyvpH6nVxCOp5wO0
r1ZL/7YD6Acqg/lBnSRuhjI/6QsYf4Yf/dGax3xm/qLzvM9/YScrLwn3allz
wLeaO/4Svv93cQbgqKlpOJc8Jh30tp49Ddjp+Cmsz9CyQbfFkyuMl5KrgAcj
FPWcVUz/uV+I9U/qQw+me3P6w6ZA2jk0kXKVMF4tD8qpRdGuxnGx56pL3I9n
fBrjaS/7x2j6wcQ02EuNnEP/S7GuQY6UyT+BnuvWEzifODMZ+G9lu4E3mbYH
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
/dKf+vkf+2NXCg==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtYj3cbfxzClsOcm5k9sbwjL645TC7midnMENq6tNfhIbbpdWbIYT3v
NpnRMKptnZ6VEsZWQo3y1BDVVDqZTg9JQrOlMJW99vnc+2OuK/d1/57v9/7e
n/v8/TovWD7zvZaKoqxu9+S/mfPXua9aNd/Ps81fzKL5S0YOX/TXx97y9+Sf
WVVxd9wTamTeBbVLr4NqvUpBzZv5oPr8StLyGv7eroQ04Rqo2ulXyul5g+um
3wFV6sq5bkcx+Z9ETgPPMfvkkU4grxRXUd7x29QjsZp8Qx3l18i+sbf4u7dN
ee48Xw3hfl2XdW9xv/2Qein3qL/h+DvXtbzKcypIrS/4XX3+rtiB+mvvUL7l
RrxKVjb5CuI0/IhL/Zh6G17Uz+xH+5rXqaflRLlqM3k7/hfKX0w52nieb/US
fQLF3hupv9md5+uTBNdKseeSvH/IN97keu1lylG2lHHdVJFXKX6r+ZnfJ6dw
v4fgduZ+uyP3mV9QT+taLvnOjAtl103y74odPuU6dabYeyGpUV/I/VX7SQ8Q
vxlEO2mtqI8VwfXWGsrTmynP6MZ4tNr8xn1zeL7tQv3s4iuUs/wi10cFcH/O
4F+x/tjFO+DjGkCtt7uQd7gHqu4LroW+0fVYbyW24P5Xw4gnk3LNnsRhHhE7
JtJe5r/reX4m49QuuMd91eLXD0jNfYwjO5Z2M8IpR5tIOxjB4v+P6V/tbeaZ
lkL/Gt6OlBvdu5bn+lVDzx8zr4PfHHYN8psKSyBn6YrLWN89LZ92aCgG9bxt
Y53b9CrQui7Abf/xAc+bnEH8kdRLyaBf1Ov3+d3hIXGUCL9P4n2IrEuj35RJ
kqeFEk+zC4hjAu2m+LMumAP743zNLQH+UBb1vYHz8+ZWYr/HU8CluiZDf73y
4AXIef2b0/jd64Uk7BuUfRT8/THg7UmN2ZCbVlOBc7ZOvo39r/zM83Yz7o06
xp8Rxrpghjwi/phG6tle4rG35EtXicMoUv0zie/XidduK3npfZl2XfIi/XXH
5yb2F6cQX7fTxHd2LXDZhck/4fuVauBQVmb+gHVaUjT0dZyyB3JSY7dB31DX
ffi9dV4mfr9YRju1/bAG+zZ+hPP1GdOp7xbmiX2EOFVn4jS6N9GPYaxfegD9
pGi0i/kj66q1uojfh5ZLnB+EfOX+FOLrWwZ8ulMU4lLrsKoc++I6If6swogz
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
0OfyHjOaddP6hv6yxtSK/nIPfE7828x7lfat2OXwasop92afr6zC+drWB5yv
s/JgZ2v1IVCtfzH0VxLG0+6Pl3Lu6tHIedV5OO0/L4V5njWJ5/TYSbqcc722
6ZDcC/heox9OID8omfZ/9QKpq9zvNsg9yIO8rbFeKv7yDrmUePUmwf1+o+Dn
/UJrkvedZMnTu1ncF3OSNI/zoHmO9jX9wzkn/nyHdWBWBPX34T6jXObBZ+X9
YZPU8f6iVzb1Mh7Ju2BWrpwv77dvc+5Ursh7aRX7m/27zC++9JeVIvfd/MuS
h9I38uSdbj39ac7gu45eLPl6Vd47LjCutYm0hxbJdUqkxP91edfpLfltU541
spnyh/5Bfry8v/aTOt6G+us75d4zWOIvTe4HK8Ufr9MuejvpBzJnauvpl7/v
90Y97aJPlnfpatZdpZ5+M/ZRD33sA8lP8qoHefuUvPs4iz1qJN4vcJ0xjt/t
//HdRLlHao4S+9ykvtZM2s9cmMl1nekfq1bucaMkLp1l7kqQ909v6q1JvbEd
5B3NlDpafY60lbyjzmQcG87EqbWW++82mVtTJI6ixd8b5f24gvawPOhfo5b6
m9/Qfsopxps6OFf8Jv6NkbhfKXNUo+TRizJXNsh78Arxg6v4ZZn4z/8Jjv8D
PBd5lQ==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
OEeVtWRcV++kPYvY/5rHmAe0FPqnUyj3oy1yv2sv96oDvG8YXrS70ySG3309
GHjMkRvZF18dBL2qVtvyuM9GUKdx7WXsdzkN1Mybwzp443t8p83wAjWCX0b+
UAEh6Mds10XUQWtRIvA5/zyMuuHE9MK6k/FCIfUyEjh113zUW7tPJvParCGU
dyXvLVp91nlzDfE4WbSTvVzuSQ3Xks9vPPN+o3HY1yp3WJfTl9I+e+PYh0R8
BTm0A10RNyrVB/KYg9ax/hWsgP+qRE/UPyPLLR/r7qW0W9ez6N/sjInwY8Na
hnxkpqUCp/lGOfSnuXbBT6za6aw3U46zHv1Yj3bJZh/y5P7rHBP/my1+u4Dx
aeTHS50PYXzV9aLdZq+knw0PQ/xoYVcQN2paD84HuNiflVym33q8Snypz0Au
bVcB4zLxK9RxPTn8f6CLfEDtEzbyqaqsAl51Mw/nWBlvwL6m/z7o16gKKuH3
DyCf2XQD7TiT/mlVsk47OdKnnZV79fu8Zxn+Fu35ShLjunQz9jX71JxmXOxD
fteHnk4H/x0d+c9oPwo4rVY9YU/V9wPmz+Bu4Lc3XNgKum7wOtqh53rs06l2
F/iHroC+9N4XELf6q0svkK8l4lRFraVfbxoK/9TcX2M/s2uY5JPzlH+VvAOY
UveKpC60Zp7VKwbTf/UE1rOMaPpdq+3Ib2bMs7vB167tJqxXj0rB9xVROzG2
fCCv1WD0dn6nb8b8gGVJ0OcH9f+LfXLGg8+Ma3SWdj7Bvi0tAf6tF/JerL0d
SHv5d6O96jyZR52WxDNyKe209jLljpZ3jGZyf5gt9/aHWdRDm2+5fs+H/cI2
X/aV26fyfrY4m/1+4/3bMH8lj/hGdgUOu13nLdj34+d3YL9v8mifM2/z3hey
H32Z3SKAdc5SiE+tbSnv/xW3mKdLmrBvuLaZda+E90Dru76Ue+t51t/mCZTf
R/rOMKkLbeif+jTps6vpv1o39jta0izOT63mua0P8N7ZfwnvsQtKEU/qdhPe
0695or7p856DPfTydsgjWovXWRdLPfhOEZnCfDxkGP1r+VjRM+2gR/yH/uTB
PtDplCZ5bzXl8uA9ySj4mPxjr5Cvnryz1Ml9tpf0n33kfl8sdp1DfKY37a0v
5H3Eeod9u1O6jPG8YhH7+rst5f4Swj5qZjr1XDSc+3cx+F23OO6/KUfqktzH
Lkqfv4P53EyX8UN5N3pJ+spK9s9WCt+t9FclX7rkfjNX7PaI9tIncT/7jrw/
riHVAqTez6NejAz2a/pcUqs5+2/7Ou+JZpz04a5Kjl2ct/2lTx/C71RuLdcP
PuD6KVKtUx2/X3mf67ncx/pM3h/7SZ/1nOR5P7kHLJD48pb3zyMyPv7kXVTs
tVbs+QffZZwOco/3kne4lzi2XqfcThLl0Trcl3jl2Ax6yPVZpFYk+1e7h+gx
kt9r5YLnPvHppYI3kvgdg/29/Yncy+Wd1vGTfVZI//yGxFWC1Lln5d1pnOB6
TeyeKnn0rtxvV0p/01r0ckHeqQdQPuOO4OouckURj1El+KaT2huJw1jBPla9
QH5nMtfVI+F/T/TxQPR0SXD1JlVh8v73rvTFg6hvrYX0I0Hif4fIZ3Rkf608
pC7kyntLvHz/5L13J+PPzpd+9E+pkz/L/f9D9kHWUe6nSb9uV1DP2iuij860
i+VBfMZH0s/7Cf+LIq+f5IMC6T8q5J22oeQHOffJu69+S3DJ+6beWt4Fsx7L
9RfzXYHP
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
m3dm5vBP59P/B5n/wSc=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}]}], "}"}],
  StripOnInput->False,
  Magnification->2 Inherited]], "Output",
 CellChangeTimes->{3.804008176843092*^9, 3.804008327469802*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"af8f1222-a9ae-4d6b-b1b5-a284e33516b6"],

Cell[BoxData[
 TemplateBox[{
  "NetDecoder","notarray",
   "\"Input to NetDecoder should be a numeric tensor.\"",2,71,8,
   31149860323153254385,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.804008176799068*^9, 3.80400832750233*^9},
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"afc3b62b-413c-4158-8b3a-004f574af9fe"],

Cell[BoxData[
 StyleBox["$Failed",
  StripOnInput->False,
  Magnification->2 Inherited]], "Output",
 CellChangeTimes->{3.804008176843092*^9, 3.804008327510722*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"2f48805a-b2b1-49d3-a1fe-2e9ee8c29733"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sample Outputs", "Subsection",
 CellChangeTimes->{{3.8036889174690027`*^9, 
  3.803688921594676*^9}},ExpressionUUID->"0da17c6d-e25a-41ca-a17a-\
520718961ef0"],

Cell["\<\
nLatent 8
\[Kappa]Dist 0.5
maxTrainingRounds 2\
\>", "Text",
 CellChangeTimes->{{3.803689003205154*^9, 
  3.8036890553655167`*^9}},ExpressionUUID->"c64f3881-359a-4e44-a0d6-\
5659ecc689b2"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
fKgvvz/YZd9bIt/N/w/HHsC/
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
j9m8q5i7tU8pq/fZTvo+/ssjuf8P8wRgzQ==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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

       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1mAl4SFcWxx9FWwSNpoyEPoaWLmZoSgnyQltE1JBgQsizZCliSRitNPU+
S62xtMGklrzYiQix7y/2qlBBSQQvsiDa2oJQZTi/O/m+5OTed++5//85555z
7204eFSvyIqapsW99uJPr0HjA2JjB30dXOVlI2LQiFa+ES8/+qjfFz/2yHW3
/V/+c3eVSN0vRaQ5L1OkdXG9SHeCGpdg099qL+2QtSKNK7SNzQuQteg3Q7aI
dDpmoCcFfVb5RvqLWNc+v4HxxWm0J7O+MXU5415byrwAvuse4LBvoc+sxjqG
72pkMP12cCo4+zPevboZPWO30m6DNLvuZFwUOPV74Ndm7GJ9f4W3Pv164CLm
r8JebvQmZFuFb4XiE7gdHKU7kIWLWT9R4f90DuNXpav5jHfbJyNjsbuTrtZv
NxNcmxXeNNXfaxnrTcP+Zh346803Kl7baFcGh+MJfu0q0ug8iu+1d4PryQ30
3L9Ifw/aVpxLe8lt5ncuZfyOO/RXfYj+oDLGx/9O/1gHfenw0qNVHPy1krbn
fvSMhpczGz/qH+JXrTV2tqKwr1NzD/aZo/jlrmH8wR9ZZ9lgZR/4OMkF6B8I
XsMbnPoz8GkPbiKv3GV+6T3W24B0Fyq+O+4zfzdtN4fvdg017hP06xuV36aD
3w1Q8XxlBe0k2u5Q5ccK+N94eIx5i4hTbY6KkwP4VWtzifbiI4xvpvS/c5z+
fT8x/yZ69DLlb4240acrP+8dwLzHkfAts2i3TkJvD3DqVbL4Xvsc639czDrX
cvn+5S98n6v21XH86fyN/WDu3aHicB9616j88Tn2sa3JjB9PfLoexKP1hz/z
Ezqqfe1Lv29nxoc8/0PmTzn+O7yKbkl/XqXfZHzvPGm784rpX7ZS+u1uk2W8
7VFV5hvDZ6Hn/gKRep0GrBs0Hr4XZ4Gr8CB4A1QeXK3yzIET9N9X+z9nveLJ
fjSWD0LfUU9wF8bLOlbsPsGhXb4JLp9T4FywuFTG9024LuN84opE76gjhTK+
XcNC7B0o/VZgbrH0b/lAxmtrh9wUHrHVRY9R/p7o1Yd2FWkmG7Ke/nwLdjvZ
DzxnVN7t9g24W7CPjCLiQVuSiP0DyWv2N4Hw8syQ+e6hn9H7ePYN+f7ZhhLi
Jfia8GrfzJX+E84laa/8+azoy/vtlLQPvSlSn7gnW9YNGSLf7eo9L0r/m8NF
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
In/+D5XoPh0=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJwtmAl4D9cWwIdXiXryPXuobYIg9AkeiViHILSlCWpJiUmJV9uHWFvbaJOK
RBNrQ9s0Y993TYklY0tTraUiiRfE2IXQhtoTnp7fzff9c74799xzz37OPT6f
TOg3qqymaZPLv/nXL3J61+joyM/6e/y9iIocF9Am6u/NOur35s+ct+uPLm+g
vWq3QG3cMoHW+CV837eT9dg9AvUl3wk0//MTcP83Ap0NewW6A9aC12MT5+Zz
3ri9HvpZSeB96bC/azN06q7mvuRtnC+/Ffw6KzmfvZh7RqXxfeBB1nGpnA/h
XiuFc3brQ5yruQ/8Mjugm8o97rAVrEPYt19tZL0wmf2+a6DffQt0xq8Db2c6
9HzRm5N9gHO57Jt3FrLuhV6sstxn7UUu+8v57FurOJ8GNP3VPQvh07rOeXu/
0sMWpd/V0DHO2qyvIL/xBL6MlQnQG46dtFY/Qq8F0InCblZNZfdMoF6Efd37
BZxb84j9urdZVyiErn4VvD/5brQ7D2yfD/0Beayj2Hf7Ae1B2M1RejBykMdM
gC+j+gb266FPp9px+IoGX3v2PfAefqVt3g5eIPrTNig/2oG+rCpToHs5m3Wd
J/Cx6Rl89S4BvwVrc47aH/ISuqee8z30KXS8H3DPVOS3x+TCn3ON799fgG7s
De47kMja4zB0PH5S/OKnznj82Y1D7+ZU5U9PjwHvg28fiIOeh4pLT+LISJzE
/sYW4NvDWG+eBiz6BLyI7vD5Vih46TW5r/nxB3J/hyiBxoZyAvWX39wXeepH
CrTrN5TvVvUA9gP+Aj8jkHvuEyfat+jf+F7FY13lb68zWBfj304xdja88Fd3
xmD2a9eFzrJBcq/VY0yR7J/oI9DJHHpX7rsWCPzn6zuCN2XTTTmfl3VN8DNb
CtRG9LwqeKUbXOE77DUwbY98N6qaN4Ru00a35fvBY7eEXlGlQjn/2Ua5VzuU
htzdfoDvqthJW0n8OR+chP+wvSpO8Eu9JfZxa4TLee3cNqGna7OEvj1zwnW5
z8vOk++x32XL+t243+SegunH5HthNUfwb6QdkfuWvC/QbeJzQvbfm/iLrO80
Pyvr7LcF2hODcrFPrctCz7+MyG+v2S336ulhwof+MAx9d+yGHG3Iz9bnKazj
yYuOD/JrJcqu5tvINztFzjtB/xI9mquGFQjs+OB3+f5ewc9yT8VbyBH8azr+
EnxY8OYfOiT8HR0m8lrHfEUue3nv04K37fFZ4qNdjqxjVlwQuqWlIp/u2ykP
vw75n/BT+zf84IPl4h92ch/8+f0g7FIB+YxH2NEqQ342F6j89CAevx6xTOxm
BoUh1+Bb4jeu55wzsj5eOUvoJtcWe2jx4dglIhS+X3TNF7ySRIHanLwrQv/y
Tvj7tLv4n+42FP817PYC7ST81ZybLnJai5+KXHZufbGjOfKInHNXvpA4MO90
xL/+Ggv/XckvRij2MlOIO32Mqu+dU1RevEkcD2godKwWJ+Hrmn5OYPORyLFs
KParW1X07Dbeh/983UX8x2kTLOedKVkCtcDJrAP7yr6VUwbodVjiyxwVIvxb
ujf+uOLPS3KuW0eRV592SfRgrVpO3J9OJ0+lUF+t58SdtUb1JXvJJ/ZQVfcz
qa+G51b08l0y9o9fIXT1ojuiTz0xVfzTrV8s8poXvWTfKa5I3LdfSbwmdIGP
Qo97AtuNFL8ye98lX+Qvgm7t6SKXPb4SdJbOQ84TnfGbdh0uyrkdfeW8Uekp
9IdvR74r1ANzNPldb6fqfgb1zmy4WNmRvOLsKyYvB2YhX9sY8VO3a1OJP2vK
dIkbp/JeWdvaevj2bSRyuOtrEP9Dm+B/1+7gdzfj8NNba8Xf3DUVhW/jQBmB
tn9l8ROn5Rg5pyXtFjnN28+w5+rlohf94wX3iL9v8LNwVZdK8T+9BvnfWood
3WbkFa3DBL4/qYjcJfkinxn8kjw/PFb8xC2+eV7gszjxR7tmrsivBefJ/e6s
LuCX98avx7YVPWhXPSSPWFk+YnetY3fypjsRfTWPF/9wTsWIHuxZK6D/dRF1
ZchZWZthncV+9sw6+Fv+dKCr4u0f5BM7Gr81Wi0HNsae+rgglUfv42/HE/Gb
tq3lXr1niUCj1yH57qZHiXz2q8nkoxFPyR9b94t/OWVbif6dy9vEbnrZteTF
3COiJ23OYvTlO13kN6bWEn045SvIOW3yeOztNVLoWVZ1sZ/euhH2GLoUe5RT
/X0z6rqeSH/mGkAzEvtqbehDjelNxO/crBbo8VWh0Nf7Uy/c0C3U2wVDBLp+
peSV0uHEya5C6vOuNPBbtxRoDPcQO2tzx4setP31qPdLMqA/eZbI5z4vEXtq
5Q5KvOtpXaiHwXPvoOfTxNEU+ksn+ShyrDiBXBHIq+WoejiWvlz3Jh6tf98g
v32+HTs9OIodW3a4xz711UnPIE6HNQbGNQEO8AIWP8GfrCrkm6Yz5Lzx8jFx
ensL9qjUUqDmmS9yG7OPSDwYCQOlfzBbXJe11qQqefSjM/Rxsfinlk09Ny36
bC0eu9o2390A/NOuMQi8Tx3RtzP6Av3S6Er0XRGToNvLG330vSJ6dPxM8llG
Dn3TpGrsH/SA3p9byAdBPgLtpCDwZuby/fVA8vbFwdTvEp260GOq9EX29Q0S
p+7X+yQe7d5L6RNDjsB/d/UeakResb8lHs0f6MOdL7Cvsb4KsPsQ8sbLu+Tv
rV8hb+XBIp8RXRs7ZzaDjt+7wAPkM+0C7z2n/YfgVaF/sC7Pg/51ldcrqTrl
8w77E9Ook3X6S39gVN0ifZyzbdBJwS9cSD5+GIB8m3gXOn25T+uu3rONeS8Y
P6v362q+GwPag3+3muhRq/gx8bLDmzh7ES50rXbx+H/t6+jf1x86Zw3Oq3ys
3eMdbnqdYz/C5Z4Y3ntWzmnw33qM/Z7FyD1Gs3HSpxnV06W/MwbSJ5lbksR+
+r1S+g9f+mbrrsofRep9u4p6aL6D/vQQCzjFVe+W/uSPXeHI52MLtMP8yZOd
fiOe+ozDPxssQt7oPzifOBr6IYr+xBzkSuR9Zy3JhI9p2NeY6I89cg3qQOQZ
+qXPkn6S89P+R9/Usj5+9W4qdf6yqnfxvEvd4r0q/zN/cMryXrc3UC+c8j8T
R6GrxH5OwAXyZ8Ja6kJiBvn+0/nUueRO5I/D68g3rwORN2kXcrZR/Xr4j8gf
G8v+X50F302dQrwVlCV/njqTTdyNlL7djZn7q9DpmSp8OPo5sZsbEEOcNFPv
A+sX+F+t5i6P1NyjvaobO2PRw4cXif/UNqr/zKavDYuWeLfTNdGrE/U79WoU
eV3rUIf8Wr4B9g0tII/vfkhdGLeE772j0Eu/RfThC8/Tt+f7IYcP7w3niIG9
ep6W/saq1xO5XnvQ/8eMwD+ilR/+ytzI7qHyShPVt3xAfrFSv8VPppHPzLlL
6YN8J5JXfHiPaTf+kHg38yIyZL9TD3kPuU395LueliB5wBoaKXwbARNOCTzb
LVPOl52fJvQSJ+2V7ytOCrT61ZL3lOV1lffXYz/Rm/kimXisWIZ8eyscPgt4
v5v96JudRcxdrMPYT89X/jmC/GKV7Od7zZ7IPXMn/dmESJHTDFR99uwQ6lDH
GsKv86qiyGl4ztsj35PS18t6ToVUWW/0XSPQ+/xOgQvaopfNw0Qv2uNVog+j
xzrJJ2ZQL97xqz8XexkV6DOtDszvrBdqjvQVdd1ctIh1A/VOuIbc+kw1N4tT
84kq5E/zF/UuPNYQ6D8I+gkRvJeD/elTDtL3Ox95XkJPAbxTz8wjfranSd9l
X5pAH5ZwlPf+gm7iB3ZEOepOY1Vf59WT/GXEviauwpnDaheZ/zh58OvMUX3m
J8Sdm6n6sNrw7TxQc8X+yj8bIreRBJ7zUM1xWxGXbuve6O0GddRewnljkpor
dU0iH/03hTxjF5LXavCOcS3qpVvrhXo/+al3SQf0VjQDPoIVX35noT+VeZkW
o+Z26+g/3NWqnnVUeWQz+3qokuOYmiPWwo72CezmRqi5cIGat01W8wpPNbfJ
IM+7135nPZh5p51+ne8vmee5t5jz6ZdZ64svwp+v6nvXMPexY85AfxP1z0im
HtrDr4B/VH0/NRe6Psr/GiCXcWm7Osf7XB9PXbBr0ce4OWrOOV/JXQ27u3uo
j9pA9X56RN+h91Zz4sZKP/PVPN1zpeJTzYOfM6+z21Fv7XDmpFoW9c+arfol
jf5Qs+kH3RcLWNdAn+4MNSe3yOv6F+jXbEPd1Pvgv8Yi1a+kwK/m/YbP/wM2
YQr3
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
5n3G
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
c0G8Xzpr9F1l3594+C9FTGt8
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
+yd2+i/gTWQP
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
xrzZGj2c9mrXNN13ub6ftdH7Xum/+8T/AduGW2g=
       "], {{0, 28}, {28, 0}}, {0., 
       1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
liKHUa0z+qh/S/CZfaYKXzf0aerED/Rp9ilwGBfVX0drX1aXvGOFvMV8v3zw
DXkKv/quHnof2Qi/e7VA9On5C0VOJ367nO8k7wJXPa1vY0cLNSL6iJ/a+8tk
n/lifewyrpC+ZUgpfErQnzfsR/qhY0/JeWbGfvD0/J7+wPPQe+1t1LEF3C+d
b/Qe9C1507yEf3pzwOt1GsS6G8HEVc99yLs9hbgbmEVe339R7GGuuMHYjOH8
zM6SZ+2fyknds0fUIa/kpSPnsJ+w26wtyF86V/RiVblIvth2Vah360Pisyye
/X8fR136ejj1NOwh+tp4CTmr7KPOPU/c+b/ovVXv1e5k/Nc/sho7j0zEX7b8
xjlbuwoev2Mqck+qTh/2wmzJq94fJVLf/W2nhBprfpV+xWwdg93/degK8dMQ
nJeak1cbVEZvgV2FWm88TRxM7cx5u3ecwh+K5Dy7ezh+fqUieef2c/idTT9p
lyqO/vq+oPdSY0Sa2nUseI/UwO4DK1CPLlcVv/dSZ4vcXv4J+rGjgQdl/9Km
+4S2Dc8S+Wuul7zrNfoYPYfmax3MlbF/+gh+O5J6YUW+gJ3al6f/++sg8tJX
1eiXZqVJnvMXtCJ+K3xJnV3IPcxaTD33h+l9ohRc9kPizvmdPty6vRS8OWOp
Z4VP4EfZd/DDbe3kPP+Vd4/JvhV76dO6LTgk+zf3Fn2ba+i7rS9t8vp58Jlt
YrDLqhz6kfjx+H9kMfU/JhI/tXrL2K34N6FGfgi4UulDXWcYfVnEBnAM1ftg
tN73OmgcPqnvH3f0nSmBe7NzbBN5af2z5Jma4cRJ/CbkCe6t/VQQ+v8lmT5n
1Gzkc1uLXpwJUdT5ayb55+5J5I7+iPX/bUDf3GQIeSfsVfLWwWT5bgwvxe5N
M6g7N3pgt4C24LizB7sk6/2vMvXcXQ8u9yj3QCtX880Y/NQp3w/cowdgx3Y+
fCtX4/5yvDJ5ouoVoVbaF+hh2gXyosl93D86ROtkAvHSuiP7h3wIjsttyf9l
KdSxpFbc9zKWUOfLpUDbnGLdxDno/W3upc4l8odXSd/Z1mM3U+u82wq8Zg+9
t2foO1497ht2QF+tF08zX5H6awzKpE5F3kf+qHvUsax19BPT95PXYrlvOwlh
xPMr3Me9iVt5n9gZyfy39D/OlHTwJVdjva/0xDFoZlPwdCTejHi937XUd8MO
+n5ZoPlzhvpnqN4HH6qf5ut74gXuxZ7FvcLo6UL3xkAr8i5kze4F38NRfC8J
5/u5j7hnd4oAR3l9X8k4T/zs5D3DmlGX72vwO+P9dprHGzNeNhj63ufw/csB
7JOk76JnNJ+8r+9OZ/RdJVPfW8P0vfdzfddcpu+BpdjRsHm3c89Dzff1PaPK
//1c83Ig/ZBzgHcAs9NGaJc58FuzinVP/Mx58freV8TYurUDvi23Mj8vWfPf
F9B1WscT9B1lAXJ497U/+VHf+bar3R5hT7eX3nM7gctvobQMO5rl9P1qoPY/
u/Qdq+Yd6Kf3mY9+wHgOY/+9e8gbru+hB0rhF8PY2s7YfoDevAr6TteTfG7E
pcI3VOOnitopSPtm1a+h77r+Z+AxDPjYMWq3HM076ZqHzqj/1lF7DFa+PfR9
+3n9Pl7frQ9w73eX8J5jNVO9d9F3j9PY08tlnXUXO5jjGXsz9P35PfzNidC+
saPKU03zR2X06rZAXnuSvl+u0/vdisff/wdrWG7c
       "], {{0, 28}, {28, 0}}, {0., 
       1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
ja06xx7xaP//tO6J9g==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVmHl4D+cWx8dSS2hLExVpq2OtpdY2SJ5WhtTSRmntJBi9JS2qS5RQaixX
K62tN66q0EGpWMIlRcQytqC2IGpJMBIRglCprZbe9nxO/6jn4XiXed/zPed7
lt9b450Puw4uaRhGXLk//+k6cFSbTz4ZOLpbmb8GgwYOa/HyoL8Wn9W/f/7x
wk9dj/jrPzeOibTOZIn08k+LdB/9LNLvew5ZJ4f5PWdF2jcP812JE5wTgHRW
c445nfP9Xtl81/sI+6oxtlfr/M2TfBfAvd7bjI1GSLvKcWQW9zsbuNese4j7
a7Fu9jnAfZfBYzdQuXK/6sl5bi76WdUY+5Ho6Uz7hf2Poac9k7Gp69YQ9lvu
Ps5J5Ry/NvPmLfDbFfcgU/S7a4pnyBG1w0H2v4p9zQL095uhv7lX913FPkYp
9UcdtdtOtUtvvTc7E/0j0Ncvh338QD13AHYyDiueVtzj9lvD+LmmyKU/sn9V
HnpPwM/mnALGsy6z/nUh5xUxdqfeZL3qLdZrFSNPM2924D5njce+UtjNGYx/
/AvKpzjlUbjO10MaLdV+CeB3Juh8LPvdePA5Nvd4sWMY7x/Lfc1XIdus5dw3
D+k+/Ojl4Qf3qPLvmvK38w72B+9Qv+M3K47v3W3cb1X2kR9gD+us2r0jdjSa
Kk+eZr9fV3H0IK6MzfjFWIj0cvjeqgEPnPAMxjPVb8GjkOee5rt3i4pEBl9E
Rl8R6ZSaK9Iv00qkFfI688ezrsm+CwtF2u2jRHrxSSL9cf3ZP/8h8qMvuMfb
iP73lNeO8uQZzSOPaRyvUr5mHmX/N7q/hcZZPbVzcJraOxX/n2jB/oYGerpZ
V0WmL78i32eMkrH5RJKMvaEpl+XeOqkFMq4UI9Lt2fCSjPd8KdJqWL9Qxi1T
5DtzR23OeT5C8FonQ+Q+O+kQ9nqqA/ovwO7+d/jJLYc/zBh4YPx0Vu2heSNQ
8107zU9l/sv8lPrgnJ0g97nXGove/oJ++TJ+fXaujGcOPA+PH52RcdXkbBk3
TxFppJfw5byMRyK98kcuyPx9xXnrrJzrjB4vOP2fugtO78C/8e/kESKdMRvB
WzYUvxSq/t3IW353zXMlwGkvg3d2R80viavx4/U47FDiCuffqSh6+NYm0c/v
EXdS7BAWc0zOa5d8XPZ/VHCUOFws0lsRmiVy0uoTxH+9c+hvgy+yhtjJD028
KPIdW3B6O6uJX82B1wWvHb1XpLEoFDvfbguPXkzCH3fT8WOQxv15cHrrNZ++
Rty5hdvBtSpZvjcrpMl99uem+MX2Y0RvZ1DyQVmvX+mIjD/eJDisHaNO48+S
Ip3hzUS6FwPFz27RTHD9sEtw2WlfibSmZcq8cztJcDpdd8q9VsB5welPrAJ/
rw8T6bbVOI1tqXlX85Kv9Wn/TvA90ni7gn/NXHjtRV4l/leNkXv9AT3QP2ta
Jv7qfkj0fCJS/OGOeipP5lPflv1mj7boHVEk0tg1Q/xv760uertzAiQe/ZA6
gscoO16+81LS5Rx7V1P16wpZ94JKw+OoMMFrh8YLPm9JHfzRZgWyO3nFOqo8
LaP1IpL49CclMp8RAg+mdhO7m+VChH9+02jhmVX8Bv74NFT0NUvPhz8rCrFv
3McinfQ38X+vssRXhT8El/X5Gvj4C3awvXcEnz1ytuAzwxPlfKt+SRm7vW/I
d/aSS/h1bDfwecPQ+yA43MbkDyeXum6/Qv6xw7UOpVLXvMd2kx9r+xJv1q/x
gs+rGU1+uBcrdnSWFpHnvusBn2esI/+Xe4Y8EdCH/Jm2RHCYR/aI3t4T0zin
lov+zQz4GVMJv1e7Ifjt0pXx37I35BxzSB3s1DKSejQyCr8pD80xWrf7ngFH
ytF/5FEn8X1wbtks+IxxIyUvut4EiSO79mvcv6kKuJ7siR3LNiQe6n4j39lJ
u6gP3zaC3+uTz+LfNafh71qJZ2tka3idMYdz+3eEx1tWIh9uBNe6w/Ck3HvU
k/wY4qd5L/zTFHzWRe0r47Vvnav9QRfqvvX6JHCePCZ6WtGlxN7GlA/h6dUK
8L9/M/J0p/bUpbrp+PtAZe7PGUaeaH9AvrOzwwWPU496Yd/pCP/e+Iw43Nqf
uMx+GRy3+1CHmhO33pfzuPf9zwuJN4980/YprfMab5l/1wet9+fA7Vu7mO/b
Dz9vJv7MgibwZOQPIt1SZzn3wSRwFQ/BjqEDuD/lV+LE2Qffwr4SHjrPtjlF
vFwkHyUcIf6G9yRuB0xHBrWjX2iE/lbat+AszqFufL3sEvH4PXbc7WDn7VoH
t+vvhH7ahxecZ/5V5e30ieAsu5F+yamCvabMpR7lZtNfpDwLH7t+gB0qXMfu
fiD2Xp1KHu08hThbcwacgacFl9lrGXlozyvYpx7neit/B+evs+iDQpxC9i0g
fy5ciL875svYieoterhR9N/OKxpnQ+Gnp/XfeJt671cmXt3cBuSLfVXkXr98
Z/LhvlzunzQd/hZ/hZ4Vc7jvYTXy+rAJErfmtpnEr/E8/Vn/RejdpgN2mhyJ
HUMWc17Vmpy36XfybkwyfsvvBH/WP5B49U4lcM+cRPCd3ACeAvhof6t9qP5O
cqZo//nCu6yXL4Ufc14C36zn0KdJXfxZcbjoawxLI3/c60Cf1rkueWRykEhv
TB55c34F8mmtUPJPXGPi9c3l+K0Cddv57Bh8HNmJvNsuUb734o7KeZZfXfht
3a/HfMBb8Kj8FvxzQ+NvtuIaTX9mLVW8NVYSf+3H479NNcG1m7h2wjKp1/Nf
Jt+8cAL/1Kwh/ZpRI5w6kjFI8okb8R/0nFgLXD3oo50khzhu8i/iLK4DfUr0
OuKy+hfwe9nCHNlfOkrONa+eIf8GfYEf15ck/uLpV4y6Ws97Em/mcpXP78Zv
52aDN30Bfi/5JHwcdzcPuwZLHLnVd8m91oWF9NG/n5I+zTi5VfRwtm7Ab2+t
Jn6+XgqeOW3h554/yP+Vq5I3f4wnvvLH4JeF9EFuCV/OdbduPSyyVQvqSqlZ
8GfeI/JcaX1PmaXvBDWof0Yodd6PpS9zz/K73HmyAP99kgCPUhK47/J1Od/s
NVnyoVk2gLp4eouM/ckDiLuYSOrWtnzyUuvfkPMe4Z96c6l3IzLxb6u77O8a
S115L4J6cqsr9nowVvjhTdlMf5+WLedZ8R3RNzIXHId4p/EX63vQeuLO89S/
2/4H/tDHtU4+EHxu6n76qtAuor89OlXiwBt2nPqW8bjo6+Rrvdq+GDzr+uGv
Si3pqwaG4deIaOL2hkX+aJmNHJsP3uDP5B4v9wL5N+uYjK2RW+lnplWnfwma
D9+C6FPsWxp3yfrOEqXvF7XBbUduxo8ThqhdNhC/jZeS34p6E/8NSlAPYh+h
d9RzxNHgc/D5Zh7xlhpG/jhcQH7tN030sypOJ59ei8EPOePIP0GDOe9OLjgz
hst3RpMg+qHiF+BT8zz6piR9N4vQvJKn7zBT4afTB3ze+L/9uJf1ocvZf5n+
1TnK71xj+Uvw9sGX9GcxBfSbgUjvPr9b3OQlyCtr2N80h3316YvcFp2wV5MM
8ldiW/L0x9Q/r4v26dseEredMuj3+7bmvMJF6BWr75vr9N2tzQX8NBo89hL9
3dRE32126+8IzUd2zCbWF2xlPgf+Gtm8l5nvzWC+8yzk+98wf515M689coq+
Lzy+Qe2ey+/T7+lfrfXF6P/hGfQPv8V+ewb7L06Fj2cesH8q7zFmC+2/bmue
XKt1IJ3fDV4avLQCD/6jL3Ub6X4vAZzzlL/B9KtGrYvY7zBx7d3KZz0daRzS
96v69H1eS/CbMTM1X/O+YyeR39xD65n/Q+12M05/Dwxl/cVA9n/H71fT0N9D
Ocq75byj2Z9q/pzKu64/An3cBuxzdyPNLH03rM39XhF89Qfqu10IuJxP7zKu
9YBzix+y/+F91uNZd9L1XTPsDjJB3zud31j/Xt/7tiivXtT3xjvwxZmIfU3t
S7xkfg/4+/Sdb7zWvZPEnVuVuHMC9N0pWPm5T9/pR+i7fBfykrNW+9Z51Emn
UPvV1vq7YxH2st9SvkeTp3xP/dn8Eus/0w9aT29jX0fN2xc0fsajvzFP7XiM
PGiHse51Uh5VRHr3WDe6qt73/8T3f4fYZlw=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1mAlcV1UWx1+MLNP4USqzcnB8SoVYaSpSOH3yuaVouTZoi/ogMacUAw3X
6on7lmaGI2o8Na0U1IxwLZ+KpZDhjiDIwwVIc8HcaWrsfM/w+fw5n3vfvfec
39nvbZowqt+wAMMwRofc/dcvfmzHlJT48f2D/hwkxo+Ijkr882OY/u7+OePP
Xu5wl3phZUL9AKgddFqoe+6kUPNWOfS1YtYt8VmXfYr9IdXQ1sego/luflYh
1GkE9dew3u7B+VYg/J0Nev40PTeMeetl+LvLmXc/Psd8CXJ4vZn397DfyWbs
VLHfzFP5IqDObPAZWSXsK2e9cRTqrVK+j6h8X6n8nVTuDxkbRcehKZxjzIe/
N5h1bhTzbvYZ9qezzzxxEDryKPTxIvYVK58YlXeC7j+j/HzdH6t8liKnfxLq
1pSybqqetxuc1izFabHf+0b1+Bz8nW55fE8fzfzhjZyz9WfGX7POyIGvfRy9
mM2xt++zzndqWLf8Nnw+vcX88BvweVDtMxX/cH/T8yKQ211dhbzdKjmnt65f
rv4RAF8vjnlrBWOnlfpNiPpttyPQdZmsm7Ce86bsRp7u+5gfr/448Sf43/E4
px12tZdyjrVGxwPUr0PUj4pUj0+ch1Zf4bxEqDcdOzgjK1Vu+NmzwWN3V3lD
1C4n1L/SWO+u0vn+as8XlXY8DJ/qRazv/BfGv1Rfku9rEoSab3x0UfiHpPwi
88kjLgienIEydrYy74/bJvN+7TsytiujLuK393FexGWhdqOB6OfUBnAl4Bf+
BvAYeZo/5hOv1iHw+JXqv1cZGxOVtmWdXYM9vF3o22m8EPwBA+D77JvIk54k
chqPzDwv67eFVsv5qxdVCr/q9mdlfX4XoU7fgjOyfku1jI2u/6qS+RlRPwuO
/mM5J7ZEznXurERP3UqEnzEqBhw/roUWaD78g7zjKD5nOPZygjQeWyju8kPQ
gr3obfBMcDbIxD4TP8Ie03OrsO+l03LOHwsrZP5c0SnBUzirTNb/kC5jP7IH
dOqmcpEnbrovY2O74PV3lYk+/PVhgtNeu1tw2kMnCz73Sw87N2yNHF1voOdD
5AnPOADV+PLPa17ZCrUa6/w88oTZ5Bvs+EWNnONn5KPPc1cqkb+7yGfOalMk
5yybdkLOv7YLOjmxVL5/kyt4jIU7wLU3VfTgVX+PPkLKhLr7HMFprYwVvRnt
e4Fzdang9Pt+gB0X9EOe1B3gq7cOOR8tAN/BE9htM/Yyr2h8xv2o898zPtgI
vHZr/GJGV+Fr3ZsluKzY+keEtn3lsJzbfGmx0DfWiT3d6KH4Y2ig6MO56st+
t9F+zmmwHtqkWr6bk8JlvXW8PvYMfx2cNQsFn3WqiriN+Af47sQjX3gGuHYo
nlSNx3z81TU0b76v9Sc3F7u28jhnchnxELxCcDlzWxShjwk/yfriaWInK+3s
OfkeYsh6c9Mr+NPuPPzroXGiJ+vYA9Dt+J2TXCTrnbcWVGOHrwSf13Mbdt2Z
J+f6QR+K/5hvtxG5rGXEn7eJOPJWki/8x8Dn1oLLb1asdYM8aXyygPXdQslj
Nz9Az0tu4G8N3xa72Vvb4pehg/HXz5LBs+M29t7SU/YbWU2hGb+Rj4yOfD8T
DM4xV4iztZmCz5nzpdjRX/UqfvLSIeHrX58h382Q5eTn7oORc88WrbP4pZmo
dT5U62wzrQcLqFNO+DD8s+E78G+fI/qz16dLXPlvdRZ/dNKDySu3Gote7bbf
sv75VPQbc1nG9tx07DQ1Wta57cZhr8ZNsXPCH9jtBv7qHJ0o/KwO/eR8w/tK
8BldvhW72pbG415D6wb+6T4OLjec+mn9R/u1VPC52cSff30QNGU1fpU0Vvh5
nbGXmzz8qPDbfR2/WTSBfHrhKPHRqS92ynpJxuaSCZIn/JhosbPRpDPxOKmv
UHeaB67wI9QT+03y6JBwweNkJ5KX6i4hH1WslPOcOhXCx9xNPTZS1R/Xg8ca
pX1lXe0XZmo9TOsO7pJo5P1kp/iL1zGxRM5LipE8780eI3q3QjriX3UTBad3
PlPGRvBS8kNshujBmDGK+Ez/iXFwFn69MIVzujwjcnvfj2b8Xa3wdesMJO6T
M8E3dh96qncEv8h9E/kz1C+TtG+eSxw6z9Lnuvu0f//kJfXr6dgliXpsRuWe
lH3XtpIfD4QiT+5A7DPSIn4+iKC+H/4M+2yLAUeHVM0/l8iXKcn4pTVE9OHW
bEMvk3/l3PHvEfcFowSfcSOSerk5ir4gqRn+EdEFPC25X9hDqOt+J71fnGbe
aUl8WuEO86k1st+ID8Kf3tO6/OlAweu2qQVXVn/6lxFVMjbi+tCHTBtP3n39
PvJ7wwN87x6HndvVUE9HJBG3EanknQSLPGmsEHx+aA71Iro+9fZqGX47h3h2
hj6vdQL5/XraP9/U+0tvvUeEUOf9YvRhh99LHDWIxM9WzME/xjfHX5NHiLzu
EzfQe7MHkGtlOHrd1Aa5Z5J3zAjyjfH7BaFeky7Un5tfQnPHCHV+jyUP/1Yk
9jWGlgs/s3cg/F+cB96yK8LfGpCNvHn0695gvcdVql9+rver1zTP7BrA99wE
5Dt4D3baMQ8+DU9o3B/Az+qfwc+aZrLOPY58ge2pL5NW0Wd8WCvUPXlQcVQw
37oVes68wnzLIbLfytoOvo6T8JfCd6R/cEMXix29+Cn49YbPwVWRD87lGof7
9X55jPpnzdE8E/Qx44vLwPfP2+Tz1Bixox3yhcSffeEkeWLND8RbWjDyhD9K
HTjYFruVTgXHY4GcP78NfFv0RZ569O1+RB1oegPiIv990Z8Xe7/EvR3dXuqu
++oA+rtfL6NXl/12E7VfnPYvaWqvCMWVyj3Bj17Kumj6BDMzDT9P5j5gbpjC
+Yuepv/adI/gNM/Eke9eCyHPHO9Ev9j2B+rg1beoi3VacP5DXeHbi/uAX0o/
4YQuwO8DXhY+duHsfJlfGSB1148vwI/eNbBz3Gbs0Rx8Vhe9J8zVfm2v1omC
E1ov6D/N/U2hfXdghyb1yRtlk7UPjqJ/KjyAPRPKhZqRt+D/REPB6Z5oQx5u
PYC4fHoa9hlu4cfWNmjW7/TT2VHcn05dOyA0bIJQb9layW/+zEnUj2Ft8YtH
kdfrSd60KrRf+bv2ZTXkT7OS+6vn6L3i11TWz8/lnE0vUO+/XoufLu5DP3F8
HPXi9guC1+jWk3pSsgR7Bm2kLuTPom4Zj+PXoWv43qOc+UGZ9BFRG+VeZd0O
OCbf8wLFP81DAfLdrZeGfppzb/N3FUL7q90a6P1vrd7j44lDb7Xeo75jbO7k
PmX2msT82Az8q7SO2NPPcajro03y+PVy8kDt/YLTHH0Pdt21hby3J4E6XRtM
Hzusu9jDezcR/eQ1xd9LOqC308Hci88GgD88iDjp2Qs//oL+2jileMZpHdir
7zMjwWHXVbs61A2j8X7mO+l9/+E97Cvm3cXYyb3JnFJMnq9zHf+66pPPTi+m
D55Hn+JM/Ai5bz9FHxsQjP2yx+LHPdZRfwrpX9xWW8j7T5aRjwe1IY4vrqNP
XzAEeRZsR47zvN/Y/1b7raKvNuPVXmE631Pf/Zbru1Qi/ur+f362xmlX4tif
kMP3PO5h3ht/hc/nq8lLc86Tf1O5L1gbTxOH5/5LP9BnPX72cGP8vrgFeWjV
GnAkcT9zK9Lwmx5h8I0kLxnj8Ut7hfbT+eUaV8SdOUztWaj+mKE4Bqkd9+l8
KXryWvGeZ7e6AN3O+5ZxXt/hZmmdsbiHmXFfQ8uWIFfLTtBLfdgfxLwXw73T
36x81mxFrgtatyMnM27xHPwa6D11GfaxntF36sXad/4N+xlVeo/vr31bD/Vj
fW8zm4PPCtRzrvJuZWXo+3C7S4zNm+rnd9gfXsv4pL5n5iiddJV9xy/D/0He
PZ1rOj7LO6a5RfX+qub9Y8uhK/EbM0/vPXVVr/p+ZhRo3/Kt2iWS89xZ3Gv9
5vou+qT2pUs1r87Q9+Jp4Lce0Ljcq+/AH6teXtT3/Gf1PecpvW+F827p3HcR
3GOIF0PrkH9W303e1/vpZb3HLNVzR2nfWMq7lzdO8+FAfc++X/vmOK3ji+5+
/x9CvG2L
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
r9bj/wDEpD7R
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
e64=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtcj2cbfxyG7W3MaWOFp5kaw7aYvWrssXlNDjP5MBX2ENmwKeY1FR6K
bc0coy0v7qnJaZ0WwpqHIWFrpUSFRyKlw5Lz6X3t+732x9vn8+v63M99uM7f
67pv90kz/YIbapo2u9njf34T5w6YNWvivFFN/hpMmTijT+8pf026ye/xn27V
1L71F32xFlSLvAxqlF4EtVtf4/dPb3Dd5GpQ5VwHtdpxvdW4nus3cJ3y/xPU
Sa7jeTky7nCV6/vf4rnJPMfsyO92yU1+n8LzrCR+1947x/k04buD1NnEc60l
lEtPqSL1vUMaSD5WjJzTkPLo/7zC71Gyv4b81Ao5fzep6kV9jCKea4Te5v6Z
/G5Vc2z2px0NrzOcz73E+VkVnD9G/uoA7WmsvkC6hHyM4WLfqZTHGFLC/fGl
pBsot7WI8/Y02sN0yFddEvuf4PkqgtSZLf4ooh30z4RPEM/RB3C/JnLaU6mP
1eUh5Xj3HvkU3+V8AqnWhvz09CKuNymfvYZ2N1twn6HLuJrymD1Ezp6UxwgQ
O7ZnvOlrxO5VjAM7WvR9m/ZXqTL2p9z2UZHb5NipZBwbIQ6/bxe/f0Q5tGcp
vxF4T+Koknwj8znOlnzowv1WG9rZGEF/mam5nG+8m/MVHGshv3NdA8rpuMv6
Kupr/CLxfIH8zEP0qzFO4n007ec8SbsoT653lkseujCejGfIT82fyH0rz1zD
vGtnUGehK6i66FUJfnNHgNovn6yA3E93BHX8FlzGeNDxSzg3xt3B+iY3z2Dc
o7wY5wzIL8X4ZgnXP7W8GvSNgZSvRwblqaXd9c5itz30q71e/H9fcMOmP5wx
EvdeZzk+P03y70PIq48Nv4r5uTbkszLfPot1X86EfKa2EPI5E2JOcb3XH+D3
lXcWxpu9D2Dd9SO7QetHJIN2DQXV7us7sL9w56+gUQPysG9bOvlV3KA9wyOo
T5XEUzPJrzL62XxV/LuL+uj9qbe5MYffX79Zg3FeFP3S8S79Yn5RyjyL/g37
Po3MxXzIL0cwflRxEPySXA5Djtt3Qe0nn4C8WlDEUaxr6bYL82luO0FHHfoS
3wNXrwV/z7nxGCdE7sN8cALsphcvglzWzysp5yrqZ45hPllNy6nnbPpVLWZ8
muV/4/px2qP1Sernkoi4snNaXQFV35eA3vAqxPwk/3zwHXyC441J53FOROZF
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
JB4LRf6d8r466bGe/wOYCZSh
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
G55j+i7WOzN/NvrZ9Ed98Qn8P+S8HZY=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
2bjKYhftaZDgdOcUMQcfimbOWx6EvbsXY+cl98nXp1Uc95hP/d5agBwPqQPa
QOqz9XQV9L9rVV+i3isfkL/0nspeU7Cns1q9uxRQR7Qn6Efv8AF6iFXz7nSN
vujTYOrA/qnU6Zd04qFgJvNcUBu+z1vK95M5rDeU8b7RMoA4r/o5dd3JVHMH
7ztWM/oPawH9sJ1FftKOLeF7gJpTn6j+eYF6B52r3sFC8UvNBae1grqo1VP4
/32HCSAureEF8Gt3G7xpuezrRVw7E9UcNkLNYePUvPmQtdmLOucOiYCPP/XB
tXhHtK/nqH7qOnw7c581X81tT9lvHlF95iryhnZE9StV1Hupq+rfE/Kl2UK9
mw5R+Laq98H1ar5oxTunXc5ab5LHemgx+5s/QK7795F72yPWOXx3a92Fz8ec
05PyoT2Q3+yq3kubQ+3Gisbzvqjv+g1+yk7GZnC4y3nvM5PVO2Ixfme/oeaF
MvUeuELln574r3tDvVPnqHe2Mt6V9VbqPdaTPkCPhLq91Zz8KEXJq96P6yo9
R13m3BHsoqXxHupE8l6rV1Ry/cQ5Q71PmnN2KT1R19yh6r3obc7rJdjn3/9n
cOorPG2f55P/AzPiZCI=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28,
        0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
lTn41yjRfRPxp3kbXlohj/T+P7MBQP4=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
+H9qU+6g
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVmHt8z/Uex7/MMpcZoWMyvtLFOQsjhjbte5JCyDV3vqO5lyiJHL7NrUQp
BxXWlxzKnWQ2cb5zPzasZUzMvi4zdkOUhbWj9/PdH/Z4/PZ+fL6fz+f9eb3v
78+n4bDxPUeUNwzjraD7/3rGTv7nxImxU3o99OcgLnZcZMu4Pyfr6e/Pvxev
X4u5T9wl14T6h24w3g4138wX6r3+q1B7q37fCfX6ss8Yx7zZo0CotVe/Lypm
vEz3tYU6I2/x/Qjz/hT9Pg88Tukv4LhbxPgA372a7PM6Kv+RhfCNVPwx8HNW
ws9uofvLsc4eCF/PY72VzNjqzj73uZvMhzH2hrPPX6N4Tiu+DujF2AZ/K5jv
9kXktxvpuWnXH8BvROfCrw/z5n+h/nTOtftwjr1B8eewzywAj/GpyvcMuIxT
qrck5PHacr7XFXzW14zNd5h3eqM/dxjnemtVfzEHOO+Y4i6+A65qv7GuF2Or
TPH9BB/HALc1+TZ4nrrLuNI99v2h+65dZZx9hXVxnOvNUL1F4j/+eypfqNrp
qNqpvo4TVN4qyGVUBYfRSPWzSvWSeQ65/JPsq3MeWhv53IsqV7rqbTT4rFS1
13uXoG3PqX198K1kvdsHeb32yGeofswlyO9UB6fVUP1m6S8P+JcbqHhVTitL
42kj8+ZI9febF1hfepnz64HLe8NjXfYnfL89nnN7/ov50nroteztYplv94RQ
d/GGIvmemFUo+4vKhFr2JPnuv9Fc1nnLH4X/1XXgXPMT57TATl5n9dfWOtY4
tgLQv3NL/S1N9ZuEPP5q9efzGg9pF5Gvr8r3zRfsM7sUs66BUOtCXca9hjKe
Ol7wGj2SBL9fNeuKnFOu4LLMR5TlCp9B5a4K/9zUfKFZ3xcIn+FH2Pd6IvJe
aQqeIhe8z+YgTwX07dZWf22lckxCLvtCCd/j1Y5L1Y7jkcfak448DnL5nx8V
3G5erOCwBu0C18Z0wemM2oscIYFC/crfXZDvnZ86h71P58j6MXsvyv6O5fJk
PqCN7Lfv5gpfY/Jh5CvYJud5EbXQe8VY8HyUDJ6hPzIegJz+0/ibkYg8RiuN
1+EalxcY+6+kQp3jyBlfBf5hj+cTV7MFv/FINaHu5jqC0/tjpNjFPXnSFzq6
wWn8cNsJwZ/V/ycZ/yPnrOzv/MIF5K57SeYLa4h9nfLX5RwzKgK/TW0ndjRO
ZuDnJVOxQ+AH4M/+GRqcCe7XNH8f1vq3S/02MA956p5gXeWHoQP6ECdTml7m
3MEih79ui1Bz8VjB54UPEbs485IFtzu/8Iysa5SUKetqBSPX7qXn5XvAcFnn
nbvLvn1HLqGPucLXsNqJnEZeAedfv1fEeYeJh6vY0+uyBXkSsKPxCPLZg6FO
Y80/iczbFTfxfexLyOtWxQ9bdAX3a98IPmvNerGT168JcTW1t9jRarJBqB1u
Ck57+SfI80GB4HdC17F+QMUr+Hkl4nBiqlDjwyjZ788zZZ27dIqss4+Gif/6
d+eKnM6C/uDb9ANyLcpmvFPr7lzNM700n2xDXjP8U+adZowLS8D790rIU3GB
xJG1bjp2HBUluKy4dcTPnBFC7QURxGPPgchTobPwMe/1Qw+TgkRv9qR4of6l
aLGT4e1BjvRzxPGca2JfP+sZ/CcnEP8NOoC/njkC3hDtn4bc0PjUevyq9iVj
yUtOdwd7lu9A/vo6AjvMmZAt+9P3YL+bC8A/qAr5Pnew4HI/DoDWGYp9Ts0n
n5yohz8mx8jYuFAE3vU9ka/FZuHjBiwl/9YIFmoFzsN+j+8gHoJr4L9d97Pu
181qJ+q1PVL7tWkq10Htm9LJm95z86EbasG/1hnB4x3/UvKFO6AKdtyRRXxE
v4g+s3KEOk+moPf8MMHvrSsWv/R7HBc+rjUKexYuwS+XvyL68NpNFuqkZOJ/
C5+mXlZLhP8TefDr0lH42Hd81u/bhd3Okx9dB7n8xVoXbO1zR2nf9TfyknWv
Efm5sL3oy+rZ4yw451C/3t6D3n8oAl/b9vhl75bUi4wq0BkTWTf3InaNWQ7+
V8ZQ/xdHC3UO7qP+TFvGeHwu+fPQo8g3hfzsHPlB/MgvbYB/1MAe9gzt4zPV
bmVazytpfrmhdfL6RmiKB45yrxPnM+Mk7pyCo9SFL58lr/VfgV/1ySYPLclH
zpsX8dt7+JvTiTzvTG9HvFuTOHdED8YpvcE5ZSh0cVv6hZhg6tIzNcnTm2r9
LHyORuJX3cay/32VJ0372s+R1xiFfP5HGo+90uDfKJv4G9pE5DGdTOpVu7ck
PxidEqnDNROIgwl5yPP+Rcah31K3mlWEb7e+nJ+4A/6nU5Avif7LKz4Grqbo
12h+W/bbpb9xzqVA8u/2mVJPjfqtpW+wq1eF72bta6dq/K2i3pmX9T5VWfvw
akc5b1Y++u6eJX7mW+GiL3P+I+InXq1t9DGzauJH3egfzdbYwWuNHfy8OeA+
u57z46nD9gfkM69E6/LzWeCIXKP1+DHGJ+ujr5CWEvdOSeU0We/9mCV8R3zG
unfIH3a0+ud87ceaq39u0b66N/cwa1Btxs83xz+eGE0erFCAX3TMI89XrENe
jxhBPEW+C77kBPbnL+H8hoeR45LeO8oOQrdmcP5xqHloETjPf4//DCgkb1nv
HpL9cRP3C7+Hs8kHE95n/WXuMXZt9dPRes9Yq/fFO+qfA5DfaRXAusZ9ie+u
Hch/B/pJfDuPNaPvcD+jji1ujB1P3MQvp3UCd0I850R/yDmRG+B/51v4v8b9
0W2wk/GGweih33fE7cYbYjd/8srtMr8meq/wC02W/si+MUb9gHvYX+8AbonG
XabKlaf9zArNM5UGgGvZEPJe545S9+yHck/KfHQPkdNbeJa47N6GvDN+KPmm
fST+fcaFLruFPbYs55wq9O1epxXYN34E551pwrq4GhIX5ndHdsu5LVt9L3jb
75M+1ho9C386tpp91fR+HqR51NL74AqNx+1aJ0q1Hw0lD1i3rlIn7qyWPOpH
hXIPCEgXOa1mT53HDjXpr/Ue4YZ/TN04Poc6tngm/huXS16c/SVy3OpK3Lbx
0cv8/ex/+o0fZd0LGSlC24TJ2E5diT5HhpPPgujL3DzkMNerHF/rfbm3xt0o
fVf5Ve+FUfiNE6J+2q8l/jIuS+LOHb6SPmTGGJHPTcuhP66YT34tG889o+dw
8tDsQPrje18VEi9x1JPbn1Cnk08Qz97L+H+3kHTZX7mG9OfugnEilz/sOfQW
sgf9t+Ceer+/ZRyj7wRD9R1rpsbjNOSz15NH3WHsM9duVf0cRe8VuJc5hZ9S
/1bupI9xblEn++di5wnbue8kvEjfWWmbjI05qdyHatPXmBkDqWs5jRnftiXe
rCZf0Je3DKb/yS4lj/9cF39uovfvmcjldNS6t0vv90V6D6zO2Bii31vo/SlJ
68UxfSdM5j5oJkcx328VfrU9hHySGo4fnt5KvssNFfs5tTvTv7xcQh8eUcb3
uh2Q+9Im6ut7HveHDg2Iu4wM8tqO6fBdNYPzQ3Yj1+f0Y2aSvhsF6bubr++I
J7U+nMJ+VoD2oWu0HjbXPBOGnIbJu5FRXv23wRn4hc2G7uc+5d5ehNwD6bv8
Y2vpuxKiyK9fvUO9Lk4hrgcupN+Jd/GHNsHg2bYQOu3f4M9fr/WL+5DdVPNl
lt5/xun7VvkH3yu9wxqHB5k36ut9fq7um0cdtgfxnmH9zjvW/YKidVvvIy7v
YNY1+hGrC/Xab0g/5L01Cz4f/of58rxT+dngNGO5hzu/6btaf72vBp5iXet9
4OxKfbaf1Pe/N9UPJ6i/bQW/WaL99AGNQ1dxPq56iNU4ra75dTd8vXr6bhPO
O547F3nNoD+gmaWc/5KOTzH2g/Rd9BDUbfM74xl6/kJ95zT1/XU18eBE/A8+
e9X/qut7ZrzaZbS+n11T/BX0fTJF1/31jp7IfttT+z2r+//Sx2HOdSdoHr6r
7zVh2ifU0fzU5MYD+jAaoAcrBf1anfQepvaxE3kPsU7pu+VgrVuJ+q4+SOmr
ei+P1fvPZsW5UePwlNrTuy/X/wFyK5fL
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVmHtcz/cex7/DbIYdOswu5OvIEKJhM8I3s2xjHla2jks735qFajO5bIXj
65Jhc7dYuXxt52DYhDUZ8p1LjpKKFBLfEuVSpMwtzN7Pz/44PR6/3o/P5/u5
vF/v9+vzfr8/n1Zh4wLDa2maNuHpx/8CQz/3j44OjQmq+2fj49CoV7t9/OfH
5ur3+M8eeuB638dSz9glUhu1F7nuqEjXZxOyPF2k1W8/0j7NuCBHpHPiEO0O
rGe8f4Rxtw/SP0DNm0/baXyYffufoH2Dee6adNWfy7xltO1xGczvkMn4Kehr
prCO3XQ3+9ZV+wQy3t2exvigbMZ5o5ex8Rjzt/xG/7x89o1QOFvRr43Jop2q
cOxR8+rvoH9vAfLSr2q9fay/gX2NUf9Dj1u03eGqPwC9HW0n/ZNY1/bYTv9N
pNaJfqcfUpvGek4EdrOysJvzJP7Su9O2N9I2io/z/SL49Wzsan+LnlrkD+j9
4deMX3aKdUOq6N97Df2yaOslV/me49IfX8y8BtWs53mX9sTbzN94g/F3Uvn+
ELs5yr7WYCXHgs9KVn6+o+zjr+ySAr/0ogzFtzxkpOKTDzy0PBWfnxrHft0V
fy6ir74PaQwspz0NHts1rG/fR7qp6OkG/aJ4p/QPhw9aV/TSfc7w/TvW0VcV
0r4KD40v4ZW9lrY7G/7aMxSffPCntg1ctpcaX4T/nOacR9vcw/yEMta9ybk0
okYwP1b5L3E44+Oa0O/tXYE9R18Tf9zccVXGeUZcke8TspCxVSLNlz3kuz0n
9Cr8nlsuuMZXyzpOciL79M5WPMceZmt4bTaEV/YUhfcYOOw56hy4iv/V8FLz
SqZf4TXaTWR82CP2275QpD4rQPRwwuaLdAPzRD9tUp9L0j/iuSKR9/sXirx0
/azov3JKgYw7NMyVdvdGIvXNaRdknY+vlsn3qT/Jem63KbKfOett9AnZimxx
Dr82hq+miitGwkn8/hF8MIbk0J6JXVzNYvyoseD1TwRX3yTxh9G2Rva38xME
hx05vVjG/3z9tIx/c06OrBM1PkPGz0rPlnEN/fJlXKkmOE3fd07J90evnBQ9
09uekXmjusl6zr71pdLemoK/Rzuih/Z8f3j2GXHMXEM8Mts6yj9J4A6Ah0YS
58taPhV8/Rsy/+wzsp6dliDr66M/vSjrbM4Qv+ix7fGLfkH0tOq0PiHzLx8X
XGavyUdEfrNb+q1fnxU/GSfnY4+Q7dI2m70k67jRL4pfjZ53BKeT2Vn8qT9M
vCzfN0wAXxM/+HRX+a0n/DS/UnFzB3HGylR5J5NzbkbMAf+cR/Bu20rOQ9Yn
oo87Nvi8jI/LET0cr+Bz8r1+oOjprtosUgvyk+9WrTqit5VRS/xg/itO7GSH
3hZ9tSpNeGAOGSI4nPC2Mt7O6iQ8sJYdxg5X8mS+vt5X9LLKA9FzA/nQ3U38
cOeC12jK+TIGwVPrpsqT96YzbudOWcdO9mX/BSvEnlr3f4vedvczgsP26AdP
gwNFb6MyDDuv38z5ad2Z89O/H/yOfAV5wPcauLvJeGPtAuG5takdfvzb7FzZ
d0+Z8Nkd2ugidillvS5HWWfJd/jFS8Xh2vhLexK8Vug2/BdOHta/Gcr3tq0E
n9EjpkTWfSIae9Yuxz9OH9HLWV2Xc5+ZI9KdN4D273G0fdfRbnEIXt2bSRw6
Zomeenyc2MHpc178Z1dGCj5t5DHZzw5/JHY1Cr8Q/zlr62GX3cQ5e4HKM5nk
NWMhvDTiiftmA5X/vFPAldCM76HN0eMfFfDyoCZ+c9svFbxuYG1Z31gzg3Nw
KoJ94gKQHjOIr3u2w6etHsh6efDSK1/8YWixsp6Z1O8Cdu8obeNgZ76v9sVv
CxPJL8driG9NboEvPIHz9nfqC0dX5y2JesS8QP4zwlT91jKScbOiZR0trz74
2kw/i333iL3d8mvgm/MGdjnwErLED1wpe5j/zgD0SvgO/nneJb4MrSPn2Cmd
KLjM1CrB5UQNw0/RP8D7HrHYo20t7FMSCR8ml8DPp6ZhX1V3OSHEF7OxyvMf
kA/s78HtLuqt8uc14srcRPSJ70se+7EH/R+eh2+nB7Nf6SDBo782qkzZUeyi
PXoEn7fsId4EFUqctR+cJN+9t1hwm76tBYcdUcK5PXBU2vplDR7r9cHjNwm7
9t6BrJwNrlHkPa05frNukdfNwfhP76fqqHQv2m22ES+Kz4p9jdJJxLflbeBH
7QDWz6sCb8hE+JQYK3bQgrYIHn13b/JGvp/kN9fjNfGbNiMLf87ZKTjMjQWy
nxPZnHbCAfa/MZ36ZtVG8Z8Z1hI/dhjO+T78Kf4YTX1mvKDqNF+Fp6uqY+6C
306bgj1+GUYdsmSR6O3qLjKvAXguBwpO1+gi+7tNu3Bu1pKXzbd1cOaslPhg
v/S84HK/GC+4tLIM8GyugsffLBJpf+SQxzvGEYcr/Mkn6z5An9wvkcerqfu2
9IJ3/oqXc+Glfp88r9fGf+YM7kd2ViXndsBx8vnSVqKPuzRL9LcqFwh/rHD2
1Xstl7Yec1Xw6ytdGacNbIY9PrxP/Nixgjyz7DfRz9w6HllhUWcOCcY/W4LQ
P6WKdZtyDq2Xm5H/2peJtGYVw98H8epc/QQvL6q8kKzuRc/v/z+eGm98S118
Oxn/lLzF+Rh4Hv517YUssohrAVeIp7HptH1iRB/jRC75PGoVdjh8irh+rgx+
F74Nz1pSH7ke04jX/+yI/9a0pk6a8guy0pM6Z/Qr1KcTnqYeH74C/ef9B5lK
/WwbJ1Tdou5P+fhPf7OQ+Nd8CHa8ew8+9dlUDJ/9JT/pB7KoV9a3AN+CviL1
0K7Uo+ueFnyGuRg9nuipzstlcOWsoB2XR3wa8Tpy+A/Y48ET4Nr7CXHbjKC+
G5RHvIodyLlsFIb/bFV/BcNL+7y6/5YqXHnci40G8exb8yzx8CN/+DYyROoI
LX2/1MlW3Bjy/fp21KGTmwh+a+wN0cta8kBwOWHR8H0dedVa0ge5xod9s+l3
Kzowrl0l+WD1OPJhr12ZMm58ZLqM+7K17OfuL8QO17iXaanUKeb71GG2lzp3
75LvzY6r2e/dCva5sgJ82R3Jd+mTiBMv+Mm9wCiuK/HQeLmO2Nf5PIl6v+7r
nJdzLahfPWuI6wWD2HfhQ9YvWEz/sEtI910Zr/UtwO+fPzouel0OkDrdei4a
/zW8RdzyiyPOdaEOdZPIc0Y9dY//mnui2ZxzaE2jfjGjqc+cyAjy21vcS9yk
6dzTPJLzRL/dnwk+vcVU4au5xo99Z6eR/6r3ERdLpnKeBw4CR+JB4knjuuAv
+pE68GQ05yHNh3O2xRtc6bvgy9cTpI43v/Ig/6f0VHZahb5JxE17vbofPfgZ
PNXUbba675renFfr+2L0CvgWfTwLhDdWFfdPp5i6SmuSRn2TswA+ZadwX3v4
KvHx+k54kPm72Ml6cRXxZ+J19Cz5FH7sPkd8OjpNcNilJvX86SbgvXdFvmuZ
rckjO+6Drwn3Oyte1dUD1PtLmbrHBqn77VXyvhu/BZyeXzGvC/cs4621nP8X
q8lHkyM4J9XPkYcLMqg/3mvPuWsUQ1y58T31/tz5nJcJD5m3byHjO71K3D8U
LHHJSIwgnwyiDtXX5WOHuZwXbUwd7F5vAzj24S/3jrr/RVGHGvPJ8+ZUlddT
1HtkLnHIXrQYe1xnnccE5fvDGOTvIcgiDXmB+4q7IAM5cwxxeEAMPCz/L/zr
PxM910Qg4wZjrx7UYU6nEPiSl0u+GD+Ye9oM3mNcN43143m/c7Zxrpx38J9x
kTyvLVPvnm+CT69U9bWj3l+Hq3N5mvpHP1LEOi3Uu1itUuw2Tck2Su5S71xB
hape4n7mXA+iP1fV4/Phh36X+43RxmbdpeMZX8O7ld2oG+OPnFHvPupduRJe
On6qLgtW70at1PtTsrrfDj7LvmeVH+/9dY9X9XacqnM2oaeWo97xgkroP8d7
pT2M90s7voZ94+/QHss7pnkL6SxH6iFIbRPvpPZk7tnus9jPqaYecUbOo3+0
el9spuJ9unpHDPvrHVO9u78BPvdJ9f5cqd4vorCD3hlc5iW1X0v1jpaq6vAK
/GzPY323knX0h+qdzVu91/WEP1opfnX6XWHefFVfZPJdP7OR8fWVnqay/2/g
0D5T97kR6KlXqzwwUr2XR6t70DPqnus+1vsPBvlj1Q==
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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

       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVmHl4T+cSx09t1dK0t7iPLe5RLWrfXWo5ttQeRShX5EQsoRGKWmo7aqla
Kq222lAOlWpqa6glteTYqhFBECVBjr0kQm2hadKr85n7x83z/DLPe973nXeW
78y881YdMqb38CKGYYwv+fRf7/BJ7caNC5/Sp8Tfg2HhUc2aDPt7srL+nv65
pbPutH1KnZePC/V6nWWcc06o9eSaUL/aBeaPXhFqxPuMc08z3+0m4x3Xhbq1
0oWaQ65CT95g/gHn2a3Pw6c853mrOMeuDXWuc46ZdonvNTjPPMzYGfEbdP8p
9hfnHKMn/I085d//DPIV8t0NzIZfFfiY3TjPGgg/oyl6Wg1/ZV/KRc4Zp/u3
wtdfkcF4L9Qqi/7mTKjRGbvY0cjlJrLOqAh/YyJ2clpkIn8o65y+qudxznFe
ZZ393nk9H3ndV7GPszHr/+S1D+j8SOYtn3P9hejhLjzJvuKqb4UDnFfLY/wp
391rDxiv/h35Gtxj3V8P2f/1I/h7qscW1jtB+cjx0R/sC9f13/wM32j4242R
x+yn+Mm/xXnLFXerFTdFFS9pqv917GUtxe9GtX2MN2I3/yj7vR5bGN9Dfqs8
cngfPIZOKIAOVznbQv2kPzlvJeutvshlLgE3VgX4GXE5yLMnl31XGdsD7qJv
Whp8DyGnVaDxs504c0oTD84qcOjew39OZezp3VM8tNI4SICfv1H5J4Mzaxnn
GieR0/4OPxmf50Fj8JOTx3p7EXyMQOQyx2B/tx3n+ANTWJe8h3URm1g3fjn0
21+Qbzzn+puV713FcaTqW5y4Nv9UvhPwi9MIva1g9DQXqd6nNA77YSd7XDz7
grexrtV25AwDv+4o5PPmT0HOgdNYfyAKfr0Hw6/HGOhHS+A75Efm28PPKxMH
vx29+T6saK7QNybclvl24Msdr3H9JThzPI3vFPKLlw+erQT0swPQ3z6sOIh+
JHyNOYMU74ytoFKMC76Tsbmws1C7VrycbxnRQv2UUfLdjwhCvnvFWf9gIN+3
DBLqPfOXUHdpN+wWMBZ+z86G3/Udt4Ru/TNb9o0OY39ZzQcvbkaeppovbmse
P4G9rClaH9buYvzOWNYFdUK/rmeEr931Hzfl+/C432R/ct/r8j0q4arsm9Xz
kpzz1cArsi6moVDrzQWyzqjxmezzNsbeEBpfTaj9TYjwdUIbix7ethbMJyXK
fv/0fB+9m8s5brOporf5wyrkDJmJ3I8Ur9U1f12/zPer4NFoGYsdZmdgT+uP
bPyzWOS2okLSZd++308KvfBGqtDWeb8I39qRQt3VGUKtmZOPCp2Yd1b4xHY/
J+ck3Tot4xtfCz+7XmvmH354Ufi9V+FX2Tc5+LjQ8qnCz8nqKPuc1M+wx4RG
yHtpGfKnkDe9y0fAYV2Nv7Hkeb+wHuOUP3OEb0aB2M2tGHZCxkte2i98Ajtt
l/VWnx1CJ9VMkPnLjZNk/sF90cvLWCny2PeR33qr6Rnhv2jlKdm3JEaovfu+
zNvrqmTKfIM+co5ZqsY38n1hzFbhe3HGz8KnyprLsn99WfBbdDZyF2r93ap1
NZB4dKYcxY+rYsDjyMbgcM3BCzKuHYS/fk7Aji2b7xU6dK8nejT8QPRxol6Q
9f77I+R859wG8bszr73Yyd4fliVyD+kj1M+NF39ZcadlvVFxBnju/Kvwddu0
Xi7jmmU2yni5cUj2NR8tOPVapoLTTivRa/kFrXfUPS+XeuA/OaD1ahZx/e4h
iQPzcQn023VTcOINWnZE5ucOkLH7/mLm5/WS+PK7zpZ9fs2pgmtj00wZu+X6
gKfyKyT+rMIY1k/4iHj6cpvMWwueXJN1RlU5x91TIDgx4rscFHlWzBV/u0nt
s7Eneck6r/k7Ru9XqcShG3tC6wE4NY90xY9dM2W/t3Km2N9sWV3w47wfK/yN
t67Ld+/NAOTOLyJ2tGOvCDXK9Se/1cO+dtlL4Gh4PeTZ1Fr4u58+EH3df50T
6jzpTD5JvCJx7V25JnFh9N0hcWufuo89dn6NH17fAP6K6b2lst6T1+t9sqXe
s3uSP63zs/BjQQZyxxDvXuhgwZfXu4zgyFz6APsd6Ig+z0Qhd/A16Kot0DZL
oLVDkKf+UolrJ/Wx5EcjKk3kdS51Jz/uisgkXr8lbjMrCD68+cSbEeeQx2es
p66sWYxeXdDLDkUfP1fr9TbVs3+G1vMPmK+/Dlw5g/FfXqHY1QwaLXobwfdF
TrN/OHl2aCXiduJY6t6aAdCGNfBf9Xa3wOtzgj/rToDoY9RLFD2Mqjcl75ix
74qfnB57sWfkcurOJFfsYTU9iH7r8qmnx4agXwu9dz+kHtg55E+3ovYbo8Cr
Oeld/BvmYue8a9SnqDeoW0G55NVBtfDH8wc4Z2JD/JgWyXy3JPQpuZ/6uMAB
z21mCM79ZZ8I/qyd5H+v1MMMWR9ZVPxlBcSLv+xN88Qe7tEJ2Du1JHhIq6H3
w8/RYxP3T2us6hGs97cArQ/T9d7ZJxR8fvGIeFncj7h/e5pQc3Yh32/8C3w0
Och9ydN6lNFW9HF/7yJ2N8c2lDzpDakrennNDknesKZ/LvnCOrGNejY4WPRy
M8+JXl65YkKtLcWFnznmJnX4cU3wEhqJPhe51xkj0MPvpP3ga9o/VdX+7Tb5
x05K0fjMBlcRdUVu79Ec8Ys3y1R/dSMvp1NHzLZ1sPPoTiKXG3xW6rP/ZC24
u50reckMW0XdT55zTM7Jby3x7a9fTd6ImCpx4EXPkLHfuCN2MuaCp4HkPzNq
B3I3Qm4vSu/LvvovQPuF29rnTtX+J177pf1L8cvpAvQrVUC+7/AD51QqQf5r
NFVw6xdpS5yui6JuHD6aLN+nHRQ/ec+9kiLjgLbk/d6NJI+Ymd1FH7t3KHVj
ZYpQu0EJ8JCVCM4jt4P/1ROx/zb1x2XtG06gn/mH3quH6v2zUO/XLYhLc+Fu
9HvhO3AY+Btxt6qOnOdnVqJuzLgjuHFaNyO/rWwjedxp9VjqspkVLdRIjJJ6
7KwNl3lvXzXxl7k7hHxVP0Lkd9LzyFeBZ8GF2x4cRu5Dr4Q8vldsil7Bh/FL
iN5P2h1Dj+/pn8xx2m8v3g/dou8LOfQdxoJE4rjuM5zbNB073j1O/ryXR14r
MUvynTunlfjJ2X1d7mfumU0HZN/LwyRvuHNLkv/i3qH+P1lBfXmpF3jf8jpy
574NTb1BPt7dHbp1NfV02TzWN3LxUyj+sg7TD3t9qQfmf+ib3QHg0v2KPs9z
tW/vkUl+LP4jOFy2jrwcvhM8FlSmXs2M4N7Wa47gzxlSU/Bnbg4iX7RZiz7f
5oid3HGTwcW0BOTdMBJ71iBPmHnT1Q+vYe+sLPQpto989tMrfG/8MX4rhX5O
OdVzir5LDafemUP1PWYP+dTfQNxaK85ht/RU4u370UL9uFniBz/dlLxo179I
/lvEPcPLpk772Qfp18Y/FH2cKdOQr01f+H6i/eRm8OPM5R7if9pF71klkG/r
ZvrFwprYf00Vjat1yFlN4+wL9DNran2vqveYE/quFKrvFem8r3j9mkBn1wGn
lbJziPvxop856Qb1OboD942R9GX2W/RT7kz08Eqcwv49XOQMbMD5O+nvnQz6
dONQELQn+dG73BX8VHqJODx2EbtMroycz+s7hKF17n96pem7xHTt51+Eusng
1J5DvvH13cNPGE6dKPMx9+0iL3KfGv685H83/BH3kZB2+PfkJfQoBs6cD+nP
3BuBjM/Qf5lODLT0O+hT5zHyF9JX+5E56NWfft4Li0C+O9Rza3sq/Jrru1p1
8oc9k7pg7YL6g3S8lrpoH9e820H9PqoM8VI6Hz12vk1/E16cPuinffTZ/R6g
Vwv6f2++vic+mwSfi+DCeXSI8fxDOkZO9/Vk5Km/Avpv+Phh5EmrG+8MZjLv
JuZurQdx4M5boHX8Q60H+8ir3o/o7/2T9xd3o77XjNT3lyP6Xh20gnxZsFDq
tRHUkb4ukb7BrB3NvsbUV2OuvksdIa855znHj36CXHd5b3NSoN5GfS/so+vO
8V7mPN4Jnx36Tpmv95T36Oes3fpOvEDft0fqO7Wp9+149DVukFcd7Sv8E+r3
cO2nRmifGIJf7Ux9z3iAPnYB390O+MVPBn/eTd5HDIf7rplEP2bE6jtWKHy8
pXqfmn5Z7aH1qonGy1D1U0iGxpHKeUbv0472QZ899c9/AfMQe9I=
       "], {{0, 28}, {28,
        0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
NNF7X8LD/f8DEDORDg==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 
       28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
Evkl72dcO8rcJ/Oy3EPyjkD5wo7DNp6CFSN3W37nbiuwcFXZdvv95kK7n9pA
/5nHc9fyPPbtqXcJOzgfbYZ/mhB9dJRzAPk2LMP+RPZpq5hfJK9sc+tgMt+K
/4l+R0jPOq4Zn8l7zjb0n3p9TZ2Vq+UPW+x5zcPfsvh3f4b6lkW/Yv+kppAv
6108l31INfNiAf3ul/guPLgLeB7xDPw19X3ml1fJ701C8TOp55JP2j09pT6M
cvVK3htexRyjjoe7rJxHm0qtHbMmpxF/yHtRNeNC4vsw+e3g+gt8rxnN/uRO
rg/jnFnNvnYK5t+ohnoVk5/kR5mL5F1C8qW8x8j80OTqo+jfqW7KMYn4jLfB
pxJzXVixDfPbeMSPuZF85J1O5pXXyLeUcrK/Vez/4808h+8N+gNC3kvEPkzz
nc7s8/KI2M/LF4l+GVcu6UfVTYiLqKUZ+hXj3SEcgTiJwozjJ/IOqlg/jVdn
kndWqTPd7rnJ/N3p3o+8fxp/vpN51vNDmRuSe5Zzpe6LHeXdeATz3U70E+Z6
2CveyTnlGfKROJX82+3JK++UfW5dUt47ePJeIvN3r7fv9Zlmh8s3secFdz3J
k5JXGr31DlceuW/RS95dk/f4QU8uiROZF+R9fcDlp/y5xnvXTOLae7+3dvk/
3hfb5w==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
cs6w7+g7rTOSOLSS9P0+WueW5H/s9T+2RFKb
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28,
        0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVmHd0F8UWx1cQ5B1EiCggdaU9rIhEiiAsgoogIB1FDptI0BhAiIT+cAFB
E0MwNMEAriAQHsRYKBLaKDUqLQlJSAIsJQWCFKWZQ3l4P9c/Xs755Z6Znblz
v7fPPBr+fp/h5SzL+qDS3X99wsZ3io4Om9i34t+DiLARrUIj/v5YV393/5wt
py92/Js+FAi1m2cL9TseYtzlpFCvYZHQ4E6WUHdkLuNvDrJ+1DnmTxxlvDyH
/Zl5Qk2dU8wPZr+zj7F7/wnGqzP5nn9MqFUENemcY84gj9OefdaJX+FfA/7B
2uPIWaY4ZiG33Zmx8wn8gnnIZ44ihxmq8iVwvlcrn3W10IM7XvHEFMDnMPxM
8Rnm2yO/PxP5vLbs906C3+mBHO4w9nkW+vIqw98eCz73juIap/rerOdl8N2a
DD+zUPWlctuJyqcaclqz1W4prLfmws96F7ncPuxz71G95bLeNNoAjnjVzyul
0O5qlzLwBn1K4LcTf3DfY940P8u6kD+Qv98V1i29jLw94euOA5d3QvX0lspT
Q/E/AX+TVqT2hprR4AyaY2drLfazxqJXKxE+TuIR+A1YDU1fB10KTr/hVvjN
2cl8dBzzzyWyv1D9ZOd+vuftQp8Dkjgnz+d7y2nI3+Rn1kVq3Ky+CP/jyGev
Q37/AY2XHhpvlbPU39TPb4IraK/6rKl+u34PtHQf6ztfuyBy1Lnyu/C/POC8
jDt/Vyr0qZIS9JhbLN/TcgtlnB0n1F3bROb91BxZ5x9JEmpW1Ton32O3ncVf
f5KxX3uKnBN4Q4X6mwrkfDtuLPgmHoDORO/eCPXTHOxrCtSfM9U/rzJvx6g/
TExg3Ha08A2urBQcJrkA+U/dFrm9qn8cF/rRVqFWQr2jope00UdEruX1MmV/
0msyNo1bQrvvyBM+lYaclP2xCafl3M3d4DsmkHOCWFdw21Ubcf7NqSKPeeAt
7PdaBnK+ivxOssbDNvw2yAePk4ce7Mc2M34wAVy3QrHX92+KXu2IeafRb6bg
sDI2Hpb1Zw9kyLm9Tx/Cv07K9yB+o+B2dr54TL63dmTert4hj7jIlXkveegp
GTe4Jfjs+78S+7p/rRB81gwPu77wrcjjja+IHfrh595ocPrJ4Ak6aD6+qXm4
o+btxBnge/Oy4HOPdBU/DBqH4l+fvi5ymLcXI2/WT8ibZAdyzuDnkK/vc/hf
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

       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
V/NHa6Azl3O2qefu/B1/fwHsWXD1
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
8Gbpu2eM8rBJtvpd67LgJ/1/Am/Nads=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
0xzSQ+/tfoRu1z/x/w+oZK60
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVmHlYF9Uax+exMFRc8hJopY1XU1PEVNxKchCX1AxSS7HyDqZo7rvptZhw
o0hMzAVJmUhF5LoCBRowllCJ+46QjajI4lYuJaJm7+f0x+V5frzPmXPOe97l
+y7nNBs1ZXBEDU3TZng++jc4fE7Q9Onhc4fU/HswJnxil4Axf08+q36P/owd
e673fERN7SvohmSh+rStQo2em/j+eZZQq2EeNGC3UDdqNfNxmdA57Hcjk4Rq
JazXC/cJdVLT2F//f9AX4Wt6sN/NdBgbal2ikuMY/Fyd7/bgzcyv4DzbH35G
o23sD1oLfXwl83lfs77DN6x7bDvyOHzXNmUzjtnI/JlY9h1hvVtgs98znfkJ
nOdUIY/+DHZ0i3ewLlfJ1Zn11gLOc3cx1o8hv7FwBXw8dzJur+SZuoV9q7CP
68l65yT89WLO0zuz3h2O3Ja5l+/x6O8eR38jYhfyPIvcdrKyU+ky9gWNhob9
yP4/L7Iu9yz7Yy7BL6SE77+67N9xiu+Tyti36zrr91+D37wKqMG5rl8862rh
T3uCsstvOfAbB67swwpHDZHTKme//hh4sBalMO7DvHFB2XVEIvufmg2/hgXw
ees4dp14EPp6KbQO8msVP8NnOevs9tjdXgn+9ZsJzH/IfnPfUeaf+wW/zFB2
6FXMus1Kfp+fGC9TeJuo4u2QwuGyH1Tc4W/37e/U+eDKzFFxsl/hKQ3+zo1c
1n+awbpK5V8f9jmjc5U9v2V/0gL0GDqCfd8MZl233ozrv4Q8SduuCZ9nZl9D
n6+F6ou82T9zIOfcOAzfwJPQpeinzVJ69cZ+2jAVp413KP2g9iyVR5Sf9U5K
7y4qn2QY7D8QAr36NPPFIcout0QuLfpt6INdV0WfsTlXwZ8neiTHydhcspR5
X68rst7Ht1LO3/6kjA2/dVfA11fsr/qv7Df6fs55vZW8o5U++nrkGU1e01uD
PzOVPGZH4Q93HnHpeL3F9/GnhK85tyN27fcr8g14HrninxW5tMB3ymT9g3WX
hc8rj8nYfBACrdxXLjTgQoXI826yjLUF60vlvC92C9XvdhVqpZTJPqPTPFlv
e92Rc/VoH+TfDp7dRipvfq/89R/yg75xCXp3xc/mkEXMZ85nfsxd9Kn+UfRw
tjWQc5zLHnKuHp54UdZvib0g40ETXJE3dOg54atdEWq0WCffnYbDZb3++JVL
cl7MnfPwGX9G1rWaXiT7Jr5QLPNJcSVCx3uIHezG3bFrWTvsv5x4cJLIh9qP
GxUOVd6tSVxqSevQqybx4hx4QBzkhIKfLT9h15hE5PGoJXLb2/uLPE7jQYUi
V71Q5OpdW77rK0KFGheXXiA+dotfnapNQrWskyK/0zbttMwndzgp+9+7Ify0
jxbIvP7K2VLwXRvcHmqKP+4Sd9Zy6phRAU7N0ETlt1T0TcRv1uJ5+O1qG3Be
fUL85Jz+WPRxq9uIHKb+wQmhvx4QfYz0F8Q/docCkccoyxL/aD36iB72xbvi
d+3YBLGX2+aM4Nkclo0f7QTh485MEf306yNPCZ+E18SeRthl4WO6/qKfmXma
+J5PXrAektf1SFUXB3wPPUQdNN9V8VrwPPq+nkVcV8fJ+W7hKDnfrjolVC+d
4sI3GrsGdi8H9yNEbn1cKnbOQB+tIhl7tV8NzdkJ3tteFb9qN0Lw35vHjgnf
Gv3Ef2ZubcGzk1As9nH3Fsg+q9cT6GMQd/ZZ+gFrkqo/dVU/sIc6584l3txm
jaFjV2Kne3Wwb4Ob4j+9fyfwkh4tfnWn1hf57SfzoYst5P9jDXFbVC7Uim0P
fibNI0/1PSf7tZeLfpGx953jMg65L3rp4wPEbm7BJ2I3/dx72OvzScSf34fw
z4hAzzIVhw9VP9Bc9S3aKvy2gzpo/Pkk437nse+MCrGfcalfCXF6Wc7VimrI
OdbBzuT7pTHE6/nNnNuA+uXcyoUm7uX7uNfwr9dC/O/pJ3qZQwrBffRy+Cft
I1+eHI8+5xpipy1byQfh8Ld2zsJP3xFnlqeqyydU37JB1fNA9NfKqWN2rUnk
/ZZ5xNHDIeRr/0DqwOxxyJs3HP3mTaM+zZ1D/n7QHDluH8ev37XD/rcHCh7d
qMOCQ21xd4lj62UfsaPWsRAchuxnf9ZY9FiIfUwfL87repHzfF/FX7Poz6zW
Cp+f0B9ZHlmq7tMnO32uELdbZyNX2HnBkVXlRX7waAxuFzbAX8GFMnarz5K/
I2PA01Ef5PQBX1rdXPG/W/8zyR9G138Ldf3Okj/9V5WDH1/8VZGFHJ16gfdV
HcFLVitw9cYx9L9Df2NNwz/6ZfomZz9++6e/dIZS97WIRqzbFoF/Gk7F7nGf
kG9is+Gf+wFxXnYevCV5YYeLJ8mXLclLZqb+C/oFiJ/ce8sFj3pODfGjk1FE
HC/egd2+iCa/6hr+SgEP1ua12NEbeZzie+StUUH46zB13fGlXthr1X0lH710
h3poH2nBeA24MJYsgk+Xbtg1bhTnuXNEL3d5XbG7VVoAfstNwZl9+yD5r6q+
4NCIvnlU1ocVS763B/5BP/N7LPI2I8+am7uiX0A/aL4/59XGnvrMe9g1aB/4
zI5Gr2Dyp1ZL9b9DqOtWibo3+ql7z3j6XavTBXBvUt/t6C7o2+NNzg3OBHf+
TUUfs8lt6l7AJep7s/tHZNxrq+hnTynDj0WTwfGwTuh1hn7U+ni90u8mevxw
WuxnNHiDOvlOf+Jj0OvEd3A8+97/CHm7UweNBuoeUUm913uq+0XmbpV36O+1
g43Bv28T+D0Xgh/X0GfaiysFh9bsJvSNH0TSx+TGiV56aNoBOa/VCsmL9oR9
9CveIch/6TZ26rEZ+z3zNvE0iLxmeJfSB8b3BB9H1hDPwTWRJ2It8s36GHmD
1b21m8ovm/CXNpQ849xW/lv1HvaYkwGfph2RZ9oU4W90Dsb+ekv65wjyhtH3
OdHDObFecGieTkff35eQf2dWEV9ezYlrv5Pk55S90FvdOCcxSOznOO2I68ve
9NcLOqq+fBf2fYc6oU9W/UtkqupTiDvDO0PVP3XPbR2r9LPQXx9FfDcfgj1L
wYmTHoMd/fbgv+YDqPeLR4g+7oBuUtfclMepY4HkPWfEGfjFvoh+f46Bb3Vb
cHFgGPoX50OjWqBH3hI5z0y/Qjxs+ZK62O4m/o+kn3SK8sHjKeLPOoK+2kjy
jZ7IvUh/dxzUI5t483uT85o+TT7pvI97wxMO/WCN1twftidwfyjYKf6y6+nE
l0WcmIvnEi8TRpIv7pWSD+v9QJ7YEgt9pVy+2x3o7/QX0U+rmo7/CuLQd9lS
8DljLPqkqf6khcqfqeqdqx7+01/lPq/n0acZ9Qupo9UPwIFHKPJEjSIe2jzk
PvH9avrHjGTqc84G5gf/C/uMLVV1+RZ+7E/fp13QiTuHOmZtXI0flyUyX3of
vKREcd9tWo5916o6UZCJvSLAoVGEPkYHdc+tre4VeeodYQD3XeM6+NRiuac7
2WXwSTjB+W3mgw/PIvA3cTL6+Q6UsTnoEHLkq/wUlkd/1pw+y03jXq6VzSTP
t5hK3hxIH+sOU/V1XJi6J8TD7xR1xO6bx7rb6j2hSOXF+K2qrvPeY4Xw7uRO
U+9xA8kzWj7UCJvM+PkXWBfUAz+MrMKeD9+nni/bSx0bkIPe/RPAWeVQ/J/V
Fz8u+Ax5B7ZGrzrUL63kGv77NgX/Vn2KPe4Y2DWqkvk4+hg3gbgxGy1R9wH0
cw6r99Od6h0oSL2vZJNPnSr6GK2Fqo+pGxV+qYNGni/jrETkfz+Y/JB6jDjZ
ru75y5Zjnyhlp8he7As8ityNmjAu6YF8c7CjdYM4cusEI1cP3p/0eYOIp/7q
vreTOuB8qvLkddV/+aPPI0Opvgy/ab8dgG+MesedDZ7tXipe82zlz2/R86Wf
8MvKt9CnCvnss4fgF8q7pd7nDHxt3gWNNM6xW/EOqgXx7uesPM26n+n3tfnI
ZzqRrJ8b+X99sp5PvbYbqffbN9R77mfqndcLPax7Sv5/6nu48uMs3suMtqr+
71d59ql0xZf1ljf9nLaXvGss3MD+Pax364VDbxxhX6F6j5yg8lndOL4P5x3B
7Kvkn6beu9qqvHFfvffV/JJxNvK5t5jXhpNXzJbqPezhI/z9BWJzK4U=
       "], {{0, 
       28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
D+zzP/6kcl0=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1mAtcT+cfx4/NsuW+uS35d4b9sc1l1t9tm07KllySu2Q7EZVbxDQazn9s
Zm6hMMTBEppLVru4HkOWLXOZS1FOFqGEzIZZ/vZ9P/9er1/f1/Oc5/k+38/3
/jwvjYjtN/opTdMmP/vkX7+IeP+4uIhp/T3+GYyKGNfBd9Q/H73V78mf+3zK
Lb8n1G6xS6hVtE+oO2Qt43ZboVPShWrHdgh1GqQJ1RtsZP9330Aj4KOVfiHU
bJkBLWNeT9/CeN+3rD+7Gn4f7uXcB/AxI/Zw7pgV8MtKZv3bm6Cds5hPZN6q
sQE+FTsZH4W/tgz53XPfM/+SkqdjKvKU/AS/4kzWxSOnswlcTt/1zH+0GH4K
t1GKfvSznGMe5lx7F/Na9aWMg2zODZnHPgv8euEq+O5RenTXsC5iO+tuca5V
+B1yPPoSfseR3zmDft10hetn9KaPVvrtxNh4GX6uD/rVNircFzazLnkh82Ho
z91VwPcHN5hfeptzByt64Ra0yz3497+EPPOh9pQr0LSrfPe6DJ+16MOoyjnG
I+VXW3cjRy9waYfQl91wP3LMWQltOZP5oV8xXr6Ec7egP8dD7W+7Df6e6Mt4
6jzn5JWyf/cdzrt4H3oFag35nfUjHsJnlprfUA7/QeAzrxeipyT05GoXoS7y
avV/QL6us+A3LF3ZDT+2dir8GdjJ2n+MfV7Yx0hBfu3M14yDsZPREqr7neB7
n5MqHuBvDCde7G9OM657SsUZ+M3Ac8x32q38bwHjxv0ZNysoF3l85wk1f8y9
Kbg9fxOqZfcVau+LYt28dvBdOQ0+NT8Ezxb82tlHnrDDvlZ48EPn73WMn8tU
+sa+zh0V71WJO7PWWOYL6iHf9K7M+81mXeRE5l9rwjkBGSKX27QO9JmqIq87
zLtMzluTc132LyiHbvQWqtWtXSL83i29Ius/e+Gq0Hu3r8m6Z+LQQ2Qbzv0c
+fVvE6FVVL5IUXiCDiNnMPGp/2ep8r9XoE2C+H51ksipZ54U/taSjULNnEUi
rzsytFTmm08WOfQ3+iPnyRiR0+hpF8v81uLLsr4iqEjG/k4h53W7IPiO9M0T
+vIvZ+V74yHnZL9vf1lvDrwrejBOrMOuL/mgT5v41NaTn913FI45xJ/Wagrr
9sQzPzABPN2K0LdZekP47h2JvsfVE72aqUG/yfebfxTI+hVmvlDPtiKf9vt4
oXbWPpHfbPzpJeFz7jz4AvfKWK+slO9u8wa/Ch045ifiufiU2OOrRhdlvu1O
9LU0UuQzIutgl2fwR/2Yst8R4tZoQ3yaZ4lD26kKHRsluEzvbWIPJ7e34DE+
7i14nIr9cp41cRn6HRwtOKyZaSKPsfapE7J/sJfYQ8+KdAWvf5LsNyM7IGcL
W+xpLGwjeJ23xog9jSvnBadxo/oZmb/+muhBS4sVvzBb3cffvQxwJFAX3WYq
f9xV+XHoJ+DL/IDvMWfxu+Q0sZc90VNwWUn9kOfESuzTryvnPjv3vNA3t6Df
6BWCw424IPK63Tfhl7mj8ddWcUL1+8OJp2pthdpVXywmTvtAL+TIOUaAh/iF
6/uXzGtdykQuK6af2M+eEI3dOuCH1lHyi9VQ2Ws8ec11QrHrqBjyWeo94WOG
dhJ/1BdGofdqD04LrVEi+Kyym+j9spfI6faYg36npsrY2tNOqLHtFHF5PoP5
gkpZpyUOJa/UuiPzWv0r+MuljXKe+9y7oi9rB36pD/8Gv2rnIueBj8ERrvJ9
Q+qckbeIcQH12qoZqPLkIPJzxhLJF+ZHPyNvRajo0x7tCC7T9wp2elyOXFM/
KcWvT5JnkvKZdz3AHZaH/fLWiZzOlirE7ylX8DnNV4vcTukR9i92iYcWJeSV
1pZQ4xWVDw7Uxf/y6HPMSSpfelK/zTXUP/MWfqttGAjNzlL4Ft9g/5viF0bP
9ySO3NOeEgfuF03AfdOrDP86hl49NJHPyK0GntVhYgcrP0viTM9/X+S0o8PJ
/28FyDlOcB74QuOQ3yeF+YmZss/xKpB9VkWhfDdqkNddH+q6XZv8og1QeTR9
sco3ym8Xkj+t1g9lv+W9Q/TnmGnE0cKq2Cvzb+Jwni3n676bwDXtdeR7+Dx2
q/wRf158XPZrMb2Q7+CfIq+tFYHfxxs/WV+XutMlGnxRH+KnIbFynha3Q6j5
2S3WtxwPvvdUnxuu+pd0haeu6nNmgdueOwO6YAd1IPQuuEYev4zfLsGvDnoJ
f2f5n+AZV4o+4tZxbmAi8RUXIXa3DgwiP/4xnvhpf19wGZWTZL1+aqXg0uPH
QifXlXmtyl3Os1vjp7570ceY1uihRyzyvnMQPzyq6nhXcJnr6cPN+eCzgolT
J/wx+h++h7wRESB20GuZxFejjuStjRepP0UqH7WsSd49rvLRhO3E1+AgwenE
HGJc5qK/VbvAM2O97Hf2t5GxEWyThxauwv478QerQU302X4qdf1MR/wvPEP1
ieo+MVXF3wj6L20v9ysrgb5Kz85Fz5e2SD7RVvVX+g9Cb2MLwbe5Pv6Rs0PG
2rFO9IuvNsK+RanUl3Ts4XivwC61guFzfSW4Qq4R76MaE285IeTNhkc5dy39
m95jFvq4p/rCMFXfKujPzKH0uYa6v7rvp6n+Td3rzM7gd2cKPjv5ptRr0/MR
58ybT99Xrxi52v+L/R4H6C/jotF/8XTi8YdJ0IhG9EF967Pu9ZHQYRuw98Vu
4K99gD7ovx7ky/ZPE++e3uS55fHYrdkw5P3r/330fMbb1H2tM/d343f6bTca
vHb6IOy3fRH9iXeM1Dnd3cq49k3kXb0Wv/yynPMOhGLPf3uSFz5WdvY2+T6z
BH2Esc5tMKeMeLtK/ghsJ/yNvxIFj7nbH1xtWotfm7NVfl7zN3qqE4e9PqDe
aWPoT9wd5BXjGPbSLnJ/MqvTbxqfX2F/zADywhuzBZ9RzZD+xIqvQV2a3o54
e5AELj/yntExi/j4PAg+FTmsq74VfLnxyOlTh/tAatIl4nGT1B3r2MN89H2b
/ruVJn5pLV2FX5ZRD5wGAeB5RD7RLnO/Neaoe+AD9Q7yDnXe6kS+0ePpp43w
9dSlDhmCz506/qTMf0D/r4Xb1J8Y7j32GfKoXeVN4q+wKbgWpUKLXgD/FPoP
M6VE9OVmDpO+1Z3xtPR1Zt8S7LhpOvnlC+qUPv0qct3LJs5b9wLnOvBZ4Ueh
yQfAVQhOrelOlU9U3nxxEf6073vJw+5rM6RPsS8ESZ+sx06nb86y8dekcfRv
3V7FrtXV/cJrLn7sn0vdeL43/UtUd+p6Yjb3hGs6cdaMPsUMf5t6OrcnfXNY
AXrZHgiu8T7gvD1R5Q/uqdZycBgreCfTPbg/uLHgdw+pd5eE0+Ab0Zl+qXuS
xIHRdZrgdHuFyH3FDrAFr1sZIv5kNX0VvE+jFythGf3k8AzyXpiLv9c6x/1h
XLqst61r9NcR47DTkKvgencmcZpLHdBej8XfqzfCLk1Uf3IuUdU1+jDdj3pn
9VH9dSp47RTsau3vCd6ukfhZ72T8ya8n/dXiw5JPnTVR4q/aD5Fyf7FqJghO
Z8ZZ+pR9cWIPe3BXwWeX76ae1wwC97je1Ils8pUd2AwclQtUnXmI34eo+C2d
jv7fJi86xdQFw0+9g43ivczdrfKNnUNeyVfvhUvY5/pjV/PFpsxf4/1D7zMb
v9FbcM/ZnkLdzQ+TsX0rV/Bo/ah3VgB9snW4NvJfIv85k6l72r1k7LEoHzwt
9mKv1m+g5wHke2P7COzS81PGg6lzbsR81U/zjmnq1AFrKf21Uxdcxh3mtXL1
XjlPvUMu/VLdn/z47nD/13tfQ5/19iBXwRbyYv32rK/kfcMYgRzOpY/wj8CG
8MmshXz6r+AbO5XvEcuYP6zeI2+QL7TQJOZfVvXNIt7so9Rtuwv2sndyPzC6
Y0ejB/XByFN8dN6FjQnKf5srulm9G+4tBc8rOnpo4A/fzqpvOMh7nD6adz6r
JdSJ4r1Ne6z6pwX0iUbKEdZvJi7MxDOqv1LvoBNyoTb1S3ewi7lL1fNsdR+6
sVXlR+6xVlGGsi/rnF94VzZi1bvzXPW+thJ+Whz8jc/Qi34cPehfKb3Fc46z
Sr3LL1PvxL3Qn7Usm+9jHfgMUPW2knyt1+Rdz35E/XISeO+0A5DX9E9R+lH5
ovgQ64JVnxkOP/c9JfeSJ3L+Dz4rIQg=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
LctD6A==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
txJv+Sp/1/vRa/v+C5qnQPw=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
1ePv/wsRjlID
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28,
        0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJwtmAtcT3cfx888y2x42EhD23MYnog1l9qY6QyPaaxRm9RjOW1a7mKbazi5
ZMgIG2k4JrYhuSRL4uSS64SK2MohJIQZHmOrx77vX6/Xv+/rd/9+vpfP73t+
zT4eE/JpDU3TPqv15F9I1IS3x42LmhRa8+9GdNTIgE7Rfw96q9+TP90n7Xbg
E+mUbBPpfrhWpO6xRaTRYpNIq5xxIzBLpL3doV32PeunnaB9IpX141lveWTT
f2mDSHNHJuOjdiO/Zr7Wgn5zFuv0phm02/5Iu8tq2svpN+LQy6jkfP0i6+0b
29lvPLisZ7+hfUTt04b1ti/n2Ce3su+hn9gvm32c9OW0m+Ywb2cu+/XZgZ3u
rKf/CHbRXt+HvKDOaanGnZ3IDcfpX/Id6wcjnekbWTdAzXuIPlbeCtrp6Os6
u5A9wGMPAafbk3G9M/Z1BiJ1F7u43djXyscPpq+y3+vY0xqkzo+Io7/gAO03
Kzmn5Cz71rpC+/BFxrveYH3hGc5ZXc76IPr1iuuc16+C9R2xm3N+HeO/gtMI
wU/ap+ilbd7LvCngMxbS73RKZ10/Na8rdrfL8aO7D3tbCdhHt6dwfipxau9A
fytD6XX9PvvfuIZccIFzGqK/VlfJLawzhhWzz9JLzBtWxD4zsIcbU6r8xLhx
9AfmeYFTuwV++w301ucRZ5pJ3JnrsIN74hjzbu9nfWvyw16yhvmvucxv/jPt
8NPMq8ZP2hz8YcQrfdeRl85Czjd3fkv/n7Pon5iAzExBrwjs57yUTPsyeeoO
KMB+iQr/dnDbKwvp/yKP/jSVh2uIV+vBHtrvIPXSlfTfQB8tLZF1HvjXCUQ/
J+EL9J1P+4ljWR+2mPW/9WN8QtYt6R+RUynr7nYTaQ8MFOnOSRBpNDiEPDde
5ltjvkNm/CnS/aviFn7rA96MeZwz6kfl/wJld5XXVSqPA08yHqzyKoX801qD
x27APubcjuAa/4Dzlk0Qab8cjB5rw9B/dchN2Sdn7HXpP7zxmsiYVJHulUlX
ZXxJp3LZN7O0Qs4b3v2GrO/WXdY7C3qwT9dhIs09vejPukN74/ucG5Aj0nxf
8fEc/KGnKn6dO5v2duWXnvCh2/5z5JK/ZL02d7joby4NFr3t/Kair+6VVCbn
pO6/IOPGol+kf0HDIpnXyrNA+v0LT8l5t++KdDckFYr84bdiOXdWgki9/QhZ
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
Q35ZgxUeX+pMZxT3t9Yh93bg/wHLIjzp
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
Ww==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 
       0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}]}], "}"}],
  StripOnInput->False,
  Magnification->4 Inherited]], "Output",
 CellChangeTimes->{{3.739811234693652*^9, 3.739811238471654*^9}, {
   3.7398113057066545`*^9, 3.7398113113066587`*^9}, 3.7398114035416527`*^9, {
   3.7398123458803415`*^9, 3.7398123537693424`*^9}, {3.739812387172079*^9, 
   3.73981240415008*^9}, {3.7398125162916813`*^9, 3.7398125284106874`*^9}, 
   3.739812645727603*^9, {3.7398167233396544`*^9, 3.739816735836159*^9}, 
   3.7398248010308933`*^9, {3.7399157358104873`*^9, 3.7399157706464877`*^9}, {
   3.7399158216105194`*^9, 3.7399158292864914`*^9}, {3.7399169315092096`*^9, 
   3.739916952125207*^9}, {3.739918361683551*^9, 3.7399183674163733`*^9}, {
   3.739918412466813*^9, 3.7399184165299644`*^9}, {3.739918682540408*^9, 
   3.739918685523666*^9}, {3.739918725729963*^9, 3.7399187355024767`*^9}, 
   3.7472791485091734`*^9, 3.801897714143067*^9, 3.8036700634372272`*^9, 
   3.803688587293024*^9, {3.803688687825466*^9, 3.803688707089686*^9}},
 CellLabel->
  "Out[109]=",ExpressionUUID->"b31351cd-2563-47a7-a7b7-7a5e9c9bc48b"],

Cell["\<\
nLatent 8
\[Kappa]Dist 0.0
maxTrainingRounds 2
with same random sample of the MNIST numerals for the training\
\>", "Text",
 CellChangeTimes->{{3.803689003205154*^9, 3.8036890553655167`*^9}, {
  3.803709646840169*^9, 3.803709647396287*^9}, {3.803709724810264*^9, 
  3.803709732897681*^9}, {3.803709807807007*^9, 
  3.803709833404594*^9}},ExpressionUUID->"95ae8a1a-71d1-41c8-829e-\
c0fc2bbc982e"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
Sf/ozPeDl8Jxv91vGevMmFdoz71GUh7LtjFuN8zjOG8C9wXr9JdN3XjfxI3k
581TUs/vI9X6UO4/qlxXm8/zsqdyfdkZ6qeEOJR3pf5yEXwuos9CeU/sIu9q
24jPHME+yQxgP6jXiX/ekXdQeW/Tuouc9sg7Vry8h33BeaP2KPePPcj5GbQL
5YK85wU+fG+UujBd+tcVv3OfyT5PWch5rZbvduo84aO/5IGuPE+9J/gkP2hr
5V2mnOdrzpLvI6WuyWL80e5JvdpO3vdyqVfjpPQd1XwHMUy+iyj9+G6gLZE6
opVxy86WvHtX+sy23KeMFv8YTLmYKuO4uegS13/NPki/LXFe3pHVnfJ+FEN8
So3Ml0g9Ok3uvyP12RWpz+bKe+F16S/i5T0xl32isb1R6h3isd5p5boIUu0Y
57UtXK8m3eX+zPukneX7FaELOK8VCF8ziE8/JvpbLHZRJ/VxrsTBOMnfniKf
h3j8RF+TBI/kQ7OX7Bd5WO4Sb8okb4p9K/+Qd/12Ys8R0leJnMyn2Cert+W9
42nhv0X4XyXxfIDEcVex95niB9FSL9aST90QO/GS+NhF+tQTEj8q5V2p7gFf
/wcL65l6
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 
       0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
U/oPXBx5iA==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
d0Jasu/tEU9cyxiHmpvUQW/mSbux1L9L5K2FN8gPHEN+47OVXOcKv7O+nog8
rzo2QX57+puoy8rsMPBWnNte6isD1HrkznyfeJW4XhuDeDOVWvBaw9+RR82g
lqjr2uKVFxk/L10C3pXr4NdK/rIC4PS9D383WgxB/rFjv2VeeOp3rcRewdLH
hYvdPpN+OuoOx92l/8+YDz80g18GLjO5FnjsW2+iHqtJTVnHjo9D32J2LQS1
z56C/LZLNPDpid+CmtvTMa582Rd9m3WkD/RgRo5EX2c7HEcg7/tvMe883ky9
dB8F3g55AH82XD1gX+PRh7Sj9y3KnSf55Rmpf3ulrrdmf20sFftFSt5qGoP4
UhNiIZ/2W89U0Mw2W7ifM/DqJ7rnUg9BiCs7aCz5aVXEufUjyG12uE1c6/x2
YJ8rBajrpl8ycNoeg9DP2Xf6Ytzq4Z+G/bt67gb1SIa91UgddrTvfcn6uEpw
tJd3hxqp61ul7neW++i4m7Tz7Hp+NzLwF8jxZQHtUjYD/aJ26vm1+N71c+A0
/1FEO55+AvmVGoX6yBsAu5jlz0BuIzxvH+38Gqi1eTPnW25EPNpHixiXdVfY
n0e6fw/5puSiD1Cr4pmnurVnfv7mIOtSP9Y33U3ypLv4Zan4pdxj1YxS6bt9
6de36n4h/jjKW+izDfsefpiCfQrur4ZcmZO3gh/gDTtoI0t4j0hqDHuq5nXm
EZdk+JfWaxvyrPbIC/2MlevBfi8oELwS3Irn9g3Hen26O+JPe68a8/aidsgz
RkYD+4/n5V78kPbSIuS+FPK0XvDeYPaQetmlHWnIWZ6bPZz165I/82VcIfXf
fCLyiukZDz80q1qxv1x6BPnQ8P0OcWJH70W/rLp58b5YNgn5Sk9ZjnysRPP+
pxd9CrntB7kYt9pO4f3wyAh8Zw/x4n165cvMo1kraY9/S95PkXruJf11hdSL
kRKPA5hnrexDtPe+KvZXCeWsC52IV0mfdxX7pu+GPs3sZMivz95NefoP5T3R
uQnynHY3h3TnafYlJ7bTr5b15/3nxVnsvxrHsi+qimNf9sk9rLfqktjHdkzE
vqoX+yfrIt83zBzxx0ZSD+ZIHBbJPbe51Pv+0oe+yzxjjNrJdd+PJj9+GPuH
T/fx/F30fzPvXfY1m+kvxnlv7jOvE7+r8+Q5WwOo3/mJpMd2cf9PjpNv4L1M
eWUc9fzqSPI3uvD7iMWk4VdIh0hftuqv72Vaidzbr8j7UpTg3iX99Qzx3xjp
CzKpJ62B9cPoJ+8c5czL9rPyLpkq30k/q61gf6FGHOP4BeYvNZTxoIdyP9WN
fqPnXiBNKySdSqo1Zb9opHO91lry49fy7rJE8G2T8W7il3Ol3i+hfJqf+OnT
/OOQuOxCqsn7pxJ+m3SY6GsY30Os5k943mThr8j9cqasby3ffyz3zGR5Jxoo
6xpTX1oBqTmd+cB8nfq1QkV/BdIny7umsl/yZEex0wSRv0jqg7zjKqmCb4HU
/xbCp0hf4M/7vZYg7zv/Ix7totDLpNZnpOpxrlcPyTvnvgbOt+e88vYTiReO
G2vlffVZiStPvp8pGyVfhEtcvSLvv5flXcxH3pU8xV6hcu+7LvX+Q4m/gaKH
0XLOYHlPHSF62yJ+3Uji9i3pY4/K+/wQ0ZtFXPp6wZVP+VV5XzVviz/1kntp
iOi9UPytQd7lR4m/xYq8Dtm/t7xjOuQ+Lu8S9p992f8BQGZsrQ==
       "], {{0, 28}, {28,
        0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHlYV9UWvaCVpqWJqc9Qb+aAqTgLEcp9vkANR5w1HhdxxBE1x9Sr9dBA
U9BQHJ63Z4Fo4Fjk2BVRFAQBMZy5DiiogAxqgmS11vaPx/f92N+5Z9pr73X2
3ue8P36W3yRHRVHm1vrrn1/ggn/OmRO4aNjrfzcmBk7v2X3i353O8vvrT08u
L/H6S9rrKiD1/U8gzZ4lkFrUY0hj/jNIJYltbWgpx6dxnjqf0t5aBmmN4Tq2
I9uG21PKjbJuEMcrflzHGirrvEdpvC79mVxHeybrJ0jbkfPMUK5vf04cpk1p
9RM8V9mvR1OajtTDvsV+00VkpOyXS3x6R0privQHSnu94B4u+z6RecsFZ4Dg
zqceylL5vlX0ecp+3ZP21BaLPTeIXq6yn/RbPwmemWzrflxP7ct1lBei73nq
ZRyQ+X0FdxHXVRuyrSyk1FKL+X1JHtefVcR29XPKTyi1xlxXec791cAXHJ9f
xe+Npd2uWvxWLfZhv5XDdZQDIh24nlbvd473F/55UhonBNcp+Z4rsofw5KXY
623hixvHG0OEHwPuE/+LHH7vEcl559YWY93LvpBmWh/2z1vB8W8dpfw6jd9X
XqEeuthJE33vCq6abNvBxGWupR3smpXEHyE8Ff5oGeK3SfSH8oX4p5/w46Dg
cX8mdhE7NJDzF3KD8pMU7h88vQjjl/sXoB0XdB/7rGyPtt5/A78nLirEuPTF
D6Hf6K2YZ9dZBTtYNRpxXedd1LOQ65uJGcQz9Sa/z5bzM1L8uE3s0YBS9aGf
1Dzqa558SHydxT+/yzgn2tPuyvF66j32t4ln/5oc+mfFkLsYVzTsNvq76Xcg
q3begox9eR16bG9hY15GPKRROZPjmi7Nx/cIB+A3yhoCv7o5i/j7FxF/cX/i
6R8nfi6gfm2on7ZGzsOrc1Qk/njl1wPCz7ZyThsTr5Uu8amUflMC23LevawH
+H76feineW6CvqpHUh7s8euZXIzbknoJcuYHF7H+YP9sjN9iZGF+3QOZaC/4
Hv2m953LmO+3HOvpzvS7dS3vEfodEmhXh1XUJ/4s7X+lkPoLv+3dxf/Hx1dx
VZ/N70qs8LRBLr97fcd2rAvsqgyaDx4a20fCb5rmA1xW5ZWrWG/9rRzMK+kJ
POa7t4HDiNhyBt+PvJ6EdTwbH8S8Auf9mJd5+Cj6P2p/DuPHNvsNsuOX4Ik5
pgH2N1sJf+ImEkfST9TTJE4rQ/iZInz1oL9Ub4mL0Y84/kvx5/XiYp6bZrCj
PtD7HtpL/cA3y8GN0scFvLTqvXED6zjvgj9sBw14tXpV8JMSsuY8ZDOPk5C5
FcBp+Br7MP7ah79An6gKi/bQb2Lc9Cc8z6d2AqfW/mPiqDtfeGjRPwOFjzck
3hSQt9oDieNteZ71D5iHrTqt+d1xD/iiJH4AXlqjavH8bfACXmVJEvnqdQc4
Tb9i+FddEE3cPedAqlubgn92jyY29ekC/ypbOgCPsX/cAYxvGXsK4xJigE9f
fx74lIfltPPqF8Xk57+Js+o8/en7gHjqy/l7U/LiTeIxosWvGYXC7zDOn/8W
zr/p7gh+6qUvcQ71ybHYTzsaQv761WdcDRvC7/FDyKsOleyvzGH82PMS62kX
WxF/5N5kfM/TwFOrz0cX0O/bC3Yz/uvEc9/6DP2nVQKfOpnnx+xGXHYapfEt
/aaXST10g+fP1CVP72dbz+5NP3q4Ql97ZSbP+62fuH7wQNpp7DL6+a1RnLc/
iN/TF3LdHQH8nrKb8xxziD+g4DbHdzhHO6r047EI8Nk6+tF92juC9qh2YVyd
yHintczkutfz2W4seEJ5Du0KqRcHS/02nPlbDaX/jD+8OK/vCdjN6vA7eXFh
GvvzN3L8oQ3cx7ENcf6rJdcz2LZ8z2GesfkEcBnuA8B3bYkB/pm7FmWgPehx
GtpxqxCvjIJk5o8pw7n/hFmMB/XGc791t4ljMesofbrUt15SL34hdcBiqb/K
BGfcHep/ZjX1j7IZt+YFc1woeWtbs7hu4VTWL4GX6Jd5NWBv/dlv4JU6eh3x
xJXj3CrfjWQe9B+CPKL8ug3n0Lr3hDKMecLuU5N5wm0KeS77aN60u5rNOko/
RpzmTql7i+lHa4zIUVL3ukt9XGCzvZ76qzt6EW87SmUC46p2vS5xuw2m/itz
qf9X4dRveSFlq69ZBzh1h79sP/fLtOvGdLRrrYL/1HuRxDtoIfPqV2Gsi+rc
p70cfHh+xy0jHx5tpn6rr1JfV8nbP1PamZL3r0r9PlLyRJb43dWF+E84EZfT
Z8Rz3YPnsDiX+aJ9J8RDPS4B+cFq5IP8pW50g7SGOyFPGEPHMt9nbz6N+SuX
Ma4sO5aK9rinqA+09u1YB4Uch700v1TgVC4PhR3NXkGs9+JCeF6CT1K/71iX
qR0l7w2Te8hpuUcESTydnUx/xUp8CW9J/k0sBN8Mr23YV43Jhj5KdzWT/M1i
vG/fG/FP3ePB7wNb41xZI4YxrwVWQ9pVYciDZnk0+pVaZ+E/be+ha5g/7QH8
ra46zzx7cyxwawEVsKtaO4i8zfqS+jry/Cn5co9tLn6Ue4T6vZzPmqzvTbUF
57nnwl5G72OM59Oeoj5Ru/RAvrb8ssAvc64KvulVy4lz1GDERUvtx7olehnx
pfdBfjMiO8OPevhj+NFcsg/raaNLMd8OmMz67X4YpPE4BDywAhuSLxtYx6tv
xDPurGEcVWrLeZN7qVpMXOoJ5g+1azb9+MUh5tO8p6wLk5px3wHp0MeKuQ1e
qRO6YV+zfjL8afnvAy/txU2AW+kYjPrMqFRpj19czpNH/zmL/ueTYQetby/4
3ezkgTpV+yE4lfb+FPbQmiTCTmrsOOIsj+U5zfiW5zJI8ByTe5ecRz1U4qYL
85/1Ie8rVn4Y8/hjhfWld0oy9Zx3GPvl3cV+9mt1oYft2AL41d5twTejYQ/i
u9CI36u96fd/xMEO+pwfcsmfP5gPJm5gffciHPcP1akTz+umMvK4qj95XR7G
On3ucfI16il5+p7ktZZy70uWe9VNeS9YQHzKEZPS3Qf4lLu+sKvxjifwmJ/7
A5+aOOk47NAz4AT2XWuhX1/0DvNZkkZ+xY8An+yhaxlHI9Yxzn47A+fIdDWZ
x/u+zzj8qDvjVlwZ67rV/uRDSiJwGcdHw39qVBbWsUpOM55rct5qSb5LkPw+
XuLnc9bXStfPidu1Beyix+2F3Y2LZazvt8Wck/MNvylXorGvtb0d4oM5ORbx
wVgRAP5o5Zugv5n1BuPf6C3MiwlPcK6t5AE4B1bAXvLsyGzWK2ciWVfXCqI9
5t1mvFkcB3uZzqdZv725ifp2KZXzJXl9ttwTjsp9KULyw8NjHNf8Hc4rZZ2k
p2ViXW1OFe+vrT7jOXfYTByfpcPu1tKZ0F/zjIHeys+joLfRroT61z9JWbSQ
di+dS5m4g3HCexHruERP1juVpcBpt6wAHiVnNqQ5aTfrmhrMC5q8U2mn5N7+
qeSFRXLvuy58Db0jeXM9cavXmGcO1ibPUxwesX8h8+CROqx7Z/mxPny3Dvdx
H8P5TXXKYb60Z4d+bP84gPu7sS7SlnI/q2IE9SufQbzdi2ifU+PJp86ptEc0
46DZQu59vYSXE6SO+Ubqlw/lPaab4CwRO3zD9wA9Uu4f32/nfNeZUg+Fsj8q
nFLn+5H6mrzXxPMdxQwnf4yY5RxXcoTfp6dTj0H72e+7h/OH8N1K6cD7gZHF
eGBWRnD8vt8on8h5M+Qdcp3UL+Vy/yuUPLhC6u43mSfscOFrlsShFNY/Sibr
BLsV86MVQj3VgxfZ7iv3xnvy/jdV3quGXqa9Yg4TX+1r3Hea1POJ5Itun+P4
5qfY/uQCx61N4L4fy/tbGuO/dljeHzoJH0dJnKwWPDXEfzvlXfGq1DWXWLdZ
znIfniF2OSLrxsr71Xi+1ym7/6D86iX7IynNefyuNZE6aTXnWa7EbzTle6fZ
nOP0XXwHNPOlziiT97NZtIe+Q96HDgoP5R3TPES9rEPiD0Xec5tIO0rq0Cjh
7YhXPJa6Jlve12fIO+rbYrdI5hMjXO7/jcT/XUW+4PuWrcv75WDiMBPlftZN
3sFqCs/mSrwTP6iSl7Xh8i7mI3huSP+Pwr9Seff8n/T/XXf+Cfv/ivI=
       "], {{0, 
       28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
Q2KpBQ==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
P/Grj9w=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
YH6ZWcq/7fSj/7rmmfma7+I471mNXyYN3Ej7ZZrMmyus++7kSRsht+YcUHfK
LPRvO3jMJvB7k/HdnnzQY57Nxbzi9ExLAY14k3xCnb04J3IqcFobOiAvnfa5
mOes0f9hHA/fwngIag0/W3PjWc8TcxhXefSLFav6OEJzW6ritLzqaCbj0y2o
Qty5FufkUjb8ZdYr/hvkdnI5h6ypDDxm0mdJkJvahPPX5U3s56fXAIeZ9t0O
yL11D787J4duBi1xDNR9qyX8bwW8g/nFvjAK/vWm5LCutlxAmjYQ8W0MWYN5
0KkazPpQnXOym6Q4LKa60kt1tCbz0y6ifG3TiPk8pjb9tuQx7O6vqBYL+WUj
YvA9tPYf2FehDs8v3R7922kyEnqa33Tl9/WvMh4bvoH4dANXwL/enl7wu3Gz
JuVHrEqhvSYBt5U4iuvmhNMO1lrOq/+NRD0ydsyAnt5Z1c+zqiND1f9idI+s
qj7v5iguh2Ofu7AI55QS06Cnse/gr8R7bDFxDlwJ+XtLwS/2sXKIN7+ujbpv
VhsE6g1YAb3dCmdA7dsVd2L/gK/pj2ETEIf+8GcQh1aPEfCn6+QgXqytZZjH
n06EPL/tCuSjn1mJ/rvI/PPDhKuy8i5fc803qjvlLhDngLWcF1K3sZ70vIj4
dG79yLkqaPZy0DfP0Z9HD8EP3vpA5tPI6qyX939kfezVmPkU+jryy/7oDu4L
xvdtWTfmx6Juug091pe3isE/5vMWz72+GnLMD2udYZyPRf7Z7d6m/jXlv7nK
swqqM491P5zF+cZ+jvFpxXxAvHX3sq/Nr8d+1moa595J0cyTtmMQj2b3QOZn
WjvO213Lwi5GtxDUP//78rR3xgnyVWtBrjOiA+8hxW+wjnW7ze/Bv6FOGp+V
JO6s+dhnjxuF+5hXNI/35hLs067mFqOK+oHuedZg+VPvLtYS9ckhmdx3eSr7
eokSnLN6J/A+22nKeeZFI94j8ruDOtmDWI8qFmN/Lh3BvjVhAai3uy7nkttt
Gf+t2X+8Mcd4r/wlg/1oY1POgbeSuW/2J6BW3kDKi4lj3Uxj3XR1rzXqaP7S
+53zqurpQ/mzvuJ0kt5z5uudoMYc+ndGAeM2/CvKH1KffI++7JeVOR8aI4Io
b05x0rADXF95P+21jvXZTBlLvdJ+pV0bzNPcfJ1z5m8XKH/5E+4Lox5me85l
9lTd6/55txuu9832mseu6Z2lUPU0QfPN5+obCaq3pXU/zuB7jBHJ9wI71Kec
N/jdHq13hK/4DmVsX83fz3Me8iskUY97J2nf44qT0VzvB/OebpTdQ/418s4l
vlNZbdgHjPN6b/1AcTdFeMLkpyny2wuioXqnzJR/myuOE5iXZqr6xwHVo2bE
ZZ4WzgjdrxIeU04k75HGt3xH8AfR3obF+7axgXb1dY6ZIr1zj5PP5/3MqpZB
eZW4z86+9a/88opq/0rNzXpPdL7UveFd8bNUT08qPl+jvm6h7LRG9+E4vW82
5D3fWPaE/ClSJ0d80hPpw3Xej8TtFOF37zlS4x3x0fzdb8C8sNqxztkj2K9M
vXN6sXpHfFn6x+re10l+LKJ62Vj5qHd6e4/wTdT+nxS3dYjTyFD9Pac4iJe8
0pKXrrq8SHJLEZedo3euXOk/UPkyXn23j97t9H5iRUluuOarpoq3hqLTdV62
8KaLPywct/7i/w/eYnsQ
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
cl36g/2FzHMx+4lzyCnODYmT6Z86C35QGy7B7lrFe9BfLZ8GPe0rH4Nabzmi
Pyv+LdD/rNAU9uvM1IPgK/nyENZtSw7je6Xu6JeGUxD6gdp1CeqL6ZeCODWz
ZoFqJ2agzhiXHdmHPdyZPwO2sC5+Jf6bKb8vDsuc+ZbkX5LE56kjtMNyN85f
g8rZB/7QWL/j+57Gen8R8JiDbp3B/tIY+EXrNQb7ek0H9DEr8iBwGW7DQNVJ
rY6Cb9fnGbh//xrk2a0+RT/U2vQjzkd3MC9odaGMg7nBmOfMdR6ws+KbALur
81mflTbS/2JkLp0pfuwv+AI4TyvfJhLfDi/ORQHliBsl/z5wGJ/6pIPfYxTW
1svjEI/W/CnQw7zsAb2MrBz61W89+rc6Joz9vtskzAFGSTX01UPbI+/UP31J
X2Y8m+9shN+1TkMRB9reZrCHfmPdNayXtIR+dtoh1pvJrC9md8F1nms9WOrp
KukPE1jXzS7+yDMldif1ivECHnNpJL5rBXTgfFlxnnYfl38Res86CH4tehnn
trQUznGDvArBH5aAvNJvj0dcmCE7UJfM6Grks5XuyHnoVgH9u/gk4ll3KmS+
uk0FPv1W4V364TrnNB/mn31V4vJDwbn6t+fiVZ/ry333ncCndgyHPVXfBtQH
e/Vq4FQGxWCtBq8FHv1qGu1a6lfEfB+G+2ZEGPv4xH2gdgTrldErlnVrfiT2
lenjUD+0d5NhB7XEgX3+mzM/MZ53o+7aAyqQh2pdPetMVBDzL43+Uo5JP38g
+bZK4jWb70rmwTY8rxnC+lKTCPsb7//G+j73LunxQdQjrgj5oM+qhx+M+G/4
+6J/Bn/fhQYyj3NOQh8t8232eY8VlD/6F+J0iiadG8z63Ggg+0OfNyFX/boS
/rb0Zqgv5vQ6yutxnPm0Xd4nqmTO9BR8E6UvFEh/9z9Nurk/+Zzm0U5Zo2Bf
RXuCuDBnfsn8rF+LfaP3afhBH/Ixf++merF+u4ZzjnuhH+nmDM4HPv1wrnme
4lzwXTvWw4+8+TvMLZPzWLM85pmewTnqRBzsp3+Syblwsvwub8L6r7jJ76En
4s+omuf7RibnOdtzEc8XXuA8uSid89r5seyzTR/fY36V0I4336beSQ+p97Qu
tNv/ariOcqTc3v+UOs15zkrhnKc2aku99HdYLwqy2G/DlzKeU97kXN4ihfNZ
HH+f6rkytxwXP+XLe5K/vBdekb7RTvD9/T44lPVGK+a7kWpt43eP1NMPF+Yx
r1320k9huyhH+Ylyl7HPGG/wPcZoOoL0KH+vKXvOkn/HBsr3GUMaQnuYrg78
Xt1L/E6nINk/wXv75PfsOtFbfrdrIeKveHlXTJZ16N/9Ufizpd6uucj9UWGU
t3U09dO7896SHdx3lfe1zvIuNk/q2N1c3t+UzPPwDO6Xcl/5TPzwcBnlRTjx
PN2B5z1e5nnpHp4f5buTclvmSk+ZN0dKPDaX97VPZd6OEtyxgqu3vLPFSd05
K3bK4e9fw5Hxq8h7rrKO75hW8lOe7yZVXic1CzknGf3kXXAOqfGhvIfWkury
vqe4Z/K8y3+5H0Rc5gjp04eZb7Yq9WQo+7Y1XN6RLKkrLoI/T+bQLfIu7CH9
ol7mtvEyt5VLXKfJ/RbSP7vJ7+RwuXdc+pC876o+8r4bKO+5b1IffZLMwQ1i
9xYyV2WJ3c9KX66Rd5OD4oenMi9PEr91lDjcKfhzn63/D02DfZQ=
       "], {{0, 28}, {28,
        0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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

       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJwtWAtcT3cbP5h9vG6z2Hiby9HG2Ot1C7mE0zTWG7a532YnLcylXEJFnF5h
yqzIZrE6m0sro61hETmp1sqaKLnGkS5IojG5/Y3n++3zqaff5Ty/5/p9nt+v
44yAMTPrK4qyuNHzP2N8lnksWuQTPPblFwM/n3n9+vi9WGzL3+c/6p37NUNf
/BPyQKi1sE6o1vQexlF/C7X3c74O80Y85pVr+M4I5vf7sK4OeyjUjCf/8Efg
MwV8jDisq8uxX5tZx3PAR30PYzOD5/bD99arGOv1cL52DPy1JvwuD/PGE8o9
i/Rd7vs/qP4B+Chf8txI8veBPPpRfKf2p/ytyX8s5LYHYayo2GdqHK8gvza0
D+2nTAAfy4GxFUj9FnC9N/hqztTvBOVL4PxI2u8e7dqNduzKcyvuU0/Mq75c
j6Jf7lHOHJ5bjf1qxF9Yf5f6f+XAugKqZeE8PfAJxp8+xb4A0ieYV97AWD8L
qmiPsR4EvuZx+jGH8ZNBOyZAPrMn7TadY2+OB1L+paD2H/R7c9qpKfhr2+mf
07Wg/+Y+8xbG637FuYG/YX73RfBbfB18DtzFuS3xvfJ6NeXH9+YUjM1B2Gf4
3sZ4L6jOuFUK6Idi7r/M/KD9dW/obTlT3p6Mi28ZF32oz2XG6WbGYzz4GT9A
HiNlPfZfSbwtNM4FtOO527CLj1Ct99lqkSd0o4zV6GShil849l2rlXXNdxvG
0bFYb1gs1F6n4vyiLyDXRzaoUxXkd6M/F1Ef4onxEHa0k+i3nYyD84g3pTPz
cvId8Ku6gu9XJuL7xjEil3G1yy05f81woVZ39yrZ7xJfIfN5PuVC7bxS4R/d
QKjaacdV4X8uUKh1KOiKzP932zUZp7a/Lt/1W35Dxl2d5Dz9rZGQo/kfkLcT
5FVd4XcllTjylDjzN/12n/nWgbjWhfj5CeLDKt6K7275w87v5Mh5Zu95QtV6
NTeF/6hbZbCX47zMVy89LfNtz/0ufKwfs4SPviRD5metPSx8+mcelfX5RdlC
L7U6I/s2NDwH/zcVO2muWxEPs7tB3qID0NMNehobakBvMg+9GNcjoY/pyfhd
C78ZmSXw4/xoxMupWeIn9fwWoYpHjPhLX75B7G0GNRX/KF6dioRP8IFcWV98
8oiMP084IHIuyk6S+Q72Hhnv85d580Cs6KmVJoj+akXsn7Jv/Nu2jMOb3IRe
DRH/idMhf04Z5O1BXNgNfew8+M2ivno+/R0PXDPHpWA+wA3x2P4Z9JnTSKgS
UAy/vddZ9DPqPCXezLTaYhlHRp2U/cPyxX9msxihWlL0CcRleo6c16Ke2MEq
bPSb7J956rjs/yk6X/hv0sWPlllWKXTvechzphX9kgV9splvvvCTMZG4/oy4
1qiGeI51JWYT9l2Ngt/Choo+6tkG0NM9ROa1+fGY7zoe+dY6BXnk8T307ZqI
/HIJKYc9HCKn9l6F7FNuHr0s6x/Xid/1cW3/kHNP5RXKenjqJRmX+4sdrWpn
8Z95aSDkG4t8tBKQh1Z/5t9O1sOB7CN6oe4YTvRnozSM105Evm1IAn4sKgGe
/OkGXEx9LOvK4gXY9xDrim9H2Dm4Annz6hTZb4QBn5SL5SKv7d9d4k/rE3JW
5m8Uip5mbpboZR+vETto78Tj/DgnyPfWLsRbOPOrO3GD/ZEWx7pRQf32Ij7N
GuapuQp+rEyD3AseQs5v8lAPZuvYP2c59nf7GPzSh+G7/P/hvGt9IcfSUOB/
znbR32zSF34M7Qr/9dohuKL/63vgyoDJks/a+UdiByV2lZxv7ZkDvpPKQdfT
b+xHjBn3WT/pp+3ss4pZX79HndOeLGL9RD6bl3XkdTzwS9kCfZQgULXBKxi3
LgQehcGvuv9++HNUInBoyEvliPt08Zse9AXw1jtU/Gd2ckg8219NE/3VQ/kS
/9qjVfD/7HWsf6zTqaiHRhv2LS6kE4gvhey33mc/c/gq60c49j06Cn85LUM8
Ri4E3Yb6rHwaDPnDI6ReqZsGS/1T17WF/MpgxN2ylAIZV3aR+NNWTZL8Mqas
Fv308UEXZNx7HvJy9BHoN60T+AcchJ0n9oK8Gew73In39dk/Xma9cwe+qGGs
C12Ir/Xy4Ychg7G/Vy780WIH/HH6MOw5rVjOt+c5oMdsh8SX8kqx6KH0yBJc
NP13Sd3TPZwz5dyAQ4KjSoNWOYgTh+ip/zX9oux32yn6GV9niJ/tzDzJO3NJ
O+j33Veowy4nYP8R6AO1xqzvseyjK1nPa9k/57Mvb1yIfYXByJf2ocCJjL7i
H2PfXdQ57yWij+W1W3DccngIvquvuKQLzcv4VeSYOjcVcbRLcF/plST1zXw5
VvS2AkoELy2PDyQurR/TBXfV7CWin5UViTw9nY34yHEA3wZ8CL9sPwd505h3
WezHV9N/1+m3N4k7O35GXA/PRH/SL0zyRpu8WfykHAkV/5gjEkVetaZS9DD8
f5D6bE7bI/Xa+Kab1HX7WCfxk7XfTfymR0/IE35eK4TqHTZLvKp900pkfssY
xMP1CPRv+a5iTzvwEOJ2VpToqeUiXpUq1AdDp/9MxmkV73G8F5rLSDdOxb45
PVG/q9YLTqvPHog8RsVUsb/VMk7004b6Sr22OxbJut1lKPwx4O1Tsj+0Bn3a
rhPIt8+SEce1Q2TeLKd+uaMkPu36D4Azr7+MPujpCdmn/RQFfHXtDf3rpyGe
xm+GvArr9yX2ZbznGm/SfxXEz/0jgB99pgLH/n5V7K/41bdkvfFsC/E4AvIv
7CD4rk8PlXOt096IryMt0VclA2cM00vm9SujMR+7T/BEH+eE+tc0U/gYqWWo
65FNEMdfvi9xob8RLfa0ozXgVfeeqPeeZcDVuey/nvEetYf9TBHp2RvQ7+RT
1NHCYeDTMTBNaPKYY8LPp6f0wea8NiKHOWmrxJV1eDDsuuo/Ek962/rIn/gY
4ODcPrhX3Gst1EpMRj/zuD/ifxj6GXO8gf5u5QdynlFY+aPMt1DFrub+WIkn
rWQA+sJlwFO7Pev4SPprC3GmlvemAOCtknAcfezmU6Kf4T7xIOLQC/m0tYHg
oHllrcSL0ddH/KxHpcv9QVv/ocSNHTdc7KSmXkA/l/oJ+tbXnIGHRUswP7kR
8KJbCPoZ51Lg6JtOoo/WOAb5nOQpeaDWqYiPZpngr6GOaV7sV8LYx2zgPd2X
9707qCPKsTXoL1pMEnnNB4/EX6rjG/TBEb2A/8Hn0T/NHIs60aOv2MWyU6CH
2Q996706GRszZ6BPjdspY2taIu6Po5IRL+23I989F8JeM5oBx9LaST7r8col
7I/AfSnoBs7peBb6hbOur+S7CHFF/536hRFfRrOvPuKHvuyXauBXyF3gd5kH
xk1iEF+dt4pc5tVq+MV7H78rw/18xUvoq5r/BT99noV6sykW+LzExLojG3Zw
d0e8Lr0KPN27S/LUPOMp56k9+uDeG1IF/Eynv7rxXeYU+5YT7G8+oh8HIA+1
yEqsL0d/bl+vh74sfSz8WgCqbpiJvmJAGPSYF4A+J+E18GvhDjvVok6ZqZ7I
h9ZtcI5bY4xnHAI+lKSjbvvZ4Be5C/70CIR/cwbKeUYq5FLbo/+0Y/hOMQ74
oh9g31lGvdZRT0++Ywxjn/oYfZ0+NA9jjwjo7TIE+0pRR8yDwexTC3De/WuQ
PwD3Y3X6Uaynoa5aw7Mxv+049u+OxDm5GzHvtxJ8N3UGn+yX8P2fsJe14yTG
09g3R7AeuBJXwqjHL6zzQaSbuZ7Ed4tWrJc3K0C/K8V37Ifs1ehTle18x3DF
/cpsh/dBo5TjvZRjzU32heBj9ARea+PxbmQUUu+L+7HfxnuPMhj9tBH3O9ar
YXftLt8hUuinDMq/kfX9Q/bVKcTPc/Tju7z//kw9S9n3fMt1b9zvbY3vnMnP
sM8GVUpAtUOg6krqmwtqtyGtx/dSZ1DV5DvpXOitFqBPVAeh/9JDiReDaHeV
cXgB93ON7+kq35ftPczDtcQbV+r9Nd8Fh9A+Hfi+xndUJYf+IH+tJe8dtI96
mX2eg/Ku4bvtGepxhffRAubBMn53jTh3gTg3gn4xa+k/4uNoyltAeT6j3PnU
f8Xz9X8AYTuMkw==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxdWHlYT/kaP5YJdSn7rmPXWG6WTA8Th2EGY6LchozlZGSUfRnr5B5LN/s2
g4viXDyW8oiUNTmIGBcRWcuRKEtqEm3omvfzmT9cz5P3+X5/3+X9vJ93+56m
Y6b4jiuvKMqMyh//8w2Y3Wv69IC5Qxz+HAQGTOzaJfDPHxvx7+M/La44t+dH
qd4oEqkHY2y1eStSqYmxXkz5sBDSE9IaVoJ1BqTpi3nFF2Pdn+d+jrF6EmOL
6632uEd14znbqY8XpNIZ0p7P+QJI4zj22d/gPKUU9xprMTZcOb+T+uziuDqk
nUg9QqnXGUgtjOv24XzTkb8P5L5A2of3mKMhtUjquxXSjOY5lWk36m+V57pU
jrfTjm3eYX4j948j3hfEU0p7vuHv+2nXaOzXXDCvrSQ/lwqpH+dHEcd96ruD
vy8pAK5BuN+c9QHrVkAqdd/j/ipl2DeS0g3SiMQ66wnX74A0WnBfa0itD8fE
p/iQ/7W0T3X6zyna9Xfabz7xr6PcSrmSfDTGPiOf9ojNw/7LwGU4ZGJ+1R76
+ULsi7oMvTqnQTo8gz7nciG9X2HeB+eYu0sxHgocSluOB0GqrzFvTSfO85g3
VxNnEPXbRj//QBxF5K8K/XwF8eyifzjjdzU8G78nQ08tYSrOixz+Ss5bO/ml
rI+IE2kEHn8h6+u+eS7zHWNkXm96JUfGXqrss0MvilQPb4ZeOfG4t2UK7il8
wDh7CTwDoLeaQ55qMm42k6/Z5GXLG+BoSr4LYQ/lEPNKKaSxNwfjphk454CF
c3PrQ0/nGs9E7/vvsmW+RdBTkUPbPhI9ei1Kl32Hez7AvVqayPhOGbLfs7Ws
15ZkyTlaVic518g6Crv1q4778sJx/7W70CsJ+tidydN66GuVka8fiX82eTI5
bkJ+nzEOk/7A7xHwN2ucA2T7Bi+x30n4UROKHst9z/ffk/PH70gWGXP9qqxv
W+GyyM9Lz4k+X288K+uzKyfKuKTomqyv/5Mt53ZqjXPX7JJ71IF9BK91yR/8
3foXcDQ8BT1Tme+eMh80II56zLfHXmN+BON1+HOsT0Z82Q49MP9oI3A17JsF
e5wUnrTWi1NkXbHHJTlvRthF0WPWzd9Fr83ZgkMb4WbJeMqBGMRXfqSsC9px
SMZRA06L1IbfkvMPjRZ+7ZDJwqvdME1wapV6ws51BkKWJEO/9oynSPLVk3g0
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
nhzwcfw/GbWipg==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtciOcef8cOKc5xaJJi71xzmzVyOW5vnNw2PmRzWegVugjbMmGjvdhO
M9lYrp2l18wlY03kEuOtUa2ExOlCeiNKqaSNNpeOfb+//bE+n/r1PO/zPL/f
93d/nlcC3vUNbKQoymKH5398Zy/1DgubvXxykz8G82Yv6N9v3h8f3eX3+Y8Z
+6Bm+B//WL+Aqg9/BbXeqgU1ku+Darmct2u53mjO79p+7rNPPwTVd8v3Yxyr
38n5zo847i7ri/ndWl7D8TxZ/zapcpL8VM860liOtaZyzofkb5fyPGO2yD9Q
aG9Zn0j+9kCeY3uTmh9xnV4pdCX5mk24XkuQfZ/zu1lLfuponqt7Ui/GP4Xf
FsEZIXo6InrU5ZyLwj9bzjtAHLqPzJ+V8XbZX8ix/QPHxlHKp5ki71rB58+x
Mofn6M1Ff6vJ14oRPY/jdyNY+L1H+c2rdyi/6EF78lj213P+cTX31XBsuPC7
8ZBj8yLl1Ab+xn0qqfWMfKxmIme4nHdO7OYj+Fwpnz1E7Jgmdh9JqvwmeMfK
2E/WTRB5h4vd8mXd3FLOv1rEcfA+fp9WUo39Y6JArfJGnJ/Zj/yU8aQnhpL+
vYPY93OuK7rI8zrdJZ1TwnV9CgWn+LWfyNNCcL1Ouc0tYp9FYp+PxF/cxd/e
Ez11EL02Fntr4mc1xZzvdIHndvQnjhbulTjHMbGcftf1LtYlHLqNfdM8SnHO
2tfugAa6Yp1a7w+qeLetwHztmSqcF55eTXtOpryzIihnTgb5VzJezVTB0Y32
1t4WP2wr/tWP67TNEte64PLjvL5c4mZyGfGd38v9D+6DvxESCvms0XtvYbzJ
CVSLDyvEuvRW2TjvDedM0JDO6fjesQLUOBV3CXxctQLwmTuiGPOXDpSBlnjd
I35H6vEDf8rbP5/ytb5Hu/YRf/+OOPVMiSOJJytJ/LBa7NtG7KaIn3uXynk+
nL/pD7567R7Yw8qdQny13fKB42kM5FcunP0R+8deO459V3yPYV1euyTsm/Tj
YeCauQLzWpVjCuZTRuZiX9nHsLvuvRn2tRq8qyl/NPX+Du1pvEuc2r3fKW8z
+qPqIbg+lXEP+qG988/8x7yhZGXynP2n4T9m+wOwm5Z6sQTfY55cA+2aCrnM
jH0XQEdN+Rn7huYAr368EPLr04uB29w85gj2zWh9COsqbwK3ceA/FtZZG3Mg
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
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtYj2cff8ZomU0Oc8p4srVd74Qa0szybGTMzGaW45Wn0V7Hi2RGC89r
bfMatuXUVDybJCWviYyRx5BKSUwS6k6lKPHWsJx67fP57o+36/r1ve77/t7f
8+l+PD6eM/qTJpqmhT31+N/o4M/enDcveNGHzf9ahATP8u0b8tdhF/k9/tMr
7twc9Bha/RoAzTKunU1/cK24Vn5/cp3OtdahnvDqbe63vkc6L3BtBxHf8RF6
kXe534/n+gih17aO9yxZ+xLPmiv44wn1o6TvdKScKoV0jAqeq85y/oj89NOE
RiDltM+Jnt8TX2sn8jUhPUcXuiuot50j+qcJ/1rys1qKnJU8134SeWPJR79C
Oka02O2AyDdD1mMJzXe57ywUe50SuQfK/Y5yvpFruxX1M5cTX/sX5TBiiWeU
iD0aua+WyD1HzivFnk3Ff/GU13mhlufp9IMT+JByeD4inUX3CRMfEM5/IPIS
zyjm2vAnnnZI5Lsrdve6xfMM0jfiyslnOeW0nhc/1Yict7mv9RL5j4j9Hvwd
N9zX3MRuEkd6jtDp9F/S3V1BvKR07o/YJX5K5HrTea6rrxIvSu6FUU6z7ibp
zpH9ITXkt4P7VgD1Ugt5rt6kXFYWoT5B/NdDoC3+ep9+1IaKH1aLnm5c25Gi
x7Pir54Sjynkqz0kXzsgjnxHDZO86Em5s8cRHnWjPHdianHuNQPQuryR64su
gLY+4wb4LfsCa/OZekDtI3/yW/Ml+Uw6SL4v069qG/UwpG7YtRLfl0XuNVIf
XCW/XpW4DpU4e+OexDv96Dx1g/LeLiWd8DaEX+2hnH7fUe7Yw5DXHNu+GvtD
t1YCb94fFYyvaVeA5xGkQK/HJKw171uAav+jctpxy3XAlr1AT+t2knwCkinX
oDLK9av406Be5iTaX88U+UskHr8TvYukrnSVuDxPOxjrGGdm/U7idZ/Ne6uG
UM8u7uCvJm++BjyfFyGvEbXsAvR4zTcfdP2KsnGeO/A46LTxzcJ+Y4sToOd+
D+d24aRz2C9doWinAaBr5ySBjx46i/J8foHy/Sj+Wyf+XSrr5Yw/Y5n46bbs
S31UO1g/9Lb7CHPDqdcnI0h/yp+wr0oZDv56jVsR5HDPzgFe5D4H5wWJu4Hf
MjwBeN9GxoFfyPofob9PVCLwvEdtwb0Bq1Ig1+oOmaB32YL/tevBjI/8n6mn
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
       "], {{0, 28}, {28,
        0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWXlYUFUWf/kZZiYzMippLo80s3GhtFwazeeSpTkIbqSYPnAbKUODYrCk
q4P5qYnjnus8c0lE3AVcgBebCyIqJoiIDxUUkU2DRBHHfr/zj3wfnO/ee+65
Z/mdc+59eAQEjZreQNO04Jee/RnlHzrwq6/8w0a7/DmY5v9Fr3en/bnYRn6f
/VhJDysGPKPOuT9ID5Eadb9zXFrD8VNS+z/VoJoX1/VOsr+6luu+XDc2iJxh
3KdKONYCSdUG7rNbPCC9yXlLzlNtONbHcOyky/mFIrf+Pvm3cWxP4rlqPqm1
jPqZl8SOas7b74ucKxzrxdTD2EqqLxW+EFInjfMqQuaXynl7RO5c0W+cyP1B
/HhWaDfht8R+sVNVk5qLKUd75xH5x8i+wXJumPj3uIwfin/2kOploueFmuf8
b/qIvq7cZ12W8yaQz7rLc+2mlZy/IucfreP458fUq1L0bv2E+6JIDV9SVcF9
Rg75nXju1z8i1QYKLSJV/5I45wiNFv0Gip9eEPqWrOeLv3TyaVvFzmyJ33nR
r7Hg7nop14fQLissh3xrZnG8tTntux1KuXs3cL9/DMdxR7geEE3+nudJR5RT
fqHgq6SCdLOc85XYvYbUbi90mcStlcQlTXCdKHpPEXmDJO67xH53Wc8SXEcV
kZbf5HqOyX1Bm8sgd0npXch9WlaCfQWexVj/wbwFuiWmCHTPuts4JzICVH9B
YZ/l1aEc8rMrQM33wiUOm3nOyAyeX1lF/Ysk7n+QakGi/2dSL95lftouYu+H
rA9mtuCugdSRlhKvwZkc23N43qlppTivfyD0NsO7FULu9x6XwT+qayrkVscl
gK/58KNY7+8Vh/mK2l/BF3DxPMb9zueBr2QM/KJ/kwz52ub+5cT3NJ77+Art
vF4s8SWurWZi7/vP57s1VfCYK3jsI/l6TfI64i75+s6j/WPTEC8tuBR62G1r
r2HfgqyTmH/Q9jDG6yN2QI9Fw/Zg/sIvMeA/th3zdkGXnVjf4bIP59UlHIN+
j23Yqz395AbzdQvwYLbKw7nWKuqhjSLeNY8btPcNyU9Pid8BUrOhjL8jzp3V
gse5t7g/MIHj/buJQ58y4MpO3ZaD9Ud9U7B+2oL+RvX6XbDPtxZ22qvuI452
cH0y+KM+t3GO+1Ssa2rQAfC37oW4Gnf2JYJ/a8YF5vnwmzh3eBucb2R2ob6T
11Av7Qz9Hy7xOEkcWo7Uz5GSZ0sljseIWyX1WLvZk/KaegEvxmt1wKEqyEG8
nLnxhyDPbwr0da76pENuu1euQt7DHoiDWRuJPHTMPdBX/WXUdcg7OB54dooD
T4O6mvCH9WAl/GZ4DANu9ZgeyFOn9eFyxiGKeg6IpZ6zCyWexKuZIn3yCO3V
jki/jmX+mjc5rybRT0bGaODEyk/Ihfx22xAH06079FEhWZdgj6cOO+yiRPjD
TPWF39WwTOJa3wL9jPzvWUcCklmXFjYHzo3psacw7tSacR/smkN9vwVulNt9
4ih3ktT9k6STS6hnvOTdFcHljxK3KMGrP+03VjAPzfpLHHv7Qw+1px52WD9E
0d/nT7CeTM+5A373RvTv17msh1NYZw01k34cv4/6FC9lPqwIob6pTQow7tk5
A3zVXYEDY1FVDnFZVcw4T6O/Xh5K/f6bTLkzpR5ekz5hSh3Jlf74ieCyj/T/
1VJPa5LIp9rQzyMH50PO/aPAn7UhE+eaCbk4Vz93h/Wu/GP6baQnzz3nTjlJ
rTh+6wDj950r5Nr6v2GH6v0O7br6Gai5NfwK9rVvCv8ZLmd4Tp0f5Sy/Tn1T
qL+xSfqBr/SLQcSlShX73aWOxsn6nDSOvSdAD7Pfe8yjW7NZP0MnAbf6ofHE
X00Pnt+06h7WT5xj3m5fTLwe9oUcLSIR++wZ30CeVtCKdTO9Gn1Dj57B/F7/
OvJd9+9N/IQLPjuGUO8GzCfN5Tbj1EfsiJc6+UjysIXEMUXw+oXEt+Vlrg/Y
CX2tBYegl5odwrodlkV9R3SAf9X81bQ/JpH9cGQ5cKc9nIl6YsU0dqDvpJms
O99Wsw7f2gu8G3bpCczPc7kIvuxC8gcUsL6Evg377BXj6PfyO9TzNu8/qoPE
74TkYb7YFSB2usp9tFb8si6O9s5exfqc0RZ26kWvwT5jqxfsssa/zX4V9ibw
pLrdycb6g/HQ05m+CvExI0ej7usro5C3mn8247Yt6AzmzR2sVx89wby60hL1
0/J/xL7vsYNx1BKI778z/9RU2qc/kvjJ/dKQPFMz5L2yX+pMd75bzMufk7Ya
zf7aIRw4c2qe4Dyt8i3EycnyhF3WB/W/Yb6x71nM36lCHqnYhtS7MuEc+DaV
0M7o4CycW5QOe6y2g+EP29jF/vfxTNQzY0oY/Kcah6OOWru70d95gbRn9DXG
JZt5qMu7xdgpdTJJ+mEM+54dynum9dES7rtxD3FzovJgl+rdhfjKTmf/6usO
vaz2fozTd0cQD/P7OcCd1q5XJvZFJoBPrd7Bfac/h/769eWIk5OzBnXL6doR
60Z4EvG7ejLm9UXreW6fn3nP/ayH1JVcqTdyP9snuJR7tZYv76GD0gf9HMZ1
4wTa33MIcTluN/qz0a8l4mSu/Svtaa+AR2dtBPQ3z3QmPu9F0546nfUxvxnq
r72kDnllfZmC/DQupTLPdtFvqllsnuQb/bbiFuWW7UD/td67wD57vzPr2dfs
g1ax3KvrJV558s4NlHjGCS7TcmX+OHBux1SzTj55CH2sxRuAHzO1GexzTuyF
v60hRejTZnIM9e8zhfeUiT4Yq4VNcB83Ul4FtQdchp667w3W0Yk5sM+Jbgo7
TLuU9TR3Lu4T+ssT0R/NU3shzw7uiXyx+3vTvunyTnVolyH90P5a4rmS9ukJ
7Cv6jETYZyV0gX1ObTz0t07/DXljjt2E+4aZWYG8MsOZh/Zu9mtz0Eba2XYA
7DTbrOV9fPZE2pO3HXjQljXEWK1PAL9WOBXyDLe1vKf2G7cX+5cr2Kmt84B8
u0kx69ytt4nDQ2W075DUyWvSz+NItU/lu0JHvvcsv7mk+39hf53P+JkR7sgn
e+jHuCdqWf64PxtjAlkHDwQhvlrGddbP7jGgxrRK5t1sC/jTPJYwDiuHwU6r
4VL4xzyZxPfVtuSD4H99ON4X1tmD8KcWEgw/qbEX2UdXKMZrjtTP88Sp1kTe
8Zsljj/y3ay/Ie/ZJWc5dhvLuplwGH42vkhmfQ84ivOci/NSiOtQ4ujq78eI
69Lj4HftlEw9I9Kw3nleNuU2R90wWgzl+2/7C+wHPjrqrjN/BPq88prMelt1
H3nv7PKCP+xGci/OjacdeyVuAx8+1yfUCsnHFyWOy9lP7I18Jxndr/JevGwL
37WF3ry/7PQjXj0dnGtlBCOu5qIA5Ind/CfYY/UdAfusXv9gH68p5rs2QaHe
WL3Hos/Ybr8Cx85dHfMq1584XDge69Zcb76nI93ZJ86O5n1Xybtevv85k+Se
skDuo47kXxfpgxfI7xzgO9kwLpDPawH50jfQ3okRvIcdH8Y8+DQe5xr/dAOe
HRc/0su/sa580wJUX+jDd2RoJdbtxyX02xZ/yhsUyPe7qwfrx2tBmDf+14l9
vaIt47KlgPF4Ufp5kuBwgdhzUupNO3kfdpR7jJvYOYs4dj7gupUqdh9kf9Tf
5LtLHT5F/my5j585yrEVKvLoD6vYoL/bN6C8yq6kG1tQjy/f5363dPJFBnF8
IpH6xQn9if1LGyL3kePy3Wi66OkteTdZcLlOcCvfF41q6ZNVQpXYX8765NyT
/PWg/6yS29JHiWvNk/civRH5zM2Mv33gV+6PzuL8z9znzOH3A+0i5emv8D6i
0uhHNYs4snff43qB9LFZUh/rBI9P5LyJcv8MEfs8xf7f5X4aK/b7yP1GvsNa
G+V9HCLf58bJ98ylTzlOF5pJahwjNSPracdLpHYsqWogfPNJ1SjhP817lNlI
vqsOle/VSuzxl3eOj9xP9ou/F8v4D/nuKd/PjXVCg2X9DYnbRaFljIczVfAc
JvOXnv9+r30o817kNybId91XaY/RmPo7JZIn3Wqex/9+qQ8DhPpJHFqJ/E1i
n3wnN5rLd3Vv+f+A/F/Byn22/n+03rIm
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
Kvr1F/0vlfyRJe+daomnTJk3ffQYz/8B4IN8lg==
       "], {{0, 28}, {28, 0}}, {0., 
       1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHlYF+UWHumi4pIgYSouY+FSigapmbiMu2VlAS55XQYI0SAUM9PcRq1E
UdygvNaVsdJckMw1ZHHccUHBHUwdQAQURBQVQTI97+sf8jw/zvNt5zvv2b9p
FTjJd7yDoihf1n76zzfg6z5TpgTM8Kv5bBAcENa1c/CzxWb8Pftr+Ki091Ni
JYFqoZVCzboPhOo5FRhnY9769iHmPwNVYrBuvF+F9XLOtwQ/JR9jwxvnlQnY
r5Zh3R5wH/PtOJ7Jc+dB9Rvc35vyDSCfaMinplIeH8rJfWom5u2OmLc8iPMn
UKMr+c0n3jm81wn79YPgb06jHDpxKVhXjlFuL65vwboaTP7Libs9xmY++Xty
vS/v7UM5U6A/vTv5fc5zB4lrMfYbkcSzh/ryoH6yQLXn9viC9/vwXCPiDab8
aeU4v/c27gunPuc/xn21qedOmFfuQj51ZTXWd4Aq5dhv38RYffMfzNfE2AgH
1WpxbFBPmeCvraC+80Btd8pLHDr1r1VwvQtpQ+rvCu19iPj3lGDd/ypo2Fzw
e3i0ROR6J0CoWuvT27LfXC/Ujm0AuZcOxjnHaeAbfhZ8fy2D3ttDD2Yy7XaZ
/pcBfJYTaQfqJY92tLjvMe07gX7gSntV0S5tGEfxxDXyAfnk4tzpc5j/MUFw
WGVDCuTciCu5IqdXnTyZD9p2FX634LKsW+ttOdfNui583svGuarUW7KvZ6Xo
Qd32O/j3Og956uZBvpvAb++upF6Az6ikPiYyvlbS74IQH+YM4s3DOd2BeDTs
M+NgL/3Tk9Cz4yfUc02RT49JELn1jY0EjzZr8llZD/U6InzSyg/Jel+fI9DX
nGOynnhV9hnuA+W8Nd77huxburZY+HiXAq/TTMiz5jhwnbsL3Brz3z36eTVw
asxfOv1QK+X4L8ZlJO3GfGTE3gL/mj9iX6qP2E07lpUv6+18c2T+P9Eir6bu
ERzW8K/2Y3+6Jff//BjjISkytm65ythqlHZQ+ExudErOu24WvNq79WDXnUHw
74thkMf7EmhcEfMb81wJ43MJ8XxIvyUOxZ32bMV8MwN5Q22TjnMRa3DPH6tv
ynyhmQP7L7kk8iSmZwjfzz84Kfs7JKeL/O8YMq+91OqEnG/snib7LpYlCZ+G
Hn/C/07uEjn67z0s412O4g9Kl1cEpx3RAXL67oP8cy5j/C38S3V+Xn/ohxHM
K4wzfRv9NgA41TDmu5ejsD6vGHmj5YEikbvigejZcOwj+KxRfwlVRhZkCe6P
HP6W/bl74bcrM64J7fDhFdn39o4zQgcNEPupmwbtFj6dCwW3/naE+LFdp4b4
iVZeJffrgchn1jbkJeXVLPhXB+C0LrCOZACPNq+S9YVxt/ge1lfSnydtxbkz
bsLfdP65UMZdUiSfGK9WSD7Rh+0VqnWJFKouWCTxae8MFX0oa6cK1a5tFvub
npEy1l0iYCefSsTrwaJEGc/YJna23T6XfKTeKZa4NCrrws8GbIacD4HT6FoM
vC1gH3so4++/rCOxHLdm/RrOOEy6gv29zgg+27GzyGXkHxKc+v0o+OuulXK/
2WAQ4rPdb7B38Dfi1+aWhagXa69inJ1RAr/fLvaxFrQ+LvNzkyU+1dQmmXLf
QnfRkzFvsvDX01aBD+1o+x0GvlLkV415U19Nf42hf6YzLs/Rrq6089YU2K91
BewX54H8FuEF+RPD5T4rnvHRZgD0MyEQfPqMpp/XAD3cUvYrK0Ihb9Z7sHv9
3yVeTbcWkm/VyAbnhK8r8rTpNwj2e22CnDdK2kG+ENRhdXUp6Dfsg9azju+D
Xxrz2RdEwT9txqM69BjGLshjVgtP8D8eC5pQBH0OHAY9jKgN/vUKZF73wjml
1nDo58RI2Dtql9jfHttJ8pSRGyH5Uy30lLjTt9++IPPVIaiTvgnwDzdv3Nf6
A+jP+zrk9Ec+VZqzj+rCeh/Levm8rxvPuh/KfvLoRcz7ZSN/Kl+D/yeQXy16
iPktzeF3MfHQ8y/OgkNPCRb5NP8u4ofKI+88yPtQ4srs1lLykP39eMk3Vttf
kX87Osm85jIB8Td1wS3492DESXUV7m+APKpuLAQdyzjzpH/G0Z4dWf8bsF6M
QH+pFKbB33ILYY9NU0CTziN+vp2HvFY1CnYJ74W6uNQN/UzmKcmzZpIpedM6
kQk89Uslr6j9dbGTNjZd8Bl/V52WsXMT1J0cX8m7ilt32NvDX3CqN96Bnh/G
Ak+n68ynxPeIOIaxz/yTeH9h/WvLPDo9HOOF19CPVS0T+yhKOOxz9mX0HY7J
gkdd1lj8zXplw0WR536iUPOJ73nZFx+C+hFXgj4nPQ31sW8s6Ia66Gv+/z76
hbe+Evzm+u7QVzMPuU9tNlZwWhsvAueoM4ijZexvXqcfDiKuMta/nsgrxgkb
9nzDH/qoXiX89NY/CH971Yfws9TfLkEf00Dzxwm1p84XHOpPGYJPGXoR60sr
JW+oDprIrxSUS97UT29Ef9C7Gn46awTyy/bpohd78uhsOZceiz7WjgLOHu6I
78Y7gaMX69wmvlcf8/30J/uzP7h+EnlJXw6/1PyyxD+0cU6o0/vWS/7W3IOE
Kv0rBI9+pETW7UUl6Cu3BgpVPu4l8mm++SKvEgZ8dvQ1iTfTJx/14ckW4Wfu
bC/UmBMt60pCkuBXSz4SfVmBceIn6rHzqKc93we+dPbhX9J+9SpeyJe2N/u0
4RnYfxp1VVtuoY/ImS736oOnHpX14v1yv3rtjMSVGZ0k+UBJuSP6NcIPID+e
/gx9zlBnwWfancVOZvP20rdZixKRVwrGAJ+ZIfXCiL+fKvwuLN4n96/Pkfxq
xkTKffrdL1CH5yKf2yP5LujB+JvCeudNvLuRV6wleC/YzfYKPju0EfqUvrPg
Rz435F4r97zca+UHor9skor30K6Okk/0gD6ibz1RlfxvP1oo/aVeNlrsZUdk
Yr7VXcGtvTQuG/G9FX7q531A5FoZskfmy6dJfTQOews+q6mz4FN7JsDParEO
DmN/fZb2G8D8GQh8eg28v9SWY5AvH7lIfCvT1sJPsgbvlXN7GmyX9a51pH9U
366Sd4E5cyjkX9NM+ix19Bixt3YmDPiiZwNXaRD71XWiP9P/e9jf9ZToxxjS
CnjbLJB4NDaORhxcwrvKzE9GP1yGPsLqjfiyolgHLfYt15k3t8N/1cvwT7vH
ZOjhhyzxN9MjHn7x+mvwU5/9Iq856R/Rs1o4Ce8ehy14B5Wdxftn60fwq1mt
oJ+YW+g7S9h/Tc9Fn5pSgDrXdhPi3fcz1Pe23eDvTScLfis0Dvnl9ZZyzvbf
xb6a+aMJ+86d/A7zMe2XxfdDAt59yjrm3W4tYMcm6Det+EqJR/VeEN5JM5vi
nfsg/TLkGI16lxQl69qOENjHuR/wTNNRX7wOoF4fiUH8NP4R+fB/frjPrR/6
wDce4Z10+D7OXSmC3XJmo6/oj3pmbaCdfNmv8LuF2bzyhXUlA35sTy3Avkzg
tHyjMe/bHPPfTUQf4bUK31/61UDftnY15Ktuiv2RTrinUWvQ1RGYD45nP3UE
tPgQ7r+8Autv9cH+c/Vw/+wK4FkUhPka6P+V2sTRlfKbjD9/2i2E9WEdcQ9i
X3OS7413+b2vIfk4oo5qsXdwzqeAesI7xVpDPx91E3TICZx3hZ60aOjP+AN8
LBecVzzRh+h3joLfbeQBYzq/Zz3h96jr2G+sY3x9QT8Mg39qX3J+CPMmv58Z
1yn/B3wfFXJfFvKO4cL8U0j9jAE+oz7Xa1EvE/m9j98dDSd8JzKL4fdqCvvf
531TffQVSjz4mHngqzsTfxW/R1QWvxBn+ncv9pdmMr9HHuXYk/J3ol1TOd+D
dpxEnJu5XsZ3kxu+U+reoNrqJ8BxGFRLJh1GWg947VR+D3qT87NArbWkgaB6
HN/dgXzHpMEflFnM9wGs16wDOuu2eor6XEJ7ZrN/CSGO7cR7hfrl91/lO74z
+L3ccuA9G2jvRI6LmJ9d+P1jEb/PHoMejIGQ/3mfb/C7vNGZ7zQHxss9yjHm
xe9gRhDvucr5RNpjEb+79GV+ufR0/C+NnIqM
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
kk/y3mmsfLn/fzS+hKg=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28,
        0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
HPfod0VP70F839afyPt/iN2SFA==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHlYV2UWvlpjmtOiTppLdDMVl0oZxSVNb2q5TOYSkbnURSW0KJVcxnTg
lkNDDuVYauHGdddJYdwyTfGqgCsKouKCeF1RQIEwF1Abe9/XP+R5fpzn++45
5zv7Od/33LDRAz6obBjGp1Xv/RsQNvHVqKiwSW9V+WMRHhbZtk34Hx8b6Hfv
z7l+rbjLPWj3uwloTb8B6DW/Dmh88iugu4HffV/7R0q5P+030hfdAnTqc20U
iU8v4pvBpPeW6Lzh+v5sGfETdH4tQmckv9sdyM9pIPobwvsH9833yN9+V3SV
JE930luPCq9YfKpLvldJ5w4inv+8+EaLPkdyZknOEMpppnPtjKddzKakswuI
792RvpUJrb06P4HQPyv71aO9vADpuYZ8jA2iH6vvc/jdzJN8na8/YCezn+T/
UHTbJV855TGHin4dz/feIXS30H/2tSLS7+baH8BzjfzLxFt7gvvri8l346/S
s4T039Au3pOy/0LRj9d5iyTPYunjkc6ppvUu4lkFskOa7GmL3yTtb5Gfh8t+
Swn9X7W/S3Z5/BLphhwlfD6K3xvdKQJd6vJCnNsnCGuzZSLXn+QAOmZ9QD/t
hwLAsGpXwLf4EcWFx/MX7+Q6Ip3rebSD00ry9ZQ/lsv+lxRX/bX+SnHRWLBC
fpGfzVzF7zzFVeF57m86RT7TF1/FeYmpl0E3wjqPc/8bcZ7yp50A/otzDwG/
Z3g28LJ7E4bVzsR+SeRR0A1sdAH7ZbSP9UI59X6xBOeYnV3K04f+c8PpP6tL
Ode9Ka9xS3pHlDzgR/ek9KknO90WfkfieQlHSBc0ifvJs6CX0yH1HOCIuWfA
r8MK6rPhlEd/ZmyGvmV7NzCOjq4Fn5kHNxJ/FvDMyO1pwKufcJznfHURfO+8
iDjwXq9PeUfnUN5fmA9G3B3Kd7yC6zHyUwT19M6qrnRTPbkg/38gv06X/y6v
pv5xJbCr16uc+o1umg+6+L/mQr7COrsYx9k/A69z/Drsp+4C9PakABrLV67B
OrTSeuA/3ewnrDvd3ga+d4ccgz5b4/Jpn99wrrN5CeVrzrw2Q1TXL1FPQ/nm
palObqT8/gzV6WDlXUvVl5RC6p8xjvp1Wolz3Npp0M+rVBXx6A6vgXi0OmTt
BX3fkp2guxybCry5genAC/3bbsBHyuA3t6Qe9DIed+FXL7EKoH/yEOis+ud9
7J95C+caLaZQnjuZ9IfqmteI/rNeUrz2pZ5uiPSNkb8WqU4X0B5+0kXyq/sh
6Zs9gnxwo96DfnaLJWexHzjpFODs2synxgePgP7rCceJN/EM4z+H+BdXncS5
VVftAf/31/wCun/3gr5O2VbGbc2C0+CzYQbi1E4KpR8uHqN8YQWM2yTVl2Tq
6fmKy2nKs1H0n51C/zmVqZ/5DeuKn9mZ34ueZF05PY/1b0LMJexfCUZ9MNLv
Mg87b2C9CGhGO3xWk/U1OBzQah3E+G7/GeLQjWyFuPZiZ27F/o1A6G1n5YGf
2+o31uOGIyjH8j30T90LlPOY+u1DyrPWis/vlYcjlJdrb3P/MUI/lnHqvjmV
sOIT6pc+h/Vt+Emc64xK4LqsF+NoVT3geRPbks/vb1KusFzunxnMOhk2E/5x
Pt+NeLZ9QnPMu/T/jzbs5y5LBl9/RRDlm7lG/YF+NHPUJ9+gvFYg66t/UfW0
qeaPpvxuVNDPdj/mnzl4MvU70Z32GNKR9LWGkW9YJPm6w4lfYx7xhyYROu8Q
b/1rkNPsOAB1w44oRL8wo8ZDL69Za+ppJ6FeGVey6f9OB5j3/YIpX9dllKPO
WZ63jvODUaz+Z0nfntTHmUP9/LOE1hTmqfkB49vKG0u8lGjp9w3xy0bSDpeo
l3W4OekmWMSvngJ/WYNj4Gf3o4CLtHdl5t+WKRng83ko+0n+xt3080DUFXtu
DvLA2DSf/rv1Z9rroQSe8xznJyeQdcLPVbyNV1zOUH29orlmp/LvrvZPap56
YibXGZ+Sb/xL1Kf1Tcbrd1mMz4aTqceSE5Tram/oY8ctzWMcrIO/rMlJB7Eu
PYY66TT4cQfoig+i/jpPV6AOObODmecfTwN/u+kcnGdvb0Z5xtF/Xq181UXp
N0zx2V1z+UeaW7LV53dQL6cT7WOenkv/Ty6nPotusJ61iuHc9coz+fTbZdjd
rFWX8VUUizyyhvbHvOJYL7FutF+0DzB6PvqG1TtiP+Tq2w3111wZgr5jdsmG
ffxYh/kaeZ7nbh4KOfzVsyjvOM5V5quKvwuaX69Kn7bU1wxV31gm/ZJ3Uy8j
i3HmDsI55qih7Hv9V6P+GfGHMLeYDxdAD+uJxaiHhpvJOr8jAXXRqrML+niZ
iYRWwwPYL62ZA/j4y+wfIR9y3muzh32l6AvoaWXNRr3x9nOOc9a8zfktZQHl
rHuVeg1XPA6U/3aofn5Zrn3Vpd3sp/7HmYXM+9WIM8+5ibxxFm7B3OU1b485
zBjSA3FmvZXCfJrRFvOIEdYH85dRMH4v9dsLOxhVE7OAH5UDf5uzpkA/+0As
oLunGuLBj+7IPnjkC6yt3AHM44ul7DfxLahHZd1T2pU/kGderPrgIfXFTM4H
/uHVjPcacexvC+P3MY/+tQrfLzRbCtgmAPOY8+UexJ//aX9AM7qU+TSyDtbW
/HYHqU8Q9PMDruC72aQf9p20heyH+7siTr3co4zrgjcQv37XxaRvMhv+9r/N
xfzrz5wFOY1o9kN7l+Lw4fv3dN3DXtM8/W26+kEx/GZU74F6Z+56DHq47fKW
gO+1YSsAv//PdshRWh31wx6yiXW/USnk8cO/hh52z6cgr9nfRB+wjnmYs63E
zvC3U36c+ZjXDd+NdvMxp5onQmFPs2k7xIvplsDO3u2h7J8Tj8CPfkPN3SOU
h4/p/tBD98D1/O5USeX3qZfRf8xWb0BOt1JjzIfupkmJ4D/m7/PA11uajPWy
nYhPu1Ih5HPHv4s8dFvmMG5fOQz7+CfyMIf57WM5dzd+Gfnp1k0jXW4J4tpL
7wO+9pggnGduv5bEdTjz9qsQxnFcAOf+m7xXWzV0b6+lfnD/3WUf/WdMY1/2
i3OZxz8/i/gwYnqDv1ftBZxnBb+eAP5reyzAeu7/VgNuNTg/Jxcy786NZN7N
Hoz+5j0TQz/1+hP7nfMQ/T0s/TDWS5JhF2d0BeLC7f8d5lO77V+4/0QF6rL7
zkTkjbl5Aet6AOuif0D9vJfm6fvvE7VYf+yV27nO4FzkVEzHuVZELOTy993C
eU7lsbRnk18QZ/f6Fc73M+pT3rSBqBtW9QDUQc8JVf84jbUR6LNenn8K9dKO
P4W64S6Y6jMPsjG3m/uCkR/GmiisvXW3kXdmatd85tMYyltPenjKv0DFZ5be
b/ZrDjfO0c9teG9wIxYgTn3/c/C170bjHCP3NOeQonzWucgb7Ftx+9GXzZw0
1rfuwZxLH67COPosk3NrRF/Oa8Gjaf/3p/J+sjSc+Gk/sm5nTAA/N34/72Vu
ANZO3k7aP0x94a700z3BSlW9/FZzW+T9+4Pm0UsniTdoOf3cge8txoKP2F9D
a7NurY+jXMWcp90k4tveQc1He8nH4fuKa27lOZOY50ZNvucYnXhvNf65jd+7
0i9GVflnWgj3R4Vp7iSdGaj3roN6LzokPfV+5HdTv68tPYOUj3HCe0Hvbxl6
t0ohdDdwDjebqN9c473D1n3a1n3E/knxYWqe0Pud97Xmpta6Tx8XzM8j/7d1
/xynOWob5zHjBN+5TNV/U3HordD9oIX6QqnqzPuCO2SHPaqnY3WfukH/O030
fmdL/vXUz29wl3Iv/J3nZBM6XxK623S/9th/vd/1TtRBebJe9+5Tqgsleh9q
wbW748oDfcxtoneTR2XnHMnZXvuJ0udt+emw7oOFWj+pfn9ZesbIz4fvzzfU
x+grfc5Jn5uExnXtH9P+VuL7UwndfoROTeENEiwV3jDNV8fkl620i39c955n
WSeNRqoXvfTOrnugP0BxOF1xWUdxo3dF51G9T5fJb6NVhzJl7xy9s22W/frr
fV528W/r/a4G/ez+QGgtu/tAvtsD9D4rOY2f9U6ie4wRLX02CW+u/NRS+9cF
Ryp/Zkv+gHvr/wMPY6Hm
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1WAl4CGcanrJFWm22qFLXkK64Gn1cLYohFpV6nO06KiYlVMuGlE1daza0
hDRFtatEjZIEQcQRcY9GgrivuNoYRySOiHOVOrZ931eeJ/nyf/Mf3/vd/1/7
46heQ0sZhvF5uT/+9IqIaR8dHTGud5k/B5ERI1o0i/zzY3X9/vHj97hd0u7P
f7bfA3U3iA6/SX7+DY4P/A/UP8P5bh1+917ifKf2fdJh/O535djccYv8IK53
L2vf1Dug1gV+t1N0bjtSM+Yu6VlSvxn5flN9b8R1ZhCpdY58a77O66l1L1Ae
cympfYbnOqX43bnFsRnP9d4JydeL+/ixkiORfPem9inUeCBxGRnkO59yvnuW
+9q/SR+nOPbHSK5c6sf/Tvos4D5mFucZFfndGML5RlWOve4aj5LeS0sPy0nd
/2r/XeLHyG4pknuCcDUv4fzgQu4TRzxms984r4R2N3Ze5Pcw7mt9w+9Gowc6
9yHlqvyY3+8+4vcPyTdXa7/LpJ7P870FkiuOeL0A6a0M+fZNjVsQp9FN+hsh
e0dKD5b0P1X4Jl7mulZHuW/Vz7kuoXEx6Mnc65if7nNc/dUbwFd3Cun0WFCr
5gJQ//xo7rvnCM9ZVszxFJ5jp1+iftrLv6dL7nfkV7nyn8WKs9Hy3y/k/1sU
Ry+If0R+cFr4DtNOdlg+xxeyOG5wCPK7F+4VYv218Ev4nhQJai1OPQeaWHQW
OMoHY+zXfecC9jf7YJ7jHsV6J+0+9OKvqgvc5oenQY2orpQz6GfqsYn8pD7l
tQfIXl8rrrbKnonXuK617JOqecGKr8ryp7cLuF9qEvcfdoLnL04sAM0MOY91
cZE+6GvOMayL/W4XaNaALJw3JNdjHC36GXLULNiL/aJexnynTe5J7Pf464ug
Bf2vYH3DFOA2t5XQ3j12U67zV5XXfif9if5uFSlfnZc/9qVdrRuKvxqyd770
9Ij+YeV05j7bM65B3lInL2N+XAvI47TdB/ns1geBy7ntbsb3S0s3gL7XFtQJ
D9lAP4ldB361HzJAO/QDfqtVk1zqJ/QM9JzzBHq0a90mzhb9KdeudMrVj3Hu
FBGn7RCX21D+maF8NJvzvFfkp52LiH98DvkX46E/b3biVexzaT79MWFaPvYL
HQk7GLu25GD9gZ6wk1vpzE6cP6TZDtDVY4Dby4xIAx14JAXn3JmyCnRlSTrm
Ja+B3f1yaacxnhSHc73wuZDDtcYRR5tfSN+S3J2UV6sor0So7vRTfJZR3nxK
e/stXH5f1oB5Ye5unOMurwC9OlHFv2JdhcnUd5N1J8Dveec45NnQHLjNSZmQ
00xqcgr8nT0OYP/+HvEeHL0GehtoAZ/9Tv9MnNfxzTzMC0lAnFo9DyPujWux
lG9lNu3k0s+8ecq3t1SP6gh3PeX9PvRLZwLnud8nc/7W09jXzr4J/7RrBhbh
nLi/8dzCp7TnzGD4q3vwFvFPHI/vdscKiCdvqnuFOOrjuxWadhj863nbwG9f
fi3kqFoNdvfXz0B+sttF4zz/x3KM/6cfUe7J64irL/OEf1119zHxGJmq24/J
919k3fHVx1iJzJt27BbuGxgCnI75BPHgdCA1P71CvXbZA+pVvsf8OjmJdjez
QO2ou+Sn/UK8FT6i/42sAjv6t+ttxPfMasDtrwuAHow+paBXY2go/fNQF8rd
aCvl3Kx+IZz53rzKfGkFKs8Eq+7FK3/eph9bsTuoj+bMX87ZPdx/Yyeuy/sX
9037mvMrRdL+mz8hv8/HnHf2N+JMzGEdGJuA/GSWHXMU/OBBxPftqa3gb66B
fOX2qkg/KTWb+nx9J/X00kjK2fQcz9tCXFa04m6B8BxS3twpew5nnvHfVX0Z
xvxirq/KcZU46u1+IscTEjgumch5ZU/x/E0pxPPgAe1annnXuRrFujf274hX
68lg5Es7aTzyjxn1AuqGM+YC81bgZMS7NWAU9jHLFbFOrPqWuBKvE0dv+qfx
jfL+HOWTuqp/I+SnleWXHVUnRjJu/W6zyZ88g+PJX5DGdCDObSuI42Y288/h
XYg74+FG4ukwHnHk3TxGe4VmwP/soFDkSSf1NvKtuXz1PvBHnkEc+5sDuN+C
77n/I+rNHT2Y588lLrc3+x2jhvxxqfrxKPU9ccqj6m+N99QnLT5DPY1ayO/b
LeJ8NJh6TL4Cv7GPGoW0e9YvwBFYEf7lX7rMet9gNfKlG75iD75POwQ7eb18
1o/n56OuOOODj9M+e4HPmpaIfd16AYzz6YuIc24h61Xb7arXPu0zS/3YD+pj
XmacuSWyY7L6nD3sbzw3lfy8Nzhv92fMH11ehF7NkAz0W96Smsz7eTeO0E4p
lLdXedjHrb0FOLzO3Xdj3QcO+MaQJtnAkRJ9COOcUawz6TPRF3l+OHAaU7ex
Dzw6iPa8M4/x2Po52mEh84zzlHK7X8kf05VnFqvur2FdMGuwrrjlehDfmr9Q
b1WWMy9MTkLds+/X3g96Ohdy2mXOApfddCzG7v65GBvFnfYwjhZhbF1firHj
PoEdjfrZ8Ft3ZVvoycgMoR/0C8U57vxw9H9+/e7sl94dgLzjDLDorw9Y740Z
6lOSn903dR8aJb9NVnyayrt1+6mu38Z+ZlIy/M5KVh/5XhfkO//Lhuw3ravw
Q69b4EGMjVzYxZkVxr5r1Uz6Z/c5+O6v7Y148xduI87sjqwLaz5gfM7aj3nm
ke+5X1RP6MEJqIX8YxVdgFzWjH3012Lex9xduj/9/qwuqC9NvUI7N2Z/534y
DHnPLeoDPfrdW8LPjLW11mPdsb9uwr4Ly0JOs0Ib9C9efGdQf0xX+Ktxbjf9
cP1Y5o9DZYlz5jXoyWjZGfoxs/bS/nv3M++UXYH+1K5ZGue5znDqMzgfOO2S
i8hf3vFoxs2Xqm95tKOZo7o4RfZLYt9pNlrAeY/ms/7k16JdPmvCfnhV5HLw
p721EuvLtQdO2/s37Zi5HtT9MpT0ceEO6nMu+mijciDjMzMym/ifZ13YGgQ7
u8tiEKfuW9vYp728chnHAcBpP06mHefUAT774CX2DWN43za7CFec+rT/6T3i
K373G7O/s+eMv8K4v8l7zj/DgcdZ2fsnnPtqmSXkt1qKdW5D9I9edW871pVK
YZ/1bTPK7Z6AnsxqTVkn0kagv3SGxiDe/OgcUHN3F/ax6TvYp5Z+jue3DUK8
+8cHMU7DTOQDP2E9/TNUeb+03jVm6V5+UnSS7JfHeDU7hTH/F8fDr9zip7CT
NWEf+kQvrSL6Yu/uCNx77NGvMS+Oqwg5vAdT6KcxOah/5vsJ+fSDw8z/y/pC
Ps/+nHnr3qfQp/vVx6ybmxKQR/2sCN6XCzpjvfPQAd9ddADr7Ht8B7D0fuHM
Yvx5G1XHr6n+VVLdX7KJ37f4rHO32vIetr8B9OvkruK94Hgh6pUVUIP39Dqz
ca4Z34J1q/X7kNc8cZ1+8GA6+8iZSdRbRDz79nF32Neu+J3vGhN6sl8JysR8
K3vZFdqxL/v5rhmst4v3M+420S7eUPml3q/MeroHllffUkX17+R50qU/kh/J
OuOmt1P/F0/5RrzNfjIslPLdm0A/mfQ6z3llEPcZ/yHPvzSJ/Ih51GOTHzju
toTfG6Zw/gHaw9n5kPl7YAFpzGa+WywJoTwT8rguV/fcnsLzRDjrqY8J1Dtd
S9rT+0z5JpHvAH6q7vFvsk8wup2kfrpe4PxXqA8zRPfHZ++ZNZSXX+Q8ZzT3
McvrXXKY5q8Sf5L6pYAM7juR7xHG8GP83kbjSerLgpU3OqqODxaOxupfJspu
8lMrmvHpFstvWysuy15Wv8P+wKmi99yxyk/NH2jeE8574ynXb9e730b190XE
aX6i++Z29U0n9V6ZV6A89yv5AXo/u8N7uvG28uNG3efCdF8I0n2gq+Q9Jj8M
V33Xe6w5XXoP0b33uN5nKuldLkzvqHf4TmnGC08S8VgFpMZpjYcKZxTnu3NI
nanEbezgesfgPL86x2aR+qtn8sXJj1pLDz/rXb2V7LRPfcvrkrul+CXyn3ni
n5V9G+keXFZ1Uu+8ht5pnYNal6B+/L5ovu5beu/2e+i9thrxeOmU3/+P/OVV
6S1W97N/KC4uq1/Ue7Vlyi5RwttO/Pl6z1yqd5dszvPW/sH/P3NulCE=
       "], {{0, 
       28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
gvPzTb6DPmd+/fX/hP8D7xeFyA==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 
       0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
HtHybtb3yff/A0SbbYE=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtcj/cef2otMxthy3V5hAyHmUKbtR6juXWEXF4dM0/iOIWZ2kJzeXLb
Gsoo7BjnSbZZ42h0cQlPy62RopIQD5JLVMIKw+HzfvfH6fX69Xl9vpfP/fZ8
20+aOeqfjoqiRLzy/N+o4Nn9w8OD5wY6v0CmBE/v4zXlxWZb/l78ta2t8n0O
rGpAfWgd8AP3BBpD/hRoX3woUK28j3O3H2A9F/tWPO7pPbGv7gWuDASuJeO+
GYnzxlfYV6N5PhX8DRdAcwCgnY9zJqG1gfhlyjWX9L/DeS2J96qwb3aCnOaP
lLeO8Cj2tUTSNSGf9Rv0Nn1ojwie60p+mVhXR1FeBfeNN7g+BHTs+v2/aJ9Q
8DV2ANfH45yyingp7VFDuefRXtmk/wrt/ymg9gbPj6X/FlL/WsoRTL0W8Rzt
oY6gn5bSDheqsf4J+SY+AR7wF8554JyWQ74fYV2pIHQFtO4B2rW4r5/k+qDH
oFv6CHTP0r5l1N+N9r1NuYupx2bIafekH2bS/jX0pyf1eAw6xj2cUx6Dvraw
BvwvlWK/6VysD/sO92bkgc7my4BT74J+ahXk+LIS56bDPlpz7BtxtJMv4s5w
pjwp0NN6CD3tenmjIZ++mPZ/FfumM/HNuG9tJF2bdnanPkmM7y6VzKvboJc0
judu3RE5jh8TqET/VCnntnwg0F7hJtAIWSZQvxYLvGq1QKX9h8C3VGI/rhvk
Th8DfptiIF+fU9D3POxg1UIuZQHz8TzjvA3jvjX8oETRn8+gtzGYdttD++SA
njnjIvRa8BPwq+m3hb/ap0LW/5Yj0L7Z95bwSUq5JvTnXyqD3H9ckfM9Ai4L
/bVnbcFjjgnUn1oCzTu/yj01cabQMbvPFj7a28tFfzN/K+TOvAB9RjNPLkEf
dQPz+CXmZUQd/cA4bMw64kC9nyIOjcOJWB+WJHysgBniL+2vQ+B/IeumnLu+
/arI0f5Iiaynf3Fa5PF0+ENwdXS2wCfr9gpsumm37H/ut1/ku11wROhEWkWC
l2aWyr7zhBtih5SZwl8bMpF2Pg67H2adqKW8qYzPnazH61mn/ajnOvhNaXgO
94sKEU8+3ojD4ffEX1qrGtFLcQmHv1LDzov+O7fmi10d3jwk67kV6YInBv0m
0HlMkvCZ2CNR9n8fkyxybEpME+i+xBJ4YlKe8CnyFf/bLw0UvobnIsT/Zeb7
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
Ivl5MT6vP8f/B8+Wiyg=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
1RdL/18j96QvN9Cfuyey34f9wHtKm3bQ0wgqArWzz9D+KZ9yLvkm+zrjZBLn
n5BS4FGrfmFdHtaN8nYF0r7mdp5/5yTzI2yN2HsH8Rz+nPqci6U+dZyTnfGs
F1pTmTeflvciR/p8K3mny5Z3Jw+h6bxP2NN539c8Kc/axncRs3Yb9Sq8x3tK
a7mnZKzmulGh3N9iNfvT4hje/y8N5fePMij3a5mr5J3Rui/nRF8kDZR3hFje
Z1VqPs+vlLlrg7zPybul/YrIGSf+ai7vT0HyrtmJ5zlr6EfTPZf8NLHDOZlP
/VZS7oLD5CPZX9XzfB+xY8T/1ZL39/hOpH6XOXiy5MlseR/rz/6kHsn7Y5K8
/+l81zIHy3uji+A4K/PkTom35lJHZB6zLshcJv3dOSzvLklyT5wn74WZV0l7
ivzt8o4cybqrrZX35eo6kfeI504irzcQuwxnPDhf8Lv2nKyP4DuReoly7AiZ
I9P5vqo35buiWirzSIbU9wyx85/MP/MFee97V9Z1EH+1Fn61zJ+25OVmeb8o
lvmmGc81kyXOx4mfr8k7gKfcm68LfSD+OMp11h3Rf4rgzaMftQmk/9y3tT1i
v/Xi325i9wR5V48Qv6yXObNO6n0r8Wfw3+v+D4RYi6s=
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
+x/wuYqe
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJw1WAtcT2cfP9oFDXPdxHDWwuy1bGmajTmWDK2Q29taHDN7LSVlWK7HzK22
VROyC0dqW2Eo126OyKVkosVIjpJK0TvKvBKvfb+/9fn8+32e5/ye5/l9f/fn
efGjUL9PHBRFmdPi8T+/qfOHhodPjRj39N+D6VODB7hP//vjC/J7/Kd7ldcN
eUytwCpQZd8VUGP1ZVD96d9A7Teu8/ti8iufyrzHRfIn3OB4Gddpt66RnrvK
+eEcKz7nSM0Krgss5fdrPNfsynktzuZ86QXyH6sm//Bayhst+87mvlZQDb+7
/c71/Smntpz7aze4nxYm65aSKkYZaTnlV/eXkG+y6CWmkt/XyrpLZbLvH5S3
O899/IHnt6QejbdETyHEZd/jWB9LPVruou9TgrOzrHuO+NVU8hmjbvL7AuE/
cZ7np8v4iOi1C/VuraG8WjXHSpict7aI8q4jPt2hkOesP8H5nRmkSf/l+q/r
yNe1mOd35HlauZwXLHqLFDsmiNw9Sc1d1Lv6J9fp5bSf6pvL74UyP0L8J4/y
mi+Qz87g/sZo8bsC6sn6lmN7F+2h9uI6tQvlMux88l2Opbw9T9/C+lnDbuL7
OzG1mPdphrF1JB5jfUkQxrb5KvnccjFvO0/Heq1Na+6bGUF5jkdRXv80nlsk
/j9PcL1Ev9C2UB9WjfjTXRmf4NjcKnjGC94fJG4CJA660f+N8MMc1+0lXtce
kMsasvsGvl9prMR4rDtpSVEZ5o+sLwV/1aASrHd5F9Twn/sHzs0+Dqq38rgG
+u7WKvAH9qoBzn0x0Icysgzn6WvoR1rWbVIn+omZI/EzRfKHKnxFVyUeSDWF
cWPcFP8ezbG2fwv1cvQl0oMPq7Hf3eLr+N52SDnkjdhcDDkG9ToD2r76GPhS
go+Cz+G5w1gfW2VB7t41uZDPO+04vr96AevM6ADqY0NDBfZp6wV7K9e8aY/B
4lep94jP6xblLSUu+5bYu17iQSUOy1XiuJ/kJYc80kmenL/6OfSph14BPrPV
HJxv/ProAuZHLcjDfi0mZ+L7vWn7MB+VnwZ5sk7tB3921B58P51zAPzN69Ih
z3epWZzvD72YU9b9jvXNDOjRPvEa/fluKP3UIC7L6X+U70nmG6tO8twXzBdm
C+Y3M4r+qO2mnTWfXyRvMj7MCX0YV24DgM/4Ms7GOe8p5/A95jDsY8ROzADf
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
       "], {{0, 28}, {28, 0}}, {
       0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
v+fJj5g=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHlUV2UavuASoUcxFTJTL2KLuFWmp3Eyr5kWonMUXHIMvaS4DpoKgkzi
xQVRGyI3htS6La4Iipgb2xUZt9x+JYILdEUUFEEkRBTByfd5+EPO+fGeb3u/
93n373p+PtdvmrOiKAtc/vrnFxg2eP78wEX+zZ8NggL/1f/doGeLr/L37C+2
9t6gv4huPxJqNDwGbfFQqPWUtE8d5l2xz/5nDcbbMFZcsK7vx36zK/joBzj+
FWPTCVQ1Qe2z4GNe5r3jud6e679BPiUcY6WafIdj3uqE+63w53GovqS9MK9+
Rjkb5b9Bvj3JtwPkV/pg3ewFuZVhjXJibKzm+ZFc5/3qfMqxl+t7KV8D922m
Hk3MG/7EW0m+KvUXw/uiQbX95B/C9ZXUjyuoFc97HZR7Bu3Isb6ZfL7negr1
5Er7ud/D+UjIoV2mHubSbrF3MY6k3Mm8bwvOW7Me4Nw8UOsHnLP9MVZuEF8b
8LWOPqD+acdQ6msM+W589Jy8egLts5N6COT8avpTEelsnm91H/smlGP+6Cmc
r/ilQuS45iLUijaEKn9ur4A+jgg1A/xAv00qFz5bFmHcbiLuTb0APC6/Q+5x
13DfeOKcQLuUk75HOy+H/rQ+xE07KZ44p3elft2hJ9WLdoumXdQKzN8vw76R
r+P8n0vvCg3MvC18jr56B+dP3JT7j392Q843LxCq95ot1B5adF2oS0cZG1UH
5Lxdtklw63OfQE+jQyCfE/Bap2hnT+aDDk8wPkG/S6h9bp+xnDjOY79dDL/R
F9KOzoz/UbeAJxj2UlfWANeweaVy3u1qiewf4FUk692aXJJzkSEOuW/hpfOy
z33caVnv2uSM3HfVU9b1n16V/erh88XCt9Rd+JvNW8EvfIHT+u8N3P/Nn5B/
TT3kTiPeF+ivu5+PByOL9pxLvJ2J7yLjf+tl8O3rh7FzlOhZ2TKuTM6/slzs
ZaxqdlXkcnhfEHk69zsl47y8/8n51j0suf/FJYfhn+uFanlTMZ88+jc5l7/4
lqzf2yD8tbok+Hl2KuQrugK5WyBerI+A0yykfVYwDkvon1Pphx8QXyrtVgA9
qVFJ2Le+WO6x65xgv5Ae4ldKySz43fXOgs/60VvsYU2Ovyj8troC74B1Z0Wu
KTnH5VyD51Hhv+u7DFnfo2McEZAr9OzMEvjDcOCbHwU5qrMhp+tNyHmN+aGW
cRlDu/2DeH6EPe0C5ulHDeDT8g7GcbOxP3QK/KVwEOIs+LTYTcm5Kn5pt6+y
ZZwVBNrrRYkztS5MqHmsHHpYd+s69J+RJ/N7asXOhqdD8NnBT0+KXEuKsb9o
bDn0MgD+E3IcuPZehVz7qkBbIR6V12i/SNaTZOZzDVSdCXxqwW3sm9oB655J
YjetR77o1di2CXH3/YwS4AwSv9I3x0pcmhtbih7srCTxM6vGFDmtiYgrJeKs
2N8s63tF6MEqxOedL8XOZqwT4vF6J+SdTi9A/vWbQWfmgXYHPsWFONIYfyuI
L5t5x4Afqw768yX4p1VVKPKo+f4ip7m4r8hled8V+c3K7ojHqirIcTIIflzi
Bf5/hIPP+gPgPzEMNPhn+LnHymvCx+N1+LHvSvFPI3qD6Mk6Nk74al9kQS8N
y3E+/Bj87F41xqPof97IN+ZLrBcpjL/vmGd8gE9/twj0UDrkHV0n8qglOUL1
w2HAnTkUONwo90Xo12qXzXhJx/z573FPUD3O3b6CulDdW+ynNRlzDjjeFLxa
fA3se2K74LMHnkfdiAvAfeHIe9qgSthrK+OwH3HMYX58ROpF/APZL9Q7wKcZ
6rDdMw12quwKPd6yEPetP8H+PB/gcUwBjRhEXPcRt0ENqOv5kbDb0x03oa9h
yCeONqgXE95D3HYIRf6seAn6mHRRqDYd/E1f5BftY9RlbRX7yif0z1D2axXE
PYr9ylD2C4587E/Ihd4WpiLOXeAvdogP+o+KLzH+MF7kNpp+hXg7dVP8Swnb
IPFpJh2ReNL25grVa2Ivy/2vzBNcdoItVEufJuvmR2NRf5p3gR5fmAy9LkMe
1++j39EK2Hewr7RvEkcW/TOZfdpR9mmTEa/2txnY16Qaeiv/GHHgqSLu8gYj
f+xzFvmt3V1R3702S/601uwslPV+C6VuKNXH8+W+7M6o55OWiz+qbyjoAxoS
ZN7ooohd9Rt+8M+fHchrD+pR94t/hT5jhgPXp5cg59ya5+LMbMP+rdFuEcQf
jL5Zy5mG+dIuws9MqBQc9i8Dkf/jk1DngrzFv+yZ+ah3uxySJ4wCZ8mH9mQP
qXfW5/EYj1iWI7TTF1L3jfrFv8t6kymoIyUnkDetOtT5vP8gnz0qQx8YkC/U
GPMF9H1wP/zPD/nQ9CO+dNY/9jVKGfv/YvQHSpQ7zn1QIX6mjvcU/dtvfXpC
1v9+8qDct8cJ/ceSpTJvpDcTua2J62Rem9M3G/yeSn0zQlJBmyYJTnNvodRB
veN7sH+7cNS9UB/4cUE86Dtpsq4o78K+9Sniv6ryA+2BvlOdyz66Be3G95Ke
yffPh/Br0z8W/p4dIXy16HiR05p1MVHWY7qnCJ+jY2GfbWfPy/6TTmI/rU+e
1G078Rf0Z3dgN313yjEZf9IEfcycmfDPJx+LP5vdexbIutPX4td2cYbEqfJy
gFCjbYPkW/3QINh3/RjYIxp5VOO7T/2UfUvj+9OD7663kdeVnt1FP3ZggvC1
i34Qe2mBbXfI+p2U/SLPpv2Cx954EHX6eq5Q+1Qs/G5G+wvYN1TGqu9jqd+2
/yaJP/3cNZlXnA+JHa3uvcXPDe9i0YfWPhP273IF/twiTvpUY9IksbPS4w7y
ujvrAPtq05+4LrCf9md+rT+E8RbUc3XZRvFLI9QzU9aL6nfJeXc3sZ99zl/s
Yb05SOyg7FgE+fK8gXPRPOh9zRGJU9P73zJvrR0idjJ39ZB4Nv9IgP0ejpO4
tpN2in/rtcX7ZDzdSBfa7y3Ye8QQiVdl22Pk9Xbot437rA/R7NNeYV7xIr7Z
acDvdhD9SPPbcq/e4Rz0rb+OeMuPkv7fPjxc4sm6hHW70pT6bHsXIJ40H9S5
gah32vbB4lfKCPR59sozEt/6mQGYf6sb8u2pQ+Lf+kI3saNiBP4q9ySeET1Z
8eCrrOgG+d/heyELeVRZyvp3i35axvjMygX+SPYJmbvQx68Nlji3QnOR/yPQ
V9lDr/8h+shwiL9YbyxGX+qzEHVk9xWhRoqfUK3QVfxCcZ2JPmhjLepcxRLQ
dhl4F5vHRK+Goy36G3cP6PnHUryXR74sejH6ZUFevusUfp/R+R3JOE07/sS4
bM9+tVsh1kv2oJ4meqP/ONMgclmr4tBfrI5BXZ/eDnVEiUa9fPsu6Btx6F+m
o05rXd5GP/QgGfOtL6N/SMb7RHPLBP+CUr6PVopdjdX+eE9fGgJ7PxqBviaK
fXJH4jhOnBH0xyjWd0/G5T7G6VR8l9AW8P1ecg56mZiCfR6raGfUScNnB9Zb
ncV9CdCP/Q3OGWfQX9t9vsO+k7sxX30E851Qx+xun2F90wPEx5j9iC+vT6Dn
cF/2mwWwh8a8P5L0Nt9/22mv3/muKGK+CeM7cTBxO3Nfa9aTw9RLAPfN4fvj
fX4PGYX+3OB5awH6J70X3mvm1GL2F3hf2u4Yq6evMW62Qa8lMTh/AnpTlhzE
vJuN+cY+egj7FGfiGE15O1DefOIKYX+dw3zK76xqT9hfz+V3wWWPn9uvFAKX
9tpTzG8D1VqC2l+zj8iBP+gPQZVEvGtsvju1CaUYX+C7tQD215oiH2jFXF/D
PFFKuROJ06D8vYm3F/1xGvGkEW8XxmdT4iuHfcxK8uF3Ha0Z8dwCNR6CKo85
Luc4jHQU9/cnDeb8Wu5/n3ph/bK/AX5zBPRhxFAOfk9R+R3JimPfye/Jei1p
DeOxnudciMfBcw/5XbEf+7bePMc+x/Cl/7akHlPpFwf4Pbk/vgModaDGJMrf
n3xSGS9X+V33bzzvQ341vCeucR/Hg/l+TaG8txvtx/Gev+j/AXFcpiI=
       "], {{0, 
       28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
32f+SOJ7WPA/76N8h66mXSKfz/8fVJiT3g==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
A5DNj14=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
+owq
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVWHtYj3cbf9awllk7OMzMepZxIafUMBs9bYWQJqccmodps3g11LxkPNd4
yattSsxk9ggvWxFymEN6qElUIivxLk/oqMNiRqJe+3zu9491Xb8+1/d8f+77
/t73/XzfmBkW+LGDoigLHZ/8C5yxyHvBghmLx7X6qxEyY+4Az5C/Bl+T35M/
q+3dOq8naAT+AbTuE/XkWqCZz3Frw32gvbuOWEXU1HvESVynhtcDlf2y31LO
0yf9yXl+HDfTua8dfYcYy7Yyjes0F87Xx8q6czxHr+A8tf53Yhzb+hjuY15l
28yR/mDO06/LOk+Rqw33s4ewbfyTbSVI5O0l+6/mOm0l99cuENUFsl8p21Zv
wQjZp63s+4KgM3lrLYmWF3kZq3mOsZn61aNEvucEHcQ+s2V8BtcpU3mOmSv2
qRK9bhL+6zhuPU9U+4p+Zwof92q2Oxezfec6z0kQO/d/wHVJsm+gnB/WyP45
jzj/sbS/IepbG8VfHvzNn9Suom+XCuI08jAHir9cI+pFwne+2Lu78MwXP8kR
vZwXPbeiXEqw9HtVcp6azX3yQ9g/8loN8OZ5oJ3cn+MHlxNTMnnOtnOcn3+Z
7e3cz4ynX1jf8zwzS+zQmWgNbCBuI28zlvKYY0X/4ufGN7Jur/jP0+JXh4R3
huhppGCJ+McYm/Nqc7lvykHwMFe1rQQO6VOB/Y4/dxt626MD7YqvgEqPuGqg
tz/XTfarhbwXxgP1kNGUZ9xq6n39TrbTT1Ped0r/fn+K5d4nyz19KPa7SXmV
x6KvWXKfO4o/RTCu6Ac53y7jPCP3CudvjmT/mmzwUoaml2L9mvJyrJ9QXgac
3OkWxqdsBxqh2Zhnlv6AccPrZehD79IG/M1nFerjiyjoQT20HrzNZZeIbafI
vbtIeQopp9W6QexDHnay8MqS+/Wq2G2rxE1XmRcj9h1MnmpiAvcpmY3z1B3L
KNfa5CqsC9oNee2LJnn5RJdgX8coG+fMdwMqTVuuYP2P665iXcwBoLa3zX8x
b5B+A+NhJdCXuXgJ9lfun4TdtZhplM+gPMrnvPd6b/q1kVRDTJQ4sUL8toXc
Uwex5ytV5D+Wfmm/055+ub4A+n0Sr2i/qc3gpVX2pt2SnSCfNSatGOd+GQI+
VpTnRaxbc+Is+iNvp6JdNPUQ1mUt+xn7je1pAXcHn8e6mCDsY276A+epXi/R
r1v2pDyT91PO9mW0wyyJw1ckDjvKPZsi8aWMdtfcGMe0XWfYP3EF9jVi58Bu
at7v0K+WvhK8zNl+8D/rXgXkUc8NKoScbwZeBp83fPIwPtfhDMYn+YOHfbhp
P7DD8UT0G/67sO8znvvQbvDDOt0cD71pgUmwp+p9FPJop4ZQvl2MX9p4yQfD
yc8YKHE2kbzstN+ohykSN89sZn9hLexmr1pJP7ztQF6bHHnvNva/if3rnvsN
4/rEa+hvd7aIeugHvqZrJO25ZDrGrcYdsKudkXEa48WfH0b/n2Gwr1aelY/x
nutLKOd66nWXM/jZH75F/4w/TH6VtKMxQu7bTYmzkv/tbOE7WeqBH78nX3UR
71sLR/DSBj4Lnsal+fAbe0gK9Gp2zUS/Gatw/MYA+pWrP+Oq8yPMs2NdaQff
ONjFyP/iEvUeBL5a5wW/or9/BMaVACfoz3T5hPxi+uM+Ks7ulG9aEeXvJvHl
dclvAcKzUfLwhhqJQzc5L3w1/d06TrleKWc+eGzRT290ZnyLo7+Y0UsY7/8I
I65wol71LPrTJg1yGclp5LfHAfJaD75G/LGX94N/K/OGMs5M9WW8uvE8+Kmj
V2G+8Ukl40DqBvI7VUj5fSSeNDJPmG9KvPQT+x29Td7DmA+01U+R30c65NGm
XCYWRFLOjY7Uz5ZxXDerhve0rAmo1NSx7VnB/B/xA+Nh4mDmy7hU5ovqKN7f
mgbmG/9H6FeeXcv26BYc17K57hTziD00QeID7Wc1Sb1pSH07QvKk1HFWe/LU
RzOvag2nIJfetxf9c0YA/SxpOOsU1aTdyoaTx3Jv+s2vAcznHmvpt32cqPcJ
LWEXvTqWefG9FNqnpBDjSlYQ7/ODLozH+b/Absp/boOfrZTCf6zvelOOqZ/T
XmWFUpdInesvdUym1AN+kgePSN29hXFXT/Flvi3vgv2MxGPYX/8pD3JbHm4Y
Nwt8eQ9bb6E94lZS7qJelC/XgP9pKW0YV0Kv0A+DXwdf27s75DeG7kUcUcbm
0l9HOwLV6EyMK/Em9RCcTp51OczHLqelvhH7vS/157eS5yX/64VSr2k/s3/M
PcbLMT68J1XnIK/Raiwxh/lOf3kJ5NI6d7yOeVNzC9Au+g7xz9qwnfkvdBvb
IbXMF7YP40j9fsw3xpczvm7YibirNPtAD1rYQIkzt5gnvo6lPtq9CH9RHffR
XldY92tNksfnsS4zXpO82Enq1eR/s/1wOvRkxE+DHo0rbpBPWTWbcb1dLFBf
thdohScgDpqLCnOwT91+4og7QMv5OvO7290s7LP1HxlA94Vo2329L+Dc4Utx
jhkVyjz6dDeg1ucGeFsbD9C/O1Qyzj3DutXYzjyn+Mp342dyDzeKn8p3meX+
Nft372Cd9N0Fxu3NuWnof/cx8pN5dNA5zJ/ZCnZQ8nozX7k2wT7asfkY14bM
BC+l/ttMrPO6h3xn5d07ifl9WiLfG9MuMP/XhWK+mnQ3G/3ukdCP9uFF1Avm
hWbWfdVOrKOK+jJeupVLHJX80FruXUvyUhIYP+38D2jH1EjmaedanK+HdUK9
Yb788TGsS79K+SN2MH/v8IGf6VO6QQ7l9X6U6/hCzmt2gJ7MHz5AW6l6A/bT
rXig6REHfubh078AXXrQvh/WQx/GZhV8rTkK6lar63Tcdzt7HON8IPOfWS31
Z0/JCwUSVx7Rf62jbcn7rRmoe+3o07Cb8uqog+j/6IUjmLcnMh3jnzVk0u57
oHdr3HS09Z3DcoGfRlHvpzsAjUGN1EPxSd43l2LW1xvfhT7t4I7oN2a3h7+q
/QLAT1n7PvzYcIiGPvXmWvKri2E+elXqy6fFXsOkftnOuGM1SN3y0yzJh5MY
Nzz6Q5/2ypE4R63fegLzYuexjow1yX+xK+apdx7AP+2rGvUT78l47yrfRx7O
jFcHPBm/2lus0we7MS6e28v426oe51uLf+N3Rup97Gee0Nl/eSHiuLHuPcrd
Q+qUCPle0CXONMg9vCXvDgXvsP/Fen6XvT0IdaU+6RBQKznF80J1+slZ6xr9
KYfxc9hhfu+FL+X3bfQc1hu3gtG2Lj7DvDKqF+uEAU7Mp5WsA8wO9zFPC3Bn
3nnpDL8Xw3XqIXon+jWbectMS6HcSeKP7vLdcF7ed/zFnqnyPnTyEtFbJ+5e
D3l0J1/Gqx4b+N038TLrteVHWL/l9CaPpfw+VzM8eM6EjsS301m33btKf1rQ
necn8L6baSN5XjXrH7VqAeuLnnwPUO7EEbd+QP6+BawvUvk9p2dLfNwjvLyl
Hg2S79kiqV/GsQ5VSlIp16cLOT7flW3lGPcNj5f6k6g1fsT9lBPEijz6gR+/
X+xRe3juapPtdczLxiS+e2hX89meS3sYAYuoj538rjZqvmKdl/IS5TG5Tlkj
75YnJM8dlLiZJvm8q9jtrMSdblLntJJ3s8qzkh9/JP+Jy9i/P5moHeX8dvKd
lUD/MLbJO8d8vrMppTnc54TU729JHXybcd0YxXcnyzmJWOpPuYL4nWCUD+U+
+zKILUS+Y3K/nhIe14RXL3nP6yt5/aTI8y+RL5zzlPwCke8Y+7vRPkbZAcpx
UL7zix5yXlWT3HO+A5qe8v6jsQ428m7wPAf6ldrIdz8z5BTlej+G870juN/M
uVyXy3OVRM5Xtog/thZ508UuJcJnh+hvpnzvuoge5H3Rqvm//WR8udTpGfLO
e03ePXLIx9jXTDzTLPYm6jbfgdTpfBewdxKV7o+53wqi1iTvXG+yXja20I7a
HH6/6l7iX5nyvuwuee1LxkXzT4n/y4X3Q+GriL/elfV9xM7uEm89hMd98lLS
5Hujg7xzlEo8nihYz/urhVJeO5B8jCXkoe+S+yLv5soY2WeeyHdd4uAA0ber
2KFY2ktE/+/J++BEwY6C6U/wf7JOk2Q=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 28}, {28, 0}}, {0., 
       1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
HspxoU/a/wentalg
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
9B8Pykn8qhXlcqUeKIcd+pT+H4pOtmE=
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
3v8D9O9qfQ==
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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

       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxVmHl4T1cax689pi1Cq7Xf1FJqm4qRmpq6kqp6RClNq3S4aYWWhqJKUbmW
2katJS1VV61pqbWhls6VRCSCCFIkITdBUsTWoCGW0ffz+mPyPL+8zzn3nPe8
33c/J+i94b0GlTUMY1TAw3+9Isd0Gjky8rPeFf8aREV+1K5t1F8f6+rv4Z9v
X73a8SE1g6Bu5z+EOtkXmW8FNbbfYH5xEeuWXxbqn4JaE64x3+4661YXM9+P
sdmRsXECfpbN2PM416nDOsuA+pOUT1Xl0wK5DBtq/cK5zswrjGfrvmDGXrqu
/17H96Dmr3pOE767QznfL9b55ZfY95PiXAEu4/0L0KXMO9F6/iLV2x9Qbwzr
vXHKfzbr7Inwt6dAvf3o08qHn9edsT1az3tHv89Abv80/Owwxm4j9OLXVjnO
wse4zzrvB5V/kY53sM4ogHqfFvA94xDz1hnOq865/iKVe2A289uxm9fgT/Yd
gpq5JXy/fof1vUpZN5F588At+C9nbGeo33ys51y8+n/2NieonzxQfzqt32PV
Dx9gHzdK14eqPzyldqicgz5urGY++t4VmXevFwmf3Dyh3rv9r6Cv49DgD5H7
xJfweXm76ucc9GfwWhXucm4TxbcB6k8At9lI9TBb46gHOKxk5DMexcMo5s2G
6jcaP37rm+x/ZLdT6h+PpcCn/kJoXMQlmT975ZzwKS3Ol/1tVsrYqD71vKwL
+rJA5Gi/5IKsj+8h+I1aNcHduAr8wzYib88T8K+LP7glqvcPkMsqAZ+zBH0Y
VcHvjtc40/jxwwpZ/wH2tEPUn0PUfpka9zl6TlYM+wr6XpZxvxO+8P/7xDNC
jzWTsVv7eLasy0o+Iftb38gR/jNDc+X8sU3PYpdgwW03P3hR9ufHFrHuiuC2
iicj/52fOD8X3EYNzTflwOf0Ba/bmbE3Gn34jbCXHQpuI17xlFXaBZx2jVPs
u7lezvUmDyqU9WezBY//fKzI7Uc9K3iMN3ofl3Xd3j0mOCJ3HZX5ASUyNuK6
y3f/H28KdYeap+S8Zqlif7Plmovov6Wc51frwPn+IuQsTMXvgs5Dx2i8LVN7
Psp/MxRfK80XU35HD5s0Tw48CM7581nXaTR+FXMO//skWOzinD2SJXIkDjsp
422zBaf56mGR34muKLisegfThP+gsFTh507+BXtV3C7fh1+Ref/TRuIPZrOp
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
       "], {{0, 28}, {28, 
       0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
8f3d9qa8M2mH25xv/1ze3wDxV5ZO
       "], {{0, 28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}], ",", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 
       28}, {28, 0}}, {0., 1.},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Real", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{28, 28},
     PlotRange->{{0, 28}, {0, 28}}]}], "}"}],
  StripOnInput->False,
  Magnification->4 Inherited]], "Output",
 CellChangeTimes->{{3.739811234693652*^9, 3.739811238471654*^9}, {
   3.7398113057066545`*^9, 3.7398113113066587`*^9}, 3.7398114035416527`*^9, {
   3.7398123458803415`*^9, 3.7398123537693424`*^9}, {3.739812387172079*^9, 
   3.73981240415008*^9}, {3.7398125162916813`*^9, 3.7398125284106874`*^9}, 
   3.739812645727603*^9, {3.7398167233396544`*^9, 3.739816735836159*^9}, 
   3.7398248010308933`*^9, {3.7399157358104873`*^9, 3.7399157706464877`*^9}, {
   3.7399158216105194`*^9, 3.7399158292864914`*^9}, {3.7399169315092096`*^9, 
   3.739916952125207*^9}, {3.739918361683551*^9, 3.7399183674163733`*^9}, {
   3.739918412466813*^9, 3.7399184165299644`*^9}, {3.739918682540408*^9, 
   3.739918685523666*^9}, {3.739918725729963*^9, 3.7399187355024767`*^9}, 
   3.7472791485091734`*^9, 3.801897714143067*^9, 3.8036700634372272`*^9, 
   3.803688587293024*^9, {3.803688687825466*^9, 3.803688707089686*^9}, 
   3.803709599038917*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"7b991a5a-d75d-42a2-9ac0-2389316f62d4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1631, 855},
WindowMargins->{{-3, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[583, 22, 163, 3, 67, "Subsection",ExpressionUUID->"a97b6548-7444-4f52-8385-55f7e3aac111"],
Cell[749, 27, 987, 22, 116, "Input",ExpressionUUID->"d8eb4aa3-ea91-4560-a5e4-89e2aa5ad890"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1773, 54, 230, 4, 67, "Subsection",ExpressionUUID->"8fef335a-119a-4684-9c73-4161c696fc69"],
Cell[CellGroupData[{
Cell[2028, 62, 469, 10, 37, "Input",ExpressionUUID->"37b3c95e-cf6e-4345-8213-2834e7838772"],
Cell[2500, 74, 14820, 297, 77, "Output",ExpressionUUID->"b376d340-093a-47b3-8ab3-2a0570dc7e4a"]
}, Open  ]],
Cell[17335, 374, 2698, 44, 324, "Input",ExpressionUUID->"b61fd62d-6249-4276-95f6-4e6f7dbc912f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20070, 423, 170, 3, 67, "Subsection",ExpressionUUID->"1d510bfb-5494-494c-a291-1cda52559c0d"],
Cell[20243, 428, 521, 9, 102, "Text",ExpressionUUID->"ddd42f53-221c-470b-b127-c99cc96f0098"],
Cell[20767, 439, 2597, 55, 202, "Input",ExpressionUUID->"5ffd5e94-746f-4af8-ba2d-32f494356219"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23401, 499, 159, 3, 67, "Subsection",ExpressionUUID->"b8773a27-cd1e-48ec-8d51-81bf6ff63b4b"],
Cell[23563, 504, 3313, 56, 506, "Input",ExpressionUUID->"edbf0ee2-cf30-4d82-9dab-f9b0c346225e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26913, 565, 159, 3, 67, "Subsection",ExpressionUUID->"1510df37-b6e3-4059-8d8a-68933a55834f"],
Cell[CellGroupData[{
Cell[27097, 572, 3851, 72, 272, "Input",ExpressionUUID->"f0396d21-c023-4886-859b-4555aa089e09"],
Cell[30951, 646, 43036, 875, 94, "Output",ExpressionUUID->"88ad8124-c409-4861-877d-f1273cefbc62"]
}, Open  ]],
Cell[74002, 1524, 201, 3, 37, "Input",ExpressionUUID->"cd8471b6-4cdc-45fd-b167-bbeeefcad251"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74240, 1532, 262, 4, 67, "Subsection",ExpressionUUID->"1de5c636-2c07-4bc9-98bb-1e273b057422"],
Cell[CellGroupData[{
Cell[74527, 1540, 3477, 71, 402, "Input",ExpressionUUID->"a483c109-1890-41a9-a395-427c3de3b8fa"],
Cell[78007, 1613, 53489, 1075, 94, "Output",ExpressionUUID->"e3b4c9e8-40d5-4420-b93a-73adbc9d50d4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[131545, 2694, 156, 3, 67, "Subsection",ExpressionUUID->"ad5e5560-d72d-44fd-87ec-5a9600863698"],
Cell[CellGroupData[{
Cell[131726, 2701, 1818, 35, 220, "Input",ExpressionUUID->"7d2529f9-03da-4c54-9557-09b8b5cee6ea"],
Cell[133547, 2738, 37992, 774, 94, "Output",ExpressionUUID->"812c9923-4030-4eac-a0b1-12c26cea8cc7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[171588, 3518, 333, 5, 71, "Section",ExpressionUUID->"1625ce47-7e38-4ccf-93bd-d49aa95d21db"],
Cell[CellGroupData[{
Cell[171946, 3527, 170, 3, 67, "Subsection",ExpressionUUID->"0cd985cc-3af6-4533-854e-e0be71215472"],
Cell[CellGroupData[{
Cell[172141, 3534, 7583, 134, 844, "Input",ExpressionUUID->"31419281-fdd4-4dbc-8105-f2287a04b63a"],
Cell[179727, 3670, 130421, 2512, 94, "Output",ExpressionUUID->"e9c5c340-a654-403c-a0bd-5cdb3413b020"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[310197, 6188, 308, 5, 67, "Subsection",ExpressionUUID->"4d8708ae-94a3-460d-b70f-ce3a512d387e"],
Cell[310508, 6195, 1751, 28, 37, "Input",ExpressionUUID->"a7c64f03-a37b-4ff4-8fa9-4bfc6c4beb84"],
Cell[312262, 6225, 694, 13, 102, "Text",ExpressionUUID->"70c9dd08-3049-4aeb-b119-b08f2d25cd1c"],
Cell[CellGroupData[{
Cell[312981, 6242, 2224, 44, 116, "Input",ExpressionUUID->"bc184bf2-cdcb-4b06-8822-87c061f3da92"],
Cell[315208, 6288, 17776, 413, 201, "Output",ExpressionUUID->"a3ec0b99-4ee5-4ea7-a46c-02ad845c398a"]
}, Open  ]],
Cell[332999, 6704, 570, 13, 64, "Input",ExpressionUUID->"428efe7e-29c3-462a-8c93-0313a0eddbc5"],
Cell[CellGroupData[{
Cell[333594, 6721, 4451, 83, 298, "Input",ExpressionUUID->"8fceabf9-ec10-47c1-a295-9b3b7892aa3b"],
Cell[338048, 6806, 126506, 2454, 392, "Output",ExpressionUUID->"b998c32d-47bc-40c2-b3f2-a2c1eb9d9fec"],
Cell[464557, 9262, 365, 6, 42, "Output",ExpressionUUID->"26e090e5-acdc-4652-b747-341d2e2c2b93"]
}, Open  ]],
Cell[464937, 9271, 271, 6, 37, "Input",ExpressionUUID->"827c0a2d-1b62-4823-a667-f5e5b7f9f8d9"],
Cell[465211, 9279, 148, 2, 37, "Input",ExpressionUUID->"163e927a-77f8-4777-abc2-b7e7889116d4"],
Cell[465362, 9283, 371, 8, 37, "Input",ExpressionUUID->"6e35fbec-1ccd-4afc-be12-9b66b55a58de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465770, 9296, 158, 3, 67, "Subsection",ExpressionUUID->"2a188410-2540-4cfd-b762-b5b3e6ba0374"],
Cell[CellGroupData[{
Cell[465953, 9303, 3655, 72, 246, "Input",ExpressionUUID->"b9810408-eec2-4e6e-bc82-b51ac6a95600"],
Cell[469611, 9377, 205850, 3599, 1213, "Output",ExpressionUUID->"7f1cd85e-efcd-406d-bc88-eeff121b2b42"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[675510, 12982, 237, 4, 67, "Subsection",ExpressionUUID->"246c8d64-10fc-4255-80c5-fbb841c1dc2c"],
Cell[CellGroupData[{
Cell[675772, 12990, 560, 11, 64, "Input",ExpressionUUID->"41104c8a-f3f7-4f2d-ab05-3fb70c2457fb"],
Cell[676335, 13003, 128056, 2481, 94, "Output",ExpressionUUID->"8f4b359e-a0dd-4b1e-a11d-29588d41511b"],
Cell[804394, 15486, 126386, 2452, 392, "Output",ExpressionUUID->"6ba55c29-640b-4016-9650-c665588d8cfb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[930817, 17943, 2285, 62, 324, "Input",ExpressionUUID->"a5fc40dd-19de-48db-a9fa-6ea10c02e2bc"],
Cell[933105, 18007, 203789, 3565, 357, "Output",ExpressionUUID->"af8f1222-a9ae-4d6b-b1b5-a284e33516b6"],
Cell[1136897, 21574, 363, 9, 29, "Message",ExpressionUUID->"afc3b62b-413c-4158-8b3a-004f574af9fe"],
Cell[1137263, 21585, 242, 5, 62, "Output",ExpressionUUID->"2f48805a-b2b1-49d3-a1fe-2e9ee8c29733"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1137554, 21596, 164, 3, 67, "Subsection",ExpressionUUID->"0da17c6d-e25a-41ca-a17a-520718961ef0"],
Cell[1137721, 21601, 198, 7, 102, "Text",ExpressionUUID->"c64f3881-359a-4e44-a0d6-5659ecc689b2"],
Cell[1137922, 21610, 201603, 3526, 1213, "Output",ExpressionUUID->"b31351cd-2563-47a7-a7b7-7a5e9c9bc48b"],
Cell[1339528, 25138, 405, 10, 131, "Text",ExpressionUUID->"95ae8a1a-71d1-41c8-829e-c0fc2bbc982e"],
Cell[1339936, 25150, 205850, 3599, 1213, "Output",ExpressionUUID->"7b991a5a-d75d-42a2-9ac0-2389316f62d4"]
}, Open  ]]
}, Open  ]]
}
]
*)

